{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_cCA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_gasToken",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "BalanceWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "hostContract",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "offerer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "OnSale",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousOperator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newOperator",
          "type": "address"
        }
      ],
      "name": "OperatorChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "hostContract",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "Sold",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "addonPay",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_hostContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "buy",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_hostContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "buyWithCC",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOperator",
          "type": "address"
        }
      ],
      "name": "changeOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "price",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_hostContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "sell",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        }
      ],
      "name": "setFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_gasToken",
          "type": "address"
        }
      ],
      "name": "setGasToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "viewBalances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawBalance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/BookTradable.sol",
    "1": "contracts/CultureCoin.sol",
    "10": "contracts/mini_mart.sol",
    "12": "contracts/send_receive.sol",
    "13": "openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
    "14": "openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
    "15": "openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol",
    "16": "openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol",
    "17": "openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20BurnableUpgradeable.sol",
    "18": "openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/IERC20MetadataUpgradeable.sol",
    "19": "openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
    "2": "contracts/CultureCoinWrapper.sol",
    "20": "openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
    "21": "openzeppelin-solidity/contracts/access/Ownable.sol",
    "22": "openzeppelin-solidity/contracts/security/ReentrancyGuard.sol",
    "23": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
    "24": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
    "25": "openzeppelin-solidity/contracts/token/ERC20/extensions/ERC20Burnable.sol",
    "26": "openzeppelin-solidity/contracts/token/ERC20/extensions/IERC20Metadata.sol",
    "27": "openzeppelin-solidity/contracts/token/ERC20/utils/SafeERC20.sol",
    "28": "openzeppelin-solidity/contracts/token/ERC721/ERC721.sol",
    "29": "openzeppelin-solidity/contracts/token/ERC721/IERC721.sol",
    "3": "contracts/ERC721BookTradable.sol",
    "30": "openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol",
    "31": "openzeppelin-solidity/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
    "32": "openzeppelin-solidity/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
    "33": "openzeppelin-solidity/contracts/token/ERC721/extensions/IERC721Metadata.sol",
    "34": "openzeppelin-solidity/contracts/utils/Address.sol",
    "35": "openzeppelin-solidity/contracts/utils/Context.sol",
    "36": "openzeppelin-solidity/contracts/utils/Strings.sol",
    "37": "openzeppelin-solidity/contracts/utils/introspection/ERC165.sol",
    "38": "openzeppelin-solidity/contracts/utils/introspection/IERC165.sol",
    "39": "openzeppelin-solidity/contracts/utils/math/SafeMath.sol",
    "4": "contracts/Stakeable.sol",
    "5": "contracts/common/meta-transactions/ContentMixin.sol",
    "6": "contracts/common/meta-transactions/EIP712Base.sol",
    "7": "contracts/common/meta-transactions/Initializable.sol",
    "8": "contracts/common/meta-transactions/NativeMetaTransaction.sol"
  },
  "ast": {
    "absolutePath": "contracts/mini_mart.sol",
    "exportedSymbols": {
      "Address": [
        8314
      ],
      "AddressUpgradeable": [
        9125
      ],
      "BookRegistry": [
        4001
      ],
      "BookTradable": [
        2744
      ],
      "Context": [
        9409
      ],
      "ContextMixin": [
        6038
      ],
      "ContextUpgradeable": [
        9270
      ],
      "CultureCoin": [
        3937
      ],
      "CultureCoinWrapper": [
        4848
      ],
      "EIP712Base": [
        9386
      ],
      "ERC165": [
        9594
      ],
      "ERC20": [
        8821
      ],
      "ERC20Burnable": [
        8882
      ],
      "ERC20BurnableUpgradeable": [
        5997
      ],
      "ERC20Upgradeable": [
        5933
      ],
      "ERC721": [
        7165
      ],
      "ERC721BookTradable": [
        4185
      ],
      "ERC721Enumerable": [
        7503
      ],
      "IERC165": [
        9682
      ],
      "IERC20": [
        4263
      ],
      "IERC20Metadata": [
        9650
      ],
      "IERC20MetadataUpgradeable": [
        9228
      ],
      "IERC20Upgradeable": [
        9203
      ],
      "IERC721": [
        9525
      ],
      "IERC721Enumerable": [
        9625
      ],
      "IERC721Metadata": [
        9570
      ],
      "IERC721Receiver": [
        9543
      ],
      "Initializable": [
        5263
      ],
      "MiniMart": [
        1225
      ],
      "NativeMetaTransaction": [
        6237
      ],
      "Ownable": [
        6347
      ],
      "OwnableDelegateBook": [
        3995
      ],
      "Receiver": [
        3944
      ],
      "ReentrancyGuard": [
        3984
      ],
      "ReentrancyGuardUpgradeable": [
        5322
      ],
      "SafeERC20": [
        4487
      ],
      "SafeMath": [
        8018
      ],
      "Stakeable": [
        5189
      ],
      "Strings": [
        7706
      ]
    },
    "id": 1226,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 711,
        "literals": [
          "solidity",
          "0.8",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:22:10"
      },
      {
        "absolutePath": "contracts/BookTradable.sol",
        "file": "./BookTradable.sol",
        "id": 712,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1226,
        "sourceUnit": 2745,
        "src": "56:28:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/CultureCoin.sol",
        "file": "./CultureCoin.sol",
        "id": 713,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1226,
        "sourceUnit": 3938,
        "src": "85:27:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/send_receive.sol",
        "file": "./send_receive.sol",
        "id": 714,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1226,
        "sourceUnit": 3945,
        "src": "113:28:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/security/ReentrancyGuard.sol",
        "file": "../openzeppelin-solidity/contracts/security/ReentrancyGuard.sol",
        "id": 715,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1226,
        "sourceUnit": 3985,
        "src": "142:73:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 716,
              "name": "Receiver",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3944,
              "src": "238:8:10"
            },
            "id": 717,
            "nodeType": "InheritanceSpecifier",
            "src": "238:8:10"
          },
          {
            "baseName": {
              "id": 718,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3984,
              "src": "248:15:10"
            },
            "id": 719,
            "nodeType": "InheritanceSpecifier",
            "src": "248:15:10"
          }
        ],
        "canonicalName": "MiniMart",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1225,
        "linearizedBaseContracts": [
          1225,
          3984,
          3944
        ],
        "name": "MiniMart",
        "nameLocation": "226:8:10",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "id": 729,
            "name": "OnSale",
            "nameLocation": "277:6:10",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 728,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 721,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "hostContract",
                  "nameLocation": "300:12:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 729,
                  "src": "284:28:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 720,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "284:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 723,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "offerer",
                  "nameLocation": "330:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 729,
                  "src": "314:23:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 722,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "314:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 725,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "344:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 729,
                  "src": "339:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 724,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "339:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 727,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "358:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 729,
                  "src": "353:10:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 726,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "353:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "283:81:10"
            },
            "src": "271:94:10"
          },
          {
            "anonymous": false,
            "id": 737,
            "name": "Sold",
            "nameLocation": "376:4:10",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 736,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 731,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "hostContract",
                  "nameLocation": "397:12:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 737,
                  "src": "381:28:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 730,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "381:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 733,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "416:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 737,
                  "src": "411:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 732,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "411:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 735,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "433:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 737,
                  "src": "425:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 734,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "425:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "380:59:10"
            },
            "src": "370:70:10"
          },
          {
            "anonymous": false,
            "id": 743,
            "name": "BalanceWithdrawn",
            "nameLocation": "451:16:10",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 742,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 739,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "beneficiary",
                  "nameLocation": "485:11:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 743,
                  "src": "469:27:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 738,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "469:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 741,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "503:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 743,
                  "src": "498:11:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 740,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "498:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "468:42:10"
            },
            "src": "445:66:10"
          },
          {
            "anonymous": false,
            "id": 749,
            "name": "OperatorChanged",
            "nameLocation": "522:15:10",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 748,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 745,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "previousOperator",
                  "nameLocation": "547:16:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 749,
                  "src": "539:24:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 744,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "539:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 747,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newOperator",
                  "nameLocation": "573:11:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 749,
                  "src": "565:19:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 746,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "565:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "538:47:10"
            },
            "src": "516:70:10"
          },
          {
            "constant": false,
            "id": 751,
            "mutability": "mutable",
            "name": "operator",
            "nameLocation": "600:8:10",
            "nodeType": "VariableDeclaration",
            "scope": 1225,
            "src": "592:16:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 750,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "592:7:10",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 753,
            "mutability": "mutable",
            "name": "operatorFee",
            "nameLocation": "630:11:10",
            "nodeType": "VariableDeclaration",
            "scope": 1225,
            "src": "614:27:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 752,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "614:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 757,
            "mutability": "mutable",
            "name": "balances",
            "nameLocation": "674:8:10",
            "nodeType": "VariableDeclaration",
            "scope": 1225,
            "src": "648:34:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 756,
              "keyType": {
                "id": 754,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "657:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "648:25:10",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 755,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "668:4:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "ad9b8024",
            "id": 763,
            "mutability": "mutable",
            "name": "price",
            "nameLocation": "744:5:10",
            "nodeType": "VariableDeclaration",
            "scope": 1225,
            "src": "689:60:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(uint256 => uint256))"
            },
            "typeName": {
              "id": 762,
              "keyType": {
                "id": 758,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "697:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "689:47:10",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(uint256 => uint256))"
              },
              "valueType": {
                "id": 761,
                "keyType": {
                  "id": 759,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "716:7:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "708:27:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                  "typeString": "mapping(uint256 => uint256)"
                },
                "valueType": {
                  "id": 760,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "727:7:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 765,
            "mutability": "mutable",
            "name": "cCA",
            "nameLocation": "772:3:10",
            "nodeType": "VariableDeclaration",
            "scope": 1225,
            "src": "756:19:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 764,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "756:7:10",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "documentation": {
              "id": 766,
              "nodeType": "StructuredDocumentation",
              "src": "784:19:10",
              "text": "Adminisistrator"
            },
            "id": 768,
            "mutability": "mutable",
            "name": "gasToken",
            "nameLocation": "824:8:10",
            "nodeType": "VariableDeclaration",
            "scope": 1225,
            "src": "808:24:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 767,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "808:7:10",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 794,
              "nodeType": "Block",
              "src": "922:162:10",
              "statements": [
                {
                  "expression": {
                    "id": 780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 778,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 751,
                      "src": "959:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 779,
                      "name": "_operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 771,
                      "src": "970:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "959:20:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 781,
                  "nodeType": "ExpressionStatement",
                  "src": "959:20:10"
                },
                {
                  "expression": {
                    "id": 784,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 782,
                      "name": "operatorFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 753,
                      "src": "989:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 783,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1003:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "989:15:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 785,
                  "nodeType": "ExpressionStatement",
                  "src": "989:15:10"
                },
                {
                  "expression": {
                    "id": 788,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 786,
                      "name": "cCA",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 765,
                      "src": "1037:3:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 787,
                      "name": "_cCA",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 773,
                      "src": "1043:4:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1037:10:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 789,
                  "nodeType": "ExpressionStatement",
                  "src": "1037:10:10"
                },
                {
                  "expression": {
                    "id": 792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 790,
                      "name": "gasToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 768,
                      "src": "1057:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 791,
                      "name": "_gasToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 775,
                      "src": "1068:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1057:20:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 793,
                  "nodeType": "ExpressionStatement",
                  "src": "1057:20:10"
                }
              ]
            },
            "documentation": {
              "id": 769,
              "nodeType": "StructuredDocumentation",
              "src": "836:16:10",
              "text": "culturecoin."
            },
            "id": 795,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 776,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 771,
                  "mutability": "mutable",
                  "name": "_operator",
                  "nameLocation": "878:9:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 795,
                  "src": "870:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 770,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "870:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 773,
                  "mutability": "mutable",
                  "name": "_cCA",
                  "nameLocation": "897:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 795,
                  "src": "889:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 772,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "889:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 775,
                  "mutability": "mutable",
                  "name": "_gasToken",
                  "nameLocation": "911:9:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 795,
                  "src": "903:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 774,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "903:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "869:52:10"
            },
            "returnParameters": {
              "id": 777,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "922:0:10"
            },
            "scope": 1225,
            "src": "857:227:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 812,
              "nodeType": "Block",
              "src": "1129:138:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 804,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 801,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1147:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 802,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1147:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 803,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 751,
                          "src": "1161:8:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1147:22:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920746865206f70657261746f72206d6179206368616e6765207468652066656520666f7220746865206d61726b6574706c6163652e",
                        "id": 805,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1171:59:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6428c06a031f3c3e4236c9d0a4e362de6d27ba208fb2ff2a2624348dbed76910",
                          "typeString": "literal_string \"Only the operator may change the fee for the marketplace.\""
                        },
                        "value": "Only the operator may change the fee for the marketplace."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6428c06a031f3c3e4236c9d0a4e362de6d27ba208fb2ff2a2624348dbed76910",
                          "typeString": "literal_string \"Only the operator may change the fee for the marketplace.\""
                        }
                      ],
                      "id": 800,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1139:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 806,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1139:92:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 807,
                  "nodeType": "ExpressionStatement",
                  "src": "1139:92:10"
                },
                {
                  "expression": {
                    "id": 810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 808,
                      "name": "operatorFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 753,
                      "src": "1242:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 809,
                      "name": "_fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 797,
                      "src": "1256:4:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1242:18:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 811,
                  "nodeType": "ExpressionStatement",
                  "src": "1242:18:10"
                }
              ]
            },
            "functionSelector": "69fe0e2d",
            "id": 813,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFee",
            "nameLocation": "1099:6:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 798,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 797,
                  "mutability": "mutable",
                  "name": "_fee",
                  "nameLocation": "1114:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 813,
                  "src": "1106:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 796,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1106:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1105:14:10"
            },
            "returnParameters": {
              "id": 799,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1129:0:10"
            },
            "scope": 1225,
            "src": "1090:177:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 863,
              "nodeType": "Block",
              "src": "1377:307:10",
              "statements": [
                {
                  "assignments": [
                    828
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 828,
                      "mutability": "mutable",
                      "name": "hostContract",
                      "nameLocation": "1400:12:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 863,
                      "src": "1387:25:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BookTradable_$2744",
                        "typeString": "contract BookTradable"
                      },
                      "typeName": {
                        "id": 827,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 826,
                          "name": "BookTradable",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2744,
                          "src": "1387:12:10"
                        },
                        "referencedDeclaration": 2744,
                        "src": "1387:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BookTradable_$2744",
                          "typeString": "contract BookTradable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 832,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 830,
                        "name": "_hostContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 815,
                        "src": "1428:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 829,
                      "name": "BookTradable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2744,
                      "src": "1415:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_BookTradable_$2744_$",
                        "typeString": "type(contract BookTradable)"
                      }
                    },
                    "id": 831,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1415:27:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BookTradable_$2744",
                      "typeString": "contract BookTradable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1387:55:10"
                },
                {
                  "assignments": [
                    834
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 834,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "1460:5:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 863,
                      "src": "1452:13:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 833,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1452:7:10",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 839,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 837,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 817,
                        "src": "1489:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 835,
                        "name": "hostContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 828,
                        "src": "1468:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BookTradable_$2744",
                          "typeString": "contract BookTradable"
                        }
                      },
                      "id": 836,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6493,
                      "src": "1468:20:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view external returns (address)"
                      }
                    },
                    "id": 838,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1468:30:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1452:46:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 844,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 841,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1516:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 842,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1516:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 843,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 834,
                          "src": "1530:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1516:19:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616c6c657220646f6573206e6f74206f776e20746f6b656e",
                        "id": 845,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1537:27:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_59018bd8969d23bfae3d66d87c0d83a0d1ca19ee65b04d429e5086fdc0c74174",
                          "typeString": "literal_string \"Caller does not own token\""
                        },
                        "value": "Caller does not own token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_59018bd8969d23bfae3d66d87c0d83a0d1ca19ee65b04d429e5086fdc0c74174",
                          "typeString": "literal_string \"Caller does not own token\""
                        }
                      ],
                      "id": 840,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1508:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 846,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1508:57:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 847,
                  "nodeType": "ExpressionStatement",
                  "src": "1508:57:10"
                },
                {
                  "expression": {
                    "id": 854,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 848,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 763,
                          "src": "1576:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(uint256 => uint256))"
                          }
                        },
                        "id": 851,
                        "indexExpression": {
                          "id": 849,
                          "name": "_hostContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 815,
                          "src": "1582:13:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1576:20:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 852,
                      "indexExpression": {
                        "id": 850,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 817,
                        "src": "1597:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1576:30:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 853,
                      "name": "_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 819,
                      "src": "1609:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1576:39:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 855,
                  "nodeType": "ExpressionStatement",
                  "src": "1576:39:10"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 857,
                        "name": "_hostContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 815,
                        "src": "1638:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 858,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 834,
                        "src": "1653:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 859,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 817,
                        "src": "1660:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 860,
                        "name": "_price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 819,
                        "src": "1670:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 856,
                      "name": "OnSale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 729,
                      "src": "1631:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 861,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1631:46:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 862,
                  "nodeType": "EmitStatement",
                  "src": "1626:51:10"
                }
              ]
            },
            "functionSelector": "6a272462",
            "id": 864,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 822,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 821,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3983,
                  "src": "1347:12:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "1347:12:10"
              }
            ],
            "name": "sell",
            "nameLocation": "1282:4:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 820,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 815,
                  "mutability": "mutable",
                  "name": "_hostContract",
                  "nameLocation": "1295:13:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 864,
                  "src": "1287:21:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 814,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1287:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 817,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "1315:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 864,
                  "src": "1310:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 816,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1310:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 819,
                  "mutability": "mutable",
                  "name": "_price",
                  "nameLocation": "1330:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 864,
                  "src": "1325:11:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 818,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1325:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1286:51:10"
            },
            "returnParameters": {
              "id": 825,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 824,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 864,
                  "src": "1368:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 823,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1368:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1367:9:10"
            },
            "scope": 1225,
            "src": "1273:411:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 985,
              "nodeType": "Block",
              "src": "1771:906:10",
              "statements": [
                {
                  "assignments": [
                    875
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 875,
                      "mutability": "mutable",
                      "name": "hostContract",
                      "nameLocation": "1794:12:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 985,
                      "src": "1781:25:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BookTradable_$2744",
                        "typeString": "contract BookTradable"
                      },
                      "typeName": {
                        "id": 874,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 873,
                          "name": "BookTradable",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2744,
                          "src": "1781:12:10"
                        },
                        "referencedDeclaration": 2744,
                        "src": "1781:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BookTradable_$2744",
                          "typeString": "contract BookTradable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 879,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 877,
                        "name": "_hostContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 866,
                        "src": "1822:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 876,
                      "name": "BookTradable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2744,
                      "src": "1809:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_BookTradable_$2744_$",
                        "typeString": "type(contract BookTradable)"
                      }
                    },
                    "id": 878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1809:27:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BookTradable_$2744",
                      "typeString": "contract BookTradable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1781:55:10"
                },
                {
                  "assignments": [
                    881
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 881,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "1854:5:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 985,
                      "src": "1846:13:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 880,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1846:7:10",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 886,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 884,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 868,
                        "src": "1883:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 882,
                        "name": "hostContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 875,
                        "src": "1862:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BookTradable_$2744",
                          "typeString": "contract BookTradable"
                        }
                      },
                      "id": 883,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6493,
                      "src": "1862:20:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view external returns (address)"
                      }
                    },
                    "id": 885,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1862:30:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1846:46:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 894,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 888,
                              "name": "price",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 763,
                              "src": "1910:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(uint256 => uint256))"
                              }
                            },
                            "id": 890,
                            "indexExpression": {
                              "id": 889,
                              "name": "_hostContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 866,
                              "src": "1916:13:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1910:20:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 892,
                          "indexExpression": {
                            "id": 891,
                            "name": "_tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 868,
                            "src": "1931:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1910:30:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 893,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1943:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1910:34:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f2070726963652073657420666f72207468697320746f6b656e2e",
                        "id": 895,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1946:30:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bba66f191589c0d3de480d1dbb6a565e7325470d75a3ecff0ffb804baef813f8",
                          "typeString": "literal_string \"No price set for this token.\""
                        },
                        "value": "No price set for this token."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bba66f191589c0d3de480d1dbb6a565e7325470d75a3ecff0ffb804baef813f8",
                          "typeString": "literal_string \"No price set for this token.\""
                        }
                      ],
                      "id": 887,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1902:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1902:75:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 897,
                  "nodeType": "ExpressionStatement",
                  "src": "1902:75:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 906,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 899,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1995:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 900,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1995:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 901,
                              "name": "price",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 763,
                              "src": "2008:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(uint256 => uint256))"
                              }
                            },
                            "id": 903,
                            "indexExpression": {
                              "id": 902,
                              "name": "_hostContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 866,
                              "src": "2014:13:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2008:20:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 905,
                          "indexExpression": {
                            "id": 904,
                            "name": "_tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 868,
                            "src": "2029:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2008:30:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1995:43:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f7567682066756e647320746f206275792e",
                        "id": 907,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2040:26:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dfb89b98e04bd94f781af235c81056f763e610bc4a66697d2d34f3d9be540d75",
                          "typeString": "literal_string \"Not enough funds to buy.\""
                        },
                        "value": "Not enough funds to buy."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dfb89b98e04bd94f781af235c81056f763e610bc4a66697d2d34f3d9be540d75",
                          "typeString": "literal_string \"Not enough funds to buy.\""
                        }
                      ],
                      "id": 898,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1987:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 908,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1987:80:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 909,
                  "nodeType": "ExpressionStatement",
                  "src": "1987:80:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 913,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 881,
                        "src": "2116:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 914,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2123:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 915,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2123:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 916,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 868,
                        "src": "2135:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 910,
                        "name": "hostContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 875,
                        "src": "2078:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BookTradable_$2744",
                          "typeString": "contract BookTradable"
                        }
                      },
                      "id": 912,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFromRegistry",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2179,
                      "src": "2078:37:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2078:66:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 918,
                  "nodeType": "ExpressionStatement",
                  "src": "2078:66:10"
                },
                {
                  "expression": {
                    "id": 925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 919,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 763,
                          "src": "2155:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(uint256 => uint256))"
                          }
                        },
                        "id": 922,
                        "indexExpression": {
                          "id": 920,
                          "name": "_hostContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 866,
                          "src": "2161:13:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2155:20:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 923,
                      "indexExpression": {
                        "id": 921,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 868,
                        "src": "2176:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2155:30:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 924,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2188:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2155:34:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 926,
                  "nodeType": "ExpressionStatement",
                  "src": "2155:34:10"
                },
                {
                  "assignments": [
                    928
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 928,
                      "mutability": "mutable",
                      "name": "ownerFee",
                      "nameLocation": "2208:8:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 985,
                      "src": "2200:16:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 927,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2200:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 932,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 929,
                        "name": "hostContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 875,
                        "src": "2219:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BookTradable_$2744",
                          "typeString": "contract BookTradable"
                        }
                      },
                      "id": 930,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getRoyalty",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2395,
                      "src": "2219:23:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 931,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2219:25:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2200:44:10"
                },
                {
                  "assignments": [
                    934
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 934,
                      "mutability": "mutable",
                      "name": "operatorCut",
                      "nameLocation": "2263:11:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 985,
                      "src": "2255:19:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 933,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2255:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 942,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 941,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 938,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 935,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2278:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 936,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "2278:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 937,
                            "name": "operatorFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 753,
                            "src": "2290:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2278:23:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 939,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2277:25:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 940,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2305:3:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "2277:31:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2255:53:10"
                },
                {
                  "assignments": [
                    944
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 944,
                      "mutability": "mutable",
                      "name": "royalties",
                      "nameLocation": "2367:9:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 985,
                      "src": "2359:17:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 943,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2359:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 952,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 951,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 948,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 945,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2380:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 946,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "2380:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 947,
                            "name": "ownerFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 928,
                            "src": "2392:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2380:20:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 949,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2379:22:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 950,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2404:3:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "2379:28:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2359:48:10"
                },
                {
                  "expression": {
                    "id": 962,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 953,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 757,
                        "src": "2464:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 955,
                      "indexExpression": {
                        "id": 954,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 881,
                        "src": "2473:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2464:15:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 961,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 959,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 956,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2483:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 957,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "2483:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 958,
                          "name": "royalties",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 944,
                          "src": "2495:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2483:21:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 960,
                        "name": "operatorCut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 934,
                        "src": "2507:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2483:35:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2464:54:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 963,
                  "nodeType": "ExpressionStatement",
                  "src": "2464:54:10"
                },
                {
                  "expression": {
                    "id": 968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 964,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 757,
                        "src": "2528:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 966,
                      "indexExpression": {
                        "id": 965,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 751,
                        "src": "2537:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2528:18:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 967,
                      "name": "operatorCut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 934,
                      "src": "2550:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2528:33:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 969,
                  "nodeType": "ExpressionStatement",
                  "src": "2528:33:10"
                },
                {
                  "expression": {
                    "id": 976,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 970,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 757,
                        "src": "2571:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 974,
                      "indexExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 971,
                            "name": "hostContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 875,
                            "src": "2580:12:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BookTradable_$2744",
                              "typeString": "contract BookTradable"
                            }
                          },
                          "id": 972,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6282,
                          "src": "2580:18:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 973,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2580:20:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2571:30:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 975,
                      "name": "royalties",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 944,
                      "src": "2605:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2571:43:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 977,
                  "nodeType": "ExpressionStatement",
                  "src": "2571:43:10"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 979,
                        "name": "_hostContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 866,
                        "src": "2635:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 980,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 868,
                        "src": "2650:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 981,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2660:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 982,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "2660:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 978,
                      "name": "Sold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 737,
                      "src": "2630:4:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2630:40:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 984,
                  "nodeType": "EmitStatement",
                  "src": "2625:45:10"
                }
              ]
            },
            "functionSelector": "cce7ec13",
            "id": 986,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 871,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 870,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3983,
                  "src": "1750:12:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "1750:12:10"
              }
            ],
            "name": "buy",
            "nameLocation": "1699:3:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 869,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 866,
                  "mutability": "mutable",
                  "name": "_hostContract",
                  "nameLocation": "1711:13:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 986,
                  "src": "1703:21:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 865,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1703:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 868,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "1731:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 986,
                  "src": "1726:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 867,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1726:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1702:38:10"
            },
            "returnParameters": {
              "id": 872,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1771:0:10"
            },
            "scope": 1225,
            "src": "1690:987:10",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1112,
              "nodeType": "Block",
              "src": "2779:968:10",
              "statements": [
                {
                  "assignments": [
                    999
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 999,
                      "mutability": "mutable",
                      "name": "CC",
                      "nameLocation": "2801:2:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1112,
                      "src": "2789:14:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CultureCoin_$3937",
                        "typeString": "contract CultureCoin"
                      },
                      "typeName": {
                        "id": 998,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 997,
                          "name": "CultureCoin",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3937,
                          "src": "2789:11:10"
                        },
                        "referencedDeclaration": 3937,
                        "src": "2789:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CultureCoin_$3937",
                          "typeString": "contract CultureCoin"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1003,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1001,
                        "name": "gasToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 768,
                        "src": "2818:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1000,
                      "name": "CultureCoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3937,
                      "src": "2806:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_CultureCoin_$3937_$",
                        "typeString": "type(contract CultureCoin)"
                      }
                    },
                    "id": 1002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2806:21:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CultureCoin_$3937",
                      "typeString": "contract CultureCoin"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2789:38:10"
                },
                {
                  "assignments": [
                    1006
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1006,
                      "mutability": "mutable",
                      "name": "hostContract",
                      "nameLocation": "2850:12:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1112,
                      "src": "2837:25:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BookTradable_$2744",
                        "typeString": "contract BookTradable"
                      },
                      "typeName": {
                        "id": 1005,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1004,
                          "name": "BookTradable",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2744,
                          "src": "2837:12:10"
                        },
                        "referencedDeclaration": 2744,
                        "src": "2837:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BookTradable_$2744",
                          "typeString": "contract BookTradable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1010,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1008,
                        "name": "_hostContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 988,
                        "src": "2878:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1007,
                      "name": "BookTradable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2744,
                      "src": "2865:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_BookTradable_$2744_$",
                        "typeString": "type(contract BookTradable)"
                      }
                    },
                    "id": 1009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2865:27:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BookTradable_$2744",
                      "typeString": "contract BookTradable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2837:55:10"
                },
                {
                  "assignments": [
                    1012
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1012,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "2910:5:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1112,
                      "src": "2902:13:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1011,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2902:7:10",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1017,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1015,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 990,
                        "src": "2939:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1013,
                        "name": "hostContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1006,
                        "src": "2918:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BookTradable_$2744",
                          "typeString": "contract BookTradable"
                        }
                      },
                      "id": 1014,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6493,
                      "src": "2918:20:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view external returns (address)"
                      }
                    },
                    "id": 1016,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2918:30:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2902:46:10"
                },
                {
                  "assignments": [
                    1019
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1019,
                      "mutability": "mutable",
                      "name": "msgValue",
                      "nameLocation": "2966:8:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1112,
                      "src": "2958:16:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1018,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2958:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1026,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1022,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2992:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1023,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2992:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1024,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 992,
                        "src": "3004:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1020,
                        "name": "CC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 999,
                        "src": "2977:2:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CultureCoin_$3937",
                          "typeString": "contract CultureCoin"
                        }
                      },
                      "id": 1021,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "dexCCInFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3185,
                      "src": "2977:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) external returns (uint256)"
                      }
                    },
                    "id": 1025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2977:35:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2958:54:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1034,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1028,
                          "name": "msgValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1019,
                          "src": "3030:8:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1029,
                              "name": "price",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 763,
                              "src": "3043:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(uint256 => uint256))"
                              }
                            },
                            "id": 1031,
                            "indexExpression": {
                              "id": 1030,
                              "name": "_hostContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 988,
                              "src": "3049:13:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3043:20:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 1033,
                          "indexExpression": {
                            "id": 1032,
                            "name": "_tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 990,
                            "src": "3064:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3043:30:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3030:43:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f7567682066756e647320746f20627579",
                        "id": 1035,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3075:25:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c0c880b09f598b4f15b7242318902d8c8350b5a8d4e4351b38f3e46ebb79bcd4",
                          "typeString": "literal_string \"Not enough funds to buy\""
                        },
                        "value": "Not enough funds to buy"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c0c880b09f598b4f15b7242318902d8c8350b5a8d4e4351b38f3e46ebb79bcd4",
                          "typeString": "literal_string \"Not enough funds to buy\""
                        }
                      ],
                      "id": 1027,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3022:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3022:79:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1037,
                  "nodeType": "ExpressionStatement",
                  "src": "3022:79:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1045,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1039,
                              "name": "price",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 763,
                              "src": "3119:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(uint256 => uint256))"
                              }
                            },
                            "id": 1041,
                            "indexExpression": {
                              "id": 1040,
                              "name": "_hostContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 988,
                              "src": "3125:13:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3119:20:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 1043,
                          "indexExpression": {
                            "id": 1042,
                            "name": "_tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 990,
                            "src": "3140:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3119:30:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1044,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3152:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3119:34:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f2070726963652073657420666f72207468697320746f6b656e2e",
                        "id": 1046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3155:30:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bba66f191589c0d3de480d1dbb6a565e7325470d75a3ecff0ffb804baef813f8",
                          "typeString": "literal_string \"No price set for this token.\""
                        },
                        "value": "No price set for this token."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bba66f191589c0d3de480d1dbb6a565e7325470d75a3ecff0ffb804baef813f8",
                          "typeString": "literal_string \"No price set for this token.\""
                        }
                      ],
                      "id": 1038,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3111:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3111:75:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1048,
                  "nodeType": "ExpressionStatement",
                  "src": "3111:75:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1052,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1012,
                        "src": "3235:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1053,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3242:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1054,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3242:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1055,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 990,
                        "src": "3254:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1049,
                        "name": "hostContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1006,
                        "src": "3197:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BookTradable_$2744",
                          "typeString": "contract BookTradable"
                        }
                      },
                      "id": 1051,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFromRegistry",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2179,
                      "src": "3197:37:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 1056,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3197:66:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1057,
                  "nodeType": "ExpressionStatement",
                  "src": "3197:66:10"
                },
                {
                  "assignments": [
                    1059
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1059,
                      "mutability": "mutable",
                      "name": "ownerFee",
                      "nameLocation": "3282:8:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1112,
                      "src": "3274:16:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1058,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3274:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1063,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1060,
                        "name": "hostContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1006,
                        "src": "3293:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BookTradable_$2744",
                          "typeString": "contract BookTradable"
                        }
                      },
                      "id": 1061,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getRoyalty",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2395,
                      "src": "3293:23:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 1062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3293:25:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3274:44:10"
                },
                {
                  "assignments": [
                    1065
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1065,
                      "mutability": "mutable",
                      "name": "operatorCut",
                      "nameLocation": "3337:11:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1112,
                      "src": "3329:19:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1064,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3329:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1072,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1071,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1068,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1066,
                            "name": "msgValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1019,
                            "src": "3352:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 1067,
                            "name": "operatorFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 753,
                            "src": "3363:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3352:22:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1069,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3351:24:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 1070,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3378:3:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "3351:30:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3329:52:10"
                },
                {
                  "assignments": [
                    1074
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1074,
                      "mutability": "mutable",
                      "name": "royalties",
                      "nameLocation": "3440:9:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1112,
                      "src": "3432:17:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1073,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3432:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1081,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1077,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1075,
                            "name": "msgValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1019,
                            "src": "3453:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 1076,
                            "name": "ownerFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1059,
                            "src": "3464:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3453:19:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1078,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3452:21:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 1079,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3476:3:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "3452:27:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3432:47:10"
                },
                {
                  "expression": {
                    "id": 1090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1082,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 757,
                        "src": "3536:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1084,
                      "indexExpression": {
                        "id": 1083,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1012,
                        "src": "3545:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3536:15:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1089,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1087,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1085,
                          "name": "msgValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1019,
                          "src": "3555:8:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 1086,
                          "name": "royalties",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1074,
                          "src": "3566:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3555:20:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 1088,
                        "name": "operatorCut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1065,
                        "src": "3578:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3555:34:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3536:53:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1091,
                  "nodeType": "ExpressionStatement",
                  "src": "3536:53:10"
                },
                {
                  "expression": {
                    "id": 1096,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1092,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 757,
                        "src": "3599:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1094,
                      "indexExpression": {
                        "id": 1093,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 751,
                        "src": "3608:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3599:18:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1095,
                      "name": "operatorCut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1065,
                      "src": "3621:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3599:33:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1097,
                  "nodeType": "ExpressionStatement",
                  "src": "3599:33:10"
                },
                {
                  "expression": {
                    "id": 1104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1098,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 757,
                        "src": "3642:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1102,
                      "indexExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 1099,
                            "name": "hostContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1006,
                            "src": "3651:12:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BookTradable_$2744",
                              "typeString": "contract BookTradable"
                            }
                          },
                          "id": 1100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6282,
                          "src": "3651:18:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 1101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3651:20:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3642:30:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1103,
                      "name": "royalties",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1074,
                      "src": "3676:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3642:43:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1105,
                  "nodeType": "ExpressionStatement",
                  "src": "3642:43:10"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1107,
                        "name": "_hostContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 988,
                        "src": "3706:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1108,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 990,
                        "src": "3721:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1109,
                        "name": "msgValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1019,
                        "src": "3731:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1106,
                      "name": "Sold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 737,
                      "src": "3701:4:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 1110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3701:39:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1111,
                  "nodeType": "EmitStatement",
                  "src": "3696:44:10"
                }
              ]
            },
            "functionSelector": "205a612a",
            "id": 1113,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 995,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 994,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3983,
                  "src": "2766:12:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "2766:12:10"
              }
            ],
            "name": "buyWithCC",
            "nameLocation": "2692:9:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 993,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 988,
                  "mutability": "mutable",
                  "name": "_hostContract",
                  "nameLocation": "2710:13:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1113,
                  "src": "2702:21:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 987,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2702:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 990,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "2730:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1113,
                  "src": "2725:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 989,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2725:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 992,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2748:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1113,
                  "src": "2740:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 991,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2740:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2701:55:10"
            },
            "returnParameters": {
              "id": 996,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2779:0:10"
            },
            "scope": 1225,
            "src": "2683:1064:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1157,
              "nodeType": "Block",
              "src": "3802:266:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 1119,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 757,
                            "src": "3820:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1122,
                          "indexExpression": {
                            "expression": {
                              "id": 1120,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3829:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1121,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3829:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3820:20:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3843:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3820:24:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520646f6e2774206861766520616e792062616c616e636520746f207769746864726177",
                        "id": 1125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3845:40:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2d00e8abe28b6b3bc6ddddc5d849202dd62f3cf91c4a05be960f35f8bddcf6af",
                          "typeString": "literal_string \"You don't have any balance to withdraw\""
                        },
                        "value": "You don't have any balance to withdraw"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2d00e8abe28b6b3bc6ddddc5d849202dd62f3cf91c4a05be960f35f8bddcf6af",
                          "typeString": "literal_string \"You don't have any balance to withdraw\""
                        }
                      ],
                      "id": 1118,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3812:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3812:74:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1127,
                  "nodeType": "ExpressionStatement",
                  "src": "3812:74:10"
                },
                {
                  "assignments": [
                    1129
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1129,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "3901:6:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1157,
                      "src": "3896:11:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1128,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3896:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1134,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1130,
                      "name": "balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 757,
                      "src": "3910:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1133,
                    "indexExpression": {
                      "expression": {
                        "id": 1131,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3919:3:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1132,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3919:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3910:20:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3896:34:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1141,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1129,
                        "src": "3969:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1137,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3948:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1138,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3948:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1136,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3940:8:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 1135,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3940:8:10",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3940:19:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 1140,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "3940:28:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3940:36:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1143,
                  "nodeType": "ExpressionStatement",
                  "src": "3940:36:10"
                },
                {
                  "expression": {
                    "id": 1149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1144,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 757,
                        "src": "3986:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1147,
                      "indexExpression": {
                        "expression": {
                          "id": 1145,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3995:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3995:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3986:20:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 1148,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4009:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3986:24:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1150,
                  "nodeType": "ExpressionStatement",
                  "src": "3986:24:10"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1152,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4042:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4042:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1154,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1129,
                        "src": "4054:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1151,
                      "name": "BalanceWithdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 743,
                      "src": "4025:16:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4025:36:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1156,
                  "nodeType": "EmitStatement",
                  "src": "4020:41:10"
                }
              ]
            },
            "functionSelector": "5fd8c710",
            "id": 1158,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1116,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1115,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3983,
                  "src": "3789:12:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "3789:12:10"
              }
            ],
            "name": "withdrawBalance",
            "nameLocation": "3762:15:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1114,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3777:2:10"
            },
            "returnParameters": {
              "id": 1117,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3802:0:10"
            },
            "scope": 1225,
            "src": "3753:315:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1187,
              "nodeType": "Block",
              "src": "4142:234:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1166,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4160:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4160:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1168,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 751,
                          "src": "4174:8:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4160:22:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c7920746865206f70657261746f722063616e206368616e6765207468652063757272656e74206f70657261746f72",
                        "id": 1170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4183:51:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6868ced2b8f26bd6293be821c01a5ac8461d85ac72dbd80fe265aeb32b56dfc9",
                          "typeString": "literal_string \"only the operator can change the current operator\""
                        },
                        "value": "only the operator can change the current operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6868ced2b8f26bd6293be821c01a5ac8461d85ac72dbd80fe265aeb32b56dfc9",
                          "typeString": "literal_string \"only the operator can change the current operator\""
                        }
                      ],
                      "id": 1165,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4152:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4152:83:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1172,
                  "nodeType": "ExpressionStatement",
                  "src": "4152:83:10"
                },
                {
                  "assignments": [
                    1174
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1174,
                      "mutability": "mutable",
                      "name": "previousOperator",
                      "nameLocation": "4253:16:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1187,
                      "src": "4245:24:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1173,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4245:7:10",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1176,
                  "initialValue": {
                    "id": 1175,
                    "name": "operator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 751,
                    "src": "4272:8:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4245:35:10"
                },
                {
                  "expression": {
                    "id": 1180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1177,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 751,
                      "src": "4290:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1178,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "4301:3:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1179,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "4301:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4290:21:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1181,
                  "nodeType": "ExpressionStatement",
                  "src": "4290:21:10"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1183,
                        "name": "previousOperator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1174,
                        "src": "4342:16:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1184,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 751,
                        "src": "4360:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1182,
                      "name": "OperatorChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 749,
                      "src": "4326:15:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 1185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4326:43:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1186,
                  "nodeType": "EmitStatement",
                  "src": "4321:48:10"
                }
              ]
            },
            "functionSelector": "06394c9b",
            "id": 1188,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1163,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1162,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3983,
                  "src": "4129:12:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "4129:12:10"
              }
            ],
            "name": "changeOperator",
            "nameLocation": "4083:14:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1161,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1160,
                  "mutability": "mutable",
                  "name": "_newOperator",
                  "nameLocation": "4106:12:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1188,
                  "src": "4098:20:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1159,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4098:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4097:22:10"
            },
            "returnParameters": {
              "id": 1164,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4142:0:10"
            },
            "scope": 1225,
            "src": "4074:302:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1200,
              "nodeType": "Block",
              "src": "4451:44:10",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "baseExpression": {
                          "id": 1195,
                          "name": "balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 757,
                          "src": "4469:8:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 1197,
                        "indexExpression": {
                          "id": 1196,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1190,
                          "src": "4478:8:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4469:18:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 1198,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "4468:20:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1194,
                  "id": 1199,
                  "nodeType": "Return",
                  "src": "4461:27:10"
                }
              ]
            },
            "functionSelector": "4b5822b1",
            "id": 1201,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "viewBalances",
            "nameLocation": "4391:12:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1191,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1190,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "4412:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1201,
                  "src": "4404:16:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1189,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4404:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4403:18:10"
            },
            "returnParameters": {
              "id": 1194,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1193,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1201,
                  "src": "4445:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1192,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4445:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4444:6:10"
            },
            "scope": 1225,
            "src": "4382:113:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1223,
              "nodeType": "Block",
              "src": "4548:130:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1210,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1207,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4566:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1208,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4566:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 1209,
                            "name": "cCA",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 765,
                            "src": "4580:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4566:17:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1211,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4587:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1212,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4587:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 1213,
                            "name": "operator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 751,
                            "src": "4601:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4587:22:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4566:43:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f",
                        "id": 1216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4611:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7d6119d3ee7f82ee53aac57d4d088f8bbaca5aac3191bb074252c6d760ae4eba",
                          "typeString": "literal_string \"no\""
                        },
                        "value": "no"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7d6119d3ee7f82ee53aac57d4d088f8bbaca5aac3191bb074252c6d760ae4eba",
                          "typeString": "literal_string \"no\""
                        }
                      ],
                      "id": 1206,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4558:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4558:58:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1218,
                  "nodeType": "ExpressionStatement",
                  "src": "4558:58:10"
                },
                {
                  "expression": {
                    "id": 1221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1219,
                      "name": "gasToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 768,
                      "src": "4626:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1220,
                      "name": "_gasToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1203,
                      "src": "4637:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4626:20:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1222,
                  "nodeType": "ExpressionStatement",
                  "src": "4626:20:10"
                }
              ]
            },
            "functionSelector": "1e9f8aad",
            "id": 1224,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setGasToken",
            "nameLocation": "4510:11:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1204,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1203,
                  "mutability": "mutable",
                  "name": "_gasToken",
                  "nameLocation": "4530:9:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1224,
                  "src": "4522:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1202,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4522:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4521:19:10"
            },
            "returnParameters": {
              "id": 1205,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4548:0:10"
            },
            "scope": 1225,
            "src": "4501:177:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1226,
        "src": "217:4463:10",
        "usedErrors": []
      }
    ],
    "src": "32:4650:10"
  },
  "bytecode": "608060405234801561001057600080fd5b506040516111e83803806111e883398101604081905261002f91610097565b6001600081905580546001600160a01b039485166001600160a01b03199182161782556002919091556005805493851693821693909317909255600680549190931691161790556100da565b80516001600160a01b038116811461009257600080fd5b919050565b6000806000606084860312156100ac57600080fd5b6100b58461007b565b92506100c36020850161007b565b91506100d16040850161007b565b90509250925092565b6110ff806100e96000396000f3fe6080604052600436106100915760003560e01c80635fd8c710116100595780635fd8c7101461014057806369fe0e2d146101555780636a27246214610175578063ad9b802414610195578063cce7ec13146101cd57600080fd5b806306394c9b146100965780631e9f8aad146100b8578063205a612a146100d8578063495057be146100b65780634b5822b1146100f8575b600080fd5b3480156100a257600080fd5b506100b66100b1366004610edd565b6101e0565b005b3480156100c457600080fd5b506100b66100d3366004610edd565b6102e8565b3480156100e457600080fd5b506100b66100f3366004610f01565b61035e565b34801561010457600080fd5b5061012e610113366004610edd565b6001600160a01b031660009081526003602052604090205490565b60405190815260200160405180910390f35b34801561014c57600080fd5b506100b66107c3565b34801561016157600080fd5b506100b6610170366004610f36565b6108e6565b34801561018157600080fd5b5061012e610190366004610f01565b610967565b3480156101a157600080fd5b5061012e6101b0366004610f4f565b600460209081526000928352604080842090915290825290205481565b6100b66101db366004610f4f565b610ad4565b6002600054141561020c5760405162461bcd60e51b815260040161020390610f7b565b60405180910390fd5b60026000556001546001600160a01b031633146102855760405162461bcd60e51b815260206004820152603160248201527f6f6e6c7920746865206f70657261746f722063616e206368616e6765207468656044820152701031bab93932b73a1037b832b930ba37b960791b6064820152608401610203565b60018054336001600160a01b031982168117909255604080516001600160a01b0390921680835260208301939093527fd58299b712891143e76310d5e664c4203c940a67db37cf856bdaa3c5c76a802c910160405180910390a150506001600055565b6005546001600160a01b031633148061030b57506001546001600160a01b031633145b61033c5760405162461bcd60e51b81526020600482015260026024820152616e6f60f01b6044820152606401610203565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b600260005414156103815760405162461bcd60e51b815260040161020390610f7b565b600260009081556006546040516331a9108f60e11b8152600481018590526001600160a01b03918216928692909190831690636352211e9060240160206040518083038186803b1580156103d457600080fd5b505afa1580156103e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040c9190610fb2565b6040516313784abf60e31b8152336004820152602481018690529091506000906001600160a01b03851690639bc255f890604401602060405180830381600087803b15801561045a57600080fd5b505af115801561046e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104929190610fcf565b6001600160a01b03881660009081526004602090815260408083208a84529091529020549091508110156105025760405162461bcd60e51b81526020600482015260176024820152764e6f7420656e6f7567682066756e647320746f2062757960481b6044820152606401610203565b6001600160a01b03871660009081526004602090815260408083208984529091529020546105425760405162461bcd60e51b815260040161020390610fe8565b60405163c43e92b160e01b81526001600160a01b0384169063c43e92b19061057290859033908b9060040161101f565b600060405180830381600087803b15801561058c57600080fd5b505af11580156105a0573d6000803e3d6000fd5b505050506000836001600160a01b0316634d47732a6040518163ffffffff1660e01b815260040160206040518083038186803b1580156105df57600080fd5b505afa1580156105f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106179190610fcf565b9050600060646002548461062b9190611059565b6106359190611078565b9050600060646106458486611059565b61064f9190611078565b90508161065c828661109a565b610666919061109a565b6001600160a01b0386166000908152600360205260408120805490919061068e9084906110b1565b90915550506001546001600160a01b0316600090815260036020526040812080548492906106bd9084906110b1565b925050819055508060036000886001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561070257600080fd5b505afa158015610716573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073a9190610fb2565b6001600160a01b03166001600160a01b03168152602001908152602001600020600082825461076991906110b1565b9091555050604080518a8152602081018690526001600160a01b038c16917fbac9694ac0daa55169abd117086fe32c89401d9a3b15dd1d34e55e0aa4e47a9d910160405180910390a2505060016000555050505050505050565b600260005414156107e65760405162461bcd60e51b815260040161020390610f7b565b60026000908155338152600360205260409020546108555760405162461bcd60e51b815260206004820152602660248201527f596f7520646f6e2774206861766520616e792062616c616e636520746f20776960448201526574686472617760d01b6064820152608401610203565b3360008181526003602052604080822054905190929183156108fc02918491818181858888f19350505050158015610891573d6000803e3d6000fd5b503360008181526003602052604080822091909155517fddc398b321237a8d40ac914388309c2f52a08c134e4dc4ce61e32f57cb7d80f1906108d69084815260200190565b60405180910390a2506001600055565b6001546001600160a01b031633146109625760405162461bcd60e51b815260206004820152603960248201527f4f6e6c7920746865206f70657261746f72206d6179206368616e676520746865604482015278103332b2903337b9103a34329036b0b935b2ba383630b1b29760391b6064820152608401610203565b600255565b60006002600054141561098c5760405162461bcd60e51b815260040161020390610f7b565b600260009081556040516331a9108f60e11b8152600481018590528591906001600160a01b03831690636352211e9060240160206040518083038186803b1580156109d657600080fd5b505afa1580156109ea573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0e9190610fb2565b9050336001600160a01b03821614610a645760405162461bcd60e51b815260206004820152601960248201527821b0b63632b9103237b2b9903737ba1037bbb7103a37b5b2b760391b6044820152606401610203565b6001600160a01b0386811660008181526004602090815260408083208a84528252918290208890558151898152908101889052928416927fa1424a2c6c5c34718c2d3a9246c6d8c976b24b319baee16fb2a9cb939ba75a02910160405180910390a3505060016000559392505050565b60026000541415610af75760405162461bcd60e51b815260040161020390610f7b565b600260009081556040516331a9108f60e11b8152600481018390528391906001600160a01b03831690636352211e9060240160206040518083038186803b158015610b4157600080fd5b505afa158015610b55573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b799190610fb2565b6001600160a01b0385166000908152600460209081526040808320878452909152902054909150610bbc5760405162461bcd60e51b815260040161020390610fe8565b6001600160a01b0384166000908152600460209081526040808320868452909152902054341015610c2a5760405162461bcd60e51b81526020600482015260186024820152772737ba1032b737bab3b410333ab73239903a3790313abc9760411b6044820152606401610203565b60405163c43e92b160e01b81526001600160a01b0383169063c43e92b190610c5a9084903390889060040161101f565b600060405180830381600087803b158015610c7457600080fd5b505af1158015610c88573d6000803e3d6000fd5b505050506001600160a01b038481166000908152600460208181526040808420888552825280842084905580516326a3b99560e11b815290519394871693634d47732a938281019392829003018186803b158015610ce557600080fd5b505afa158015610cf9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d1d9190610fcf565b90506000606460025434610d319190611059565b610d3b9190611078565b905060006064610d4b8434611059565b610d559190611078565b905081610d62823461109a565b610d6c919061109a565b6001600160a01b03851660009081526003602052604081208054909190610d949084906110b1565b90915550506001546001600160a01b031660009081526003602052604081208054849290610dc39084906110b1565b925050819055508060036000876001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610e0857600080fd5b505afa158015610e1c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e409190610fb2565b6001600160a01b03166001600160a01b031681526020019081526020016000206000828254610e6f91906110b1565b9091555050604080518781523460208201526001600160a01b038916917fbac9694ac0daa55169abd117086fe32c89401d9a3b15dd1d34e55e0aa4e47a9d910160405180910390a2505060016000555050505050565b6001600160a01b0381168114610eda57600080fd5b50565b600060208284031215610eef57600080fd5b8135610efa81610ec5565b9392505050565b600080600060608486031215610f1657600080fd5b8335610f2181610ec5565b95602085013595506040909401359392505050565b600060208284031215610f4857600080fd5b5035919050565b60008060408385031215610f6257600080fd5b8235610f6d81610ec5565b946020939093013593505050565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b600060208284031215610fc457600080fd5b8151610efa81610ec5565b600060208284031215610fe157600080fd5b5051919050565b6020808252601c908201527f4e6f2070726963652073657420666f72207468697320746f6b656e2e00000000604082015260600190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561107357611073611043565b500290565b60008261109557634e487b7160e01b600052601260045260246000fd5b500490565b6000828210156110ac576110ac611043565b500390565b600082198211156110c4576110c4611043565b50019056fea26469706673582212207d7ffa5936e74bde03e16dc85440649b7068a8a45f10b50c7dcfa189ec45ac6164736f6c63430008090033",
  "bytecodeSha1": "72d1552e5c76d4aab16ab95a8b233e4bce3e2191",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 100
    },
    "version": "0.8.9+commit.e5eed63a"
  },
  "contractName": "MiniMart",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {},
      "10": {
        "MiniMart.buy": {
          "36": [
            1995,
            2038,
            true
          ]
        },
        "MiniMart.buyWithCC": {
          "33": [
            3030,
            3073,
            true
          ]
        },
        "MiniMart.changeOperator": {
          "30": [
            4160,
            4182,
            true
          ]
        },
        "MiniMart.sell": {
          "35": [
            1516,
            1535,
            true
          ]
        },
        "MiniMart.setFee": {
          "34": [
            1147,
            1169,
            true
          ]
        },
        "MiniMart.setGasToken": {
          "31": [
            4566,
            4583,
            true
          ],
          "32": [
            4587,
            4609,
            true
          ]
        }
      },
      "12": {},
      "13": {},
      "14": {},
      "15": {},
      "16": {},
      "17": {},
      "18": {},
      "19": {},
      "2": {},
      "20": {},
      "21": {},
      "22": {
        "MiniMart.buy": {
          "37": [
            2260,
            2279,
            true
          ]
        }
      },
      "23": {},
      "24": {},
      "25": {},
      "26": {},
      "27": {},
      "28": {},
      "29": {},
      "3": {},
      "30": {},
      "31": {},
      "32": {},
      "33": {},
      "34": {},
      "35": {},
      "36": {},
      "37": {},
      "38": {},
      "39": {},
      "4": {},
      "5": {},
      "6": {},
      "7": {},
      "8": {}
    },
    "statements": {
      "0": {},
      "1": {},
      "10": {
        "MiniMart.buy": {
          "22": [
            1902,
            1977
          ],
          "23": [
            1987,
            2067
          ],
          "24": [
            2078,
            2144
          ],
          "25": [
            2155,
            2189
          ],
          "26": [
            2464,
            2518
          ],
          "27": [
            2528,
            2561
          ],
          "28": [
            2571,
            2614
          ],
          "29": [
            2625,
            2670
          ]
        },
        "MiniMart.buyWithCC": {
          "6": [
            3022,
            3101
          ],
          "7": [
            3111,
            3186
          ],
          "8": [
            3197,
            3263
          ],
          "9": [
            3536,
            3589
          ],
          "10": [
            3599,
            3632
          ],
          "11": [
            3642,
            3685
          ],
          "12": [
            3696,
            3740
          ]
        },
        "MiniMart.changeOperator": {
          "1": [
            4152,
            4235
          ],
          "2": [
            4290,
            4311
          ],
          "3": [
            4321,
            4369
          ]
        },
        "MiniMart.sell": {
          "19": [
            1508,
            1565
          ],
          "20": [
            1576,
            1615
          ],
          "21": [
            1626,
            1677
          ]
        },
        "MiniMart.setFee": {
          "17": [
            1139,
            1231
          ],
          "18": [
            1242,
            1260
          ]
        },
        "MiniMart.setGasToken": {
          "4": [
            4558,
            4616
          ],
          "5": [
            4626,
            4646
          ]
        },
        "MiniMart.viewBalances": {
          "0": [
            4461,
            4488
          ]
        },
        "MiniMart.withdrawBalance": {
          "13": [
            3812,
            3886
          ],
          "14": [
            3940,
            3976
          ],
          "15": [
            3986,
            4010
          ],
          "16": [
            4020,
            4061
          ]
        }
      },
      "12": {},
      "13": {},
      "14": {},
      "15": {},
      "16": {},
      "17": {},
      "18": {},
      "19": {},
      "2": {},
      "20": {},
      "21": {},
      "22": {},
      "23": {},
      "24": {},
      "25": {},
      "26": {},
      "27": {},
      "28": {},
      "29": {},
      "3": {},
      "30": {},
      "31": {},
      "32": {},
      "33": {},
      "34": {},
      "35": {},
      "36": {},
      "37": {},
      "38": {},
      "39": {},
      "4": {},
      "5": {},
      "6": {},
      "7": {},
      "8": {}
    }
  },
  "dependencies": [
    "Address",
    "AddressUpgradeable",
    "BookTradable",
    "Context",
    "ContextMixin",
    "ContextUpgradeable",
    "CultureCoin",
    "CultureCoinWrapper",
    "EIP712Base",
    "ERC165",
    "ERC20",
    "ERC20Burnable",
    "ERC20BurnableUpgradeable",
    "ERC20Upgradeable",
    "ERC721",
    "ERC721BookTradable",
    "ERC721Enumerable",
    "IERC165",
    "IERC20",
    "IERC20Metadata",
    "IERC20MetadataUpgradeable",
    "IERC20Upgradeable",
    "IERC721",
    "IERC721Enumerable",
    "IERC721Metadata",
    "IERC721Receiver",
    "Initializable",
    "Initializable",
    "NativeMetaTransaction",
    "Ownable",
    "Receiver",
    "ReentrancyGuard",
    "ReentrancyGuardUpgradeable",
    "SafeERC20",
    "SafeMath",
    "Stakeable",
    "Strings"
  ],
  "deployedBytecode": "6080604052600436106100915760003560e01c80635fd8c710116100595780635fd8c7101461014057806369fe0e2d146101555780636a27246214610175578063ad9b802414610195578063cce7ec13146101cd57600080fd5b806306394c9b146100965780631e9f8aad146100b8578063205a612a146100d8578063495057be146100b65780634b5822b1146100f8575b600080fd5b3480156100a257600080fd5b506100b66100b1366004610edd565b6101e0565b005b3480156100c457600080fd5b506100b66100d3366004610edd565b6102e8565b3480156100e457600080fd5b506100b66100f3366004610f01565b61035e565b34801561010457600080fd5b5061012e610113366004610edd565b6001600160a01b031660009081526003602052604090205490565b60405190815260200160405180910390f35b34801561014c57600080fd5b506100b66107c3565b34801561016157600080fd5b506100b6610170366004610f36565b6108e6565b34801561018157600080fd5b5061012e610190366004610f01565b610967565b3480156101a157600080fd5b5061012e6101b0366004610f4f565b600460209081526000928352604080842090915290825290205481565b6100b66101db366004610f4f565b610ad4565b6002600054141561020c5760405162461bcd60e51b815260040161020390610f7b565b60405180910390fd5b60026000556001546001600160a01b031633146102855760405162461bcd60e51b815260206004820152603160248201527f6f6e6c7920746865206f70657261746f722063616e206368616e6765207468656044820152701031bab93932b73a1037b832b930ba37b960791b6064820152608401610203565b60018054336001600160a01b031982168117909255604080516001600160a01b0390921680835260208301939093527fd58299b712891143e76310d5e664c4203c940a67db37cf856bdaa3c5c76a802c910160405180910390a150506001600055565b6005546001600160a01b031633148061030b57506001546001600160a01b031633145b61033c5760405162461bcd60e51b81526020600482015260026024820152616e6f60f01b6044820152606401610203565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b600260005414156103815760405162461bcd60e51b815260040161020390610f7b565b600260009081556006546040516331a9108f60e11b8152600481018590526001600160a01b03918216928692909190831690636352211e9060240160206040518083038186803b1580156103d457600080fd5b505afa1580156103e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040c9190610fb2565b6040516313784abf60e31b8152336004820152602481018690529091506000906001600160a01b03851690639bc255f890604401602060405180830381600087803b15801561045a57600080fd5b505af115801561046e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104929190610fcf565b6001600160a01b03881660009081526004602090815260408083208a84529091529020549091508110156105025760405162461bcd60e51b81526020600482015260176024820152764e6f7420656e6f7567682066756e647320746f2062757960481b6044820152606401610203565b6001600160a01b03871660009081526004602090815260408083208984529091529020546105425760405162461bcd60e51b815260040161020390610fe8565b60405163c43e92b160e01b81526001600160a01b0384169063c43e92b19061057290859033908b9060040161101f565b600060405180830381600087803b15801561058c57600080fd5b505af11580156105a0573d6000803e3d6000fd5b505050506000836001600160a01b0316634d47732a6040518163ffffffff1660e01b815260040160206040518083038186803b1580156105df57600080fd5b505afa1580156105f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106179190610fcf565b9050600060646002548461062b9190611059565b6106359190611078565b9050600060646106458486611059565b61064f9190611078565b90508161065c828661109a565b610666919061109a565b6001600160a01b0386166000908152600360205260408120805490919061068e9084906110b1565b90915550506001546001600160a01b0316600090815260036020526040812080548492906106bd9084906110b1565b925050819055508060036000886001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561070257600080fd5b505afa158015610716573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073a9190610fb2565b6001600160a01b03166001600160a01b03168152602001908152602001600020600082825461076991906110b1565b9091555050604080518a8152602081018690526001600160a01b038c16917fbac9694ac0daa55169abd117086fe32c89401d9a3b15dd1d34e55e0aa4e47a9d910160405180910390a2505060016000555050505050505050565b600260005414156107e65760405162461bcd60e51b815260040161020390610f7b565b60026000908155338152600360205260409020546108555760405162461bcd60e51b815260206004820152602660248201527f596f7520646f6e2774206861766520616e792062616c616e636520746f20776960448201526574686472617760d01b6064820152608401610203565b3360008181526003602052604080822054905190929183156108fc02918491818181858888f19350505050158015610891573d6000803e3d6000fd5b503360008181526003602052604080822091909155517fddc398b321237a8d40ac914388309c2f52a08c134e4dc4ce61e32f57cb7d80f1906108d69084815260200190565b60405180910390a2506001600055565b6001546001600160a01b031633146109625760405162461bcd60e51b815260206004820152603960248201527f4f6e6c7920746865206f70657261746f72206d6179206368616e676520746865604482015278103332b2903337b9103a34329036b0b935b2ba383630b1b29760391b6064820152608401610203565b600255565b60006002600054141561098c5760405162461bcd60e51b815260040161020390610f7b565b600260009081556040516331a9108f60e11b8152600481018590528591906001600160a01b03831690636352211e9060240160206040518083038186803b1580156109d657600080fd5b505afa1580156109ea573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0e9190610fb2565b9050336001600160a01b03821614610a645760405162461bcd60e51b815260206004820152601960248201527821b0b63632b9103237b2b9903737ba1037bbb7103a37b5b2b760391b6044820152606401610203565b6001600160a01b0386811660008181526004602090815260408083208a84528252918290208890558151898152908101889052928416927fa1424a2c6c5c34718c2d3a9246c6d8c976b24b319baee16fb2a9cb939ba75a02910160405180910390a3505060016000559392505050565b60026000541415610af75760405162461bcd60e51b815260040161020390610f7b565b600260009081556040516331a9108f60e11b8152600481018390528391906001600160a01b03831690636352211e9060240160206040518083038186803b158015610b4157600080fd5b505afa158015610b55573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b799190610fb2565b6001600160a01b0385166000908152600460209081526040808320878452909152902054909150610bbc5760405162461bcd60e51b815260040161020390610fe8565b6001600160a01b0384166000908152600460209081526040808320868452909152902054341015610c2a5760405162461bcd60e51b81526020600482015260186024820152772737ba1032b737bab3b410333ab73239903a3790313abc9760411b6044820152606401610203565b60405163c43e92b160e01b81526001600160a01b0383169063c43e92b190610c5a9084903390889060040161101f565b600060405180830381600087803b158015610c7457600080fd5b505af1158015610c88573d6000803e3d6000fd5b505050506001600160a01b038481166000908152600460208181526040808420888552825280842084905580516326a3b99560e11b815290519394871693634d47732a938281019392829003018186803b158015610ce557600080fd5b505afa158015610cf9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d1d9190610fcf565b90506000606460025434610d319190611059565b610d3b9190611078565b905060006064610d4b8434611059565b610d559190611078565b905081610d62823461109a565b610d6c919061109a565b6001600160a01b03851660009081526003602052604081208054909190610d949084906110b1565b90915550506001546001600160a01b031660009081526003602052604081208054849290610dc39084906110b1565b925050819055508060036000876001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610e0857600080fd5b505afa158015610e1c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e409190610fb2565b6001600160a01b03166001600160a01b031681526020019081526020016000206000828254610e6f91906110b1565b9091555050604080518781523460208201526001600160a01b038916917fbac9694ac0daa55169abd117086fe32c89401d9a3b15dd1d34e55e0aa4e47a9d910160405180910390a2505060016000555050505050565b6001600160a01b0381168114610eda57600080fd5b50565b600060208284031215610eef57600080fd5b8135610efa81610ec5565b9392505050565b600080600060608486031215610f1657600080fd5b8335610f2181610ec5565b95602085013595506040909401359392505050565b600060208284031215610f4857600080fd5b5035919050565b60008060408385031215610f6257600080fd5b8235610f6d81610ec5565b946020939093013593505050565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b600060208284031215610fc457600080fd5b8151610efa81610ec5565b600060208284031215610fe157600080fd5b5051919050565b6020808252601c908201527f4e6f2070726963652073657420666f72207468697320746f6b656e2e00000000604082015260600190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561107357611073611043565b500290565b60008261109557634e487b7160e01b600052601260045260246000fd5b500490565b6000828210156110ac576110ac611043565b500390565b600082198211156110c4576110c4611043565b50019056fea26469706673582212207d7ffa5936e74bde03e16dc85440649b7068a8a45f10b50c7dcfa189ec45ac6164736f6c63430008090033",
  "deployedSourceMap": "217:4463:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4074:302;;;;;;;;;;-1:-1:-1;4074:302:10;;;;;:::i;:::-;;:::i;:::-;;4501:177;;;;;;;;;;-1:-1:-1;4501:177:10;;;;;:::i;:::-;;:::i;2683:1064::-;;;;;;;;;;-1:-1:-1;2683:1064:10;;;;;:::i;:::-;;:::i;4382:113::-;;;;;;;;;;-1:-1:-1;4382:113:10;;;;;:::i;:::-;-1:-1:-1;;;;;4469:18:10;4445:4;4469:18;;;:8;:18;;;;;;;4382:113;;;;936:25:40;;;924:2;909:18;4382:113:10;;;;;;;3753:315;;;;;;;;;;;;;:::i;1090:177::-;;;;;;;;;;-1:-1:-1;1090:177:10;;;;;:::i;:::-;;:::i;1273:411::-;;;;;;;;;;-1:-1:-1;1273:411:10;;;;;:::i;:::-;;:::i;689:60::-;;;;;;;;;;-1:-1:-1;689:60:10;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;1690:987;;;;;;:::i;:::-;;:::i;4074:302::-;1680:1:22;2260:7;;:19;;2252:63;;;;-1:-1:-1;;;2252:63:22;;;;;;;:::i;:::-;;;;;;;;;1680:1;2390:7;:18;4174:8:10::1;::::0;-1:-1:-1;;;;;4174:8:10::1;4160:10;:22;4152:83;;;::::0;-1:-1:-1;;;4152:83:10;;2221:2:40;4152:83:10::1;::::0;::::1;2203:21:40::0;2260:2;2240:18;;;2233:30;2299:34;2279:18;;;2272:62;-1:-1:-1;;;2350:18:40;;;2343:47;2407:19;;4152:83:10::1;2019:413:40::0;4152:83:10::1;4272:8;::::0;;4301:10:::1;-1:-1:-1::0;;;;;;4290:21:10;::::1;::::0;::::1;::::0;;;4326:43:::1;::::0;;-1:-1:-1;;;;;4272:8:10;;::::1;2649:34:40::0;;;2714:2;2699:18;;2692:43;;;;4326::10::1;::::0;2584:18:40;4326:43:10::1;;;;;;;-1:-1:-1::0;;1637:1:22;2563:7;:22;4074:302:10:o;4501:177::-;4580:3;;-1:-1:-1;;;;;4580:3:10;4566:10;:17;;:43;;-1:-1:-1;4601:8:10;;-1:-1:-1;;;;;4601:8:10;4587:10;:22;4566:43;4558:58;;;;-1:-1:-1;;;4558:58:10;;2948:2:40;4558:58:10;;;2930:21:40;2987:1;2967:18;;;2960:29;-1:-1:-1;;;3005:18:40;;;2998:32;3047:18;;4558:58:10;2746:325:40;4558:58:10;4626:8;:20;;-1:-1:-1;;;;;;4626:20:10;-1:-1:-1;;;;;4626:20:10;;;;;;;;;;4501:177::o;2683:1064::-;1680:1:22;2260:7;;:19;;2252:63;;;;-1:-1:-1;;;2252:63:22;;;;;;;:::i;:::-;1680:1;2390:7;:18;;;2818:8:10::1;::::0;2918:30:::1;::::0;-1:-1:-1;;;2918:30:10;;::::1;::::0;::::1;936:25:40::0;;;-1:-1:-1;;;;;2818:8:10;;::::1;::::0;2878:13;;2390:7:22;;2918:20:10;;::::1;::::0;::::1;::::0;909:18:40;;2918:30:10::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2977:35;::::0;-1:-1:-1;;;2977:35:10;;2992:10:::1;2977:35;::::0;::::1;3506:51:40::0;3573:18;;;3566:34;;;2902:46:10;;-1:-1:-1;2958:16:10::1;::::0;-1:-1:-1;;;;;2977:14:10;::::1;::::0;::::1;::::0;3479:18:40;;2977:35:10::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;3043:20:10;::::1;;::::0;;;:5:::1;:20;::::0;;;;;;;:30;;;;;;;;;2958:54;;-1:-1:-1;3030:43:10;::::1;;3022:79;;;::::0;-1:-1:-1;;;3022:79:10;;4002:2:40;3022:79:10::1;::::0;::::1;3984:21:40::0;4041:2;4021:18;;;4014:30;-1:-1:-1;;;4060:18:40;;;4053:53;4123:18;;3022:79:10::1;3800:347:40::0;3022:79:10::1;-1:-1:-1::0;;;;;3119:20:10;::::1;3152:1;3119:20:::0;;;:5:::1;:20;::::0;;;;;;;:30;;;;;;;;;3111:75:::1;;;;-1:-1:-1::0;;;3111:75:10::1;;;;;;;:::i;:::-;3197:66;::::0;-1:-1:-1;;;3197:66:10;;-1:-1:-1;;;;;3197:37:10;::::1;::::0;::::1;::::0;:66:::1;::::0;3235:5;;3242:10:::1;::::0;3254:8;;3197:66:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3274:16;3293:12;-1:-1:-1::0;;;;;3293:23:10::1;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3274:44;;3329:19;3378:3;3363:11;;3352:8;:22;;;;:::i;:::-;3351:30;;;;:::i;:::-;3329:52:::0;-1:-1:-1;3432:17:10::1;3476:3;3453:19;3464:8:::0;3453;:19:::1;:::i;:::-;3452:27;;;;:::i;:::-;3432:47:::0;-1:-1:-1;3578:11:10;3555:20:::1;3432:47:::0;3555:8;:20:::1;:::i;:::-;:34;;;;:::i;:::-;-1:-1:-1::0;;;;;3536:15:10;::::1;;::::0;;;:8:::1;:15;::::0;;;;:53;;:15;;;:53:::1;::::0;;;::::1;:::i;:::-;::::0;;;-1:-1:-1;;3608:8:10::1;::::0;-1:-1:-1;;;;;3608:8:10::1;3599:18;::::0;;;:8:::1;:18;::::0;;;;:33;;3621:11;;3599:18;:33:::1;::::0;3621:11;;3599:33:::1;:::i;:::-;;;;;;;;3676:9;3642:8;:30;3651:12;-1:-1:-1::0;;;;;3651:18:10::1;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;3642:30:10::1;-1:-1:-1::0;;;;;3642:30:10::1;;;;;;;;;;;;;:43;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;3701:39:10::1;::::0;;5853:25:40;;;5909:2;5894:18;;5887:34;;;-1:-1:-1;;;;;3701:39:10;::::1;::::0;::::1;::::0;5826:18:40;3701:39:10::1;;;;;;;-1:-1:-1::0;;1637:1:22;2563:7;:22;-1:-1:-1;;;;;;;;2683:1064:10:o;3753:315::-;1680:1:22;2260:7;;:19;;2252:63;;;;-1:-1:-1;;;2252:63:22;;;;;;;:::i;:::-;1680:1;2390:7;:18;;;3829:10:10::1;3820:20:::0;;:8:::1;:20;::::0;;;;;3812:74:::1;;;::::0;-1:-1:-1;;;3812:74:10;;6134:2:40;3812:74:10::1;::::0;::::1;6116:21:40::0;6173:2;6153:18;;;6146:30;6212:34;6192:18;;;6185:62;-1:-1:-1;;;6263:18:40;;;6256:36;6309:19;;3812:74:10::1;5932:402:40::0;3812:74:10::1;3919:10;3896:11;3910:20:::0;;;:8:::1;:20;::::0;;;;;;3940:36;;3910:20;;3919:10;3940:36;::::1;;;::::0;3910:20;;3940:36;3896:11;3940:36;3910:20;3919:10;3940:36;::::1;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;3995:10:10::1;4009:1;3986:20:::0;;;:8:::1;:20;::::0;;;;;:24;;;;4025:36;::::1;::::0;::::1;::::0;4054:6;936:25:40;;924:2;909:18;;790:177;4025:36:10::1;;;;;;;;-1:-1:-1::0;1637:1:22;2563:7;:22;3753:315:10:o;1090:177::-;1161:8;;-1:-1:-1;;;;;1161:8:10;1147:10;:22;1139:92;;;;-1:-1:-1;;;1139:92:10;;6541:2:40;1139:92:10;;;6523:21:40;6580:2;6560:18;;;6553:30;6619:34;6599:18;;;6592:62;-1:-1:-1;;;6670:18:40;;;6663:55;6735:19;;1139:92:10;6339:421:40;1139:92:10;1242:11;:18;1090:177::o;1273:411::-;1368:7;1680:1:22;2260:7;;:19;;2252:63;;;;-1:-1:-1;;;2252:63:22;;;;;;;:::i;:::-;1680:1;2390:7;:18;;;1468:30:10::1;::::0;-1:-1:-1;;;1468:30:10;;::::1;::::0;::::1;936:25:40::0;;;1428:13:10;;2390:7:22;-1:-1:-1;;;;;1468:20:10;::::1;::::0;::::1;::::0;909:18:40;;1468:30:10::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1452:46:::0;-1:-1:-1;1516:10:10::1;-1:-1:-1::0;;;;;1516:19:10;::::1;;1508:57;;;::::0;-1:-1:-1;;;1508:57:10;;6967:2:40;1508:57:10::1;::::0;::::1;6949:21:40::0;7006:2;6986:18;;;6979:30;-1:-1:-1;;;7025:18:40;;;7018:55;7090:18;;1508:57:10::1;6765:349:40::0;1508:57:10::1;-1:-1:-1::0;;;;;1576:20:10;;::::1;;::::0;;;:5:::1;:20;::::0;;;;;;;:30;;;;;;;;;:39;;;1631:46;;5853:25:40;;;5894:18;;;5887:34;;;1631:46:10;;::::1;::::0;::::1;::::0;5826:18:40;1631:46:10::1;;;;;;;-1:-1:-1::0;;1637:1:22;2563:7;:22;1273:411:10;;-1:-1:-1;;;1273:411:10:o;1690:987::-;1680:1:22;2260:7;;:19;;2252:63;;;;-1:-1:-1;;;2252:63:22;;;;;;;:::i;:::-;1680:1;2390:7;:18;;;1862:30:10::1;::::0;-1:-1:-1;;;1862:30:10;;::::1;::::0;::::1;936:25:40::0;;;1822:13:10;;2390:7:22;-1:-1:-1;;;;;1862:20:10;::::1;::::0;::::1;::::0;909:18:40;;1862:30:10::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;1910:20:10;::::1;1943:1;1910:20:::0;;;:5:::1;:20;::::0;;;;;;;:30;;;;;;;;;1846:46;;-1:-1:-1;1902:75:10::1;;;;-1:-1:-1::0;;;1902:75:10::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;2008:20:10;::::1;;::::0;;;:5:::1;:20;::::0;;;;;;;:30;;;;;;;;;1995:9:::1;:43;;1987:80;;;::::0;-1:-1:-1;;;1987:80:10;;7321:2:40;1987:80:10::1;::::0;::::1;7303:21:40::0;7360:2;7340:18;;;7333:30;-1:-1:-1;;;7379:18:40;;;7372:54;7443:18;;1987:80:10::1;7119:348:40::0;1987:80:10::1;2078:66;::::0;-1:-1:-1;;;2078:66:10;;-1:-1:-1;;;;;2078:37:10;::::1;::::0;::::1;::::0;:66:::1;::::0;2116:5;;2123:10:::1;::::0;2135:8;;2078:66:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;;;;;;;;2155:20:10;;::::1;2188:1;2155:20:::0;;;:5:::1;:20;::::0;;;;;;;:30;;;;;;;;:34;;;2219:25;;-1:-1:-1;;;2219:25:10;;;;2188:1;;2219:23;::::1;::::0;::::1;::::0;:25;;::::1;::::0;2155:20;2219:25;;;;;:23;:25;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2200:44;;2255:19;2305:3;2290:11;;2278:9;:23;;;;:::i;:::-;2277:31;;;;:::i;:::-;2255:53:::0;-1:-1:-1;2359:17:10::1;2404:3;2380:20;2392:8:::0;2380:9:::1;:20;:::i;:::-;2379:28;;;;:::i;:::-;2359:48:::0;-1:-1:-1;2507:11:10;2483:21:::1;2359:48:::0;2483:9:::1;:21;:::i;:::-;:35;;;;:::i;:::-;-1:-1:-1::0;;;;;2464:15:10;::::1;;::::0;;;:8:::1;:15;::::0;;;;:54;;:15;;;:54:::1;::::0;;;::::1;:::i;:::-;::::0;;;-1:-1:-1;;2537:8:10::1;::::0;-1:-1:-1;;;;;2537:8:10::1;2528:18;::::0;;;:8:::1;:18;::::0;;;;:33;;2550:11;;2528:18;:33:::1;::::0;2550:11;;2528:33:::1;:::i;:::-;;;;;;;;2605:9;2571:8;:30;2580:12;-1:-1:-1::0;;;;;2580:18:10::1;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;2571:30:10::1;-1:-1:-1::0;;;;;2571:30:10::1;;;;;;;;;;;;;:43;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;2630:40:10::1;::::0;;5853:25:40;;;2660:9:10::1;5909:2:40::0;5894:18;;5887:34;-1:-1:-1;;;;;2630:40:10;::::1;::::0;::::1;::::0;5826:18:40;2630:40:10::1;;;;;;;-1:-1:-1::0;;1637:1:22;2563:7;:22;-1:-1:-1;;;;;1690:987:10:o;14:131:40:-;-1:-1:-1;;;;;89:31:40;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:247::-;209:6;262:2;250:9;241:7;237:23;233:32;230:52;;;278:1;275;268:12;230:52;317:9;304:23;336:31;361:5;336:31;:::i;:::-;386:5;150:247;-1:-1:-1;;;150:247:40:o;402:383::-;479:6;487;495;548:2;536:9;527:7;523:23;519:32;516:52;;;564:1;561;554:12;516:52;603:9;590:23;622:31;647:5;622:31;:::i;:::-;672:5;724:2;709:18;;696:32;;-1:-1:-1;775:2:40;760:18;;;747:32;;402:383;-1:-1:-1;;;402:383:40:o;972:180::-;1031:6;1084:2;1072:9;1063:7;1059:23;1055:32;1052:52;;;1100:1;1097;1090:12;1052:52;-1:-1:-1;1123:23:40;;972:180;-1:-1:-1;972:180:40:o;1339:315::-;1407:6;1415;1468:2;1456:9;1447:7;1443:23;1439:32;1436:52;;;1484:1;1481;1474:12;1436:52;1523:9;1510:23;1542:31;1567:5;1542:31;:::i;:::-;1592:5;1644:2;1629:18;;;;1616:32;;-1:-1:-1;;;1339:315:40:o;1659:355::-;1861:2;1843:21;;;1900:2;1880:18;;;1873:30;1939:33;1934:2;1919:18;;1912:61;2005:2;1990:18;;1659:355::o;3076:251::-;3146:6;3199:2;3187:9;3178:7;3174:23;3170:32;3167:52;;;3215:1;3212;3205:12;3167:52;3247:9;3241:16;3266:31;3291:5;3266:31;:::i;3611:184::-;3681:6;3734:2;3722:9;3713:7;3709:23;3705:32;3702:52;;;3750:1;3747;3740:12;3702:52;-1:-1:-1;3773:16:40;;3611:184;-1:-1:-1;3611:184:40:o;4152:352::-;4354:2;4336:21;;;4393:2;4373:18;;;4366:30;4432;4427:2;4412:18;;4405:58;4495:2;4480:18;;4152:352::o;4509:375::-;-1:-1:-1;;;;;4767:15:40;;;4749:34;;4819:15;;;;4814:2;4799:18;;4792:43;4866:2;4851:18;;4844:34;;;;4699:2;4684:18;;4509:375::o;4889:127::-;4950:10;4945:3;4941:20;4938:1;4931:31;4981:4;4978:1;4971:15;5005:4;5002:1;4995:15;5021:168;5061:7;5127:1;5123;5119:6;5115:14;5112:1;5109:21;5104:1;5097:9;5090:17;5086:45;5083:71;;;5134:18;;:::i;:::-;-1:-1:-1;5174:9:40;;5021:168::o;5194:217::-;5234:1;5260;5250:132;;5304:10;5299:3;5295:20;5292:1;5285:31;5339:4;5336:1;5329:15;5367:4;5364:1;5357:15;5250:132;-1:-1:-1;5396:9:40;;5194:217::o;5416:125::-;5456:4;5484:1;5481;5478:8;5475:34;;;5489:18;;:::i;:::-;-1:-1:-1;5526:9:40;;5416:125::o;5546:128::-;5586:3;5617:1;5613:6;5610:1;5607:13;5604:39;;;5623:18;;:::i;:::-;-1:-1:-1;5659:9:40;;5546:128::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "constructor": {
        "notice": "culturecoin."
      }
    },
    "version": 1
  },
  "offset": [
    217,
    4680
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x91 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5FD8C710 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x5FD8C710 EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x69FE0E2D EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0x6A272462 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0xAD9B8024 EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0xCCE7EC13 EQ PUSH2 0x1CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6394C9B EQ PUSH2 0x96 JUMPI DUP1 PUSH4 0x1E9F8AAD EQ PUSH2 0xB8 JUMPI DUP1 PUSH4 0x205A612A EQ PUSH2 0xD8 JUMPI DUP1 PUSH4 0x495057BE EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x4B5822B1 EQ PUSH2 0xF8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB6 PUSH2 0xB1 CALLDATASIZE PUSH1 0x4 PUSH2 0xEDD JUMP JUMPDEST PUSH2 0x1E0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB6 PUSH2 0xD3 CALLDATASIZE PUSH1 0x4 PUSH2 0xEDD JUMP JUMPDEST PUSH2 0x2E8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB6 PUSH2 0xF3 CALLDATASIZE PUSH1 0x4 PUSH2 0xF01 JUMP JUMPDEST PUSH2 0x35E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0x113 CALLDATASIZE PUSH1 0x4 PUSH2 0xEDD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB6 PUSH2 0x7C3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x161 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB6 PUSH2 0x170 CALLDATASIZE PUSH1 0x4 PUSH2 0xF36 JUMP JUMPDEST PUSH2 0x8E6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x181 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0x190 CALLDATASIZE PUSH1 0x4 PUSH2 0xF01 JUMP JUMPDEST PUSH2 0x967 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0x1B0 CALLDATASIZE PUSH1 0x4 PUSH2 0xF4F JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x1DB CALLDATASIZE PUSH1 0x4 PUSH2 0xF4F JUMP JUMPDEST PUSH2 0xAD4 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x20C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x203 SWAP1 PUSH2 0xF7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x285 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C7920746865206F70657261746F722063616E206368616E676520746865 PUSH1 0x44 DUP3 ADD MSTORE PUSH17 0x1031BAB93932B73A1037B832B930BA37B9 PUSH1 0x79 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x203 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH32 0xD58299B712891143E76310D5E664C4203C940A67DB37CF856BDAA3C5C76A802C SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x30B JUMPI POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x33C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x6E6F PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x203 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x381 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x203 SWAP1 PUSH2 0xF7B JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 DUP2 SSTORE PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 DUP7 SWAP3 SWAP1 SWAP2 SWAP1 DUP4 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3E8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x40C SWAP2 SWAP1 PUSH2 0xFB2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x13784ABF PUSH1 0xE3 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x9BC255F8 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x45A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x46E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x492 SWAP2 SWAP1 PUSH2 0xFCF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP11 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 LT ISZERO PUSH2 0x502 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x4E6F7420656E6F7567682066756E647320746F20627579 PUSH1 0x48 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x203 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP10 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x542 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x203 SWAP1 PUSH2 0xFE8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xC43E92B1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0xC43E92B1 SWAP1 PUSH2 0x572 SWAP1 DUP6 SWAP1 CALLER SWAP1 DUP12 SWAP1 PUSH1 0x4 ADD PUSH2 0x101F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x58C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5A0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4D47732A PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5F3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x617 SWAP2 SWAP1 PUSH2 0xFCF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 PUSH1 0x2 SLOAD DUP5 PUSH2 0x62B SWAP2 SWAP1 PUSH2 0x1059 JUMP JUMPDEST PUSH2 0x635 SWAP2 SWAP1 PUSH2 0x1078 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 PUSH2 0x645 DUP5 DUP7 PUSH2 0x1059 JUMP JUMPDEST PUSH2 0x64F SWAP2 SWAP1 PUSH2 0x1078 JUMP JUMPDEST SWAP1 POP DUP2 PUSH2 0x65C DUP3 DUP7 PUSH2 0x109A JUMP JUMPDEST PUSH2 0x666 SWAP2 SWAP1 PUSH2 0x109A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x68E SWAP1 DUP5 SWAP1 PUSH2 0x10B1 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6BD SWAP1 DUP5 SWAP1 PUSH2 0x10B1 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH1 0x0 DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x702 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x716 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x73A SWAP2 SWAP1 PUSH2 0xFB2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x769 SWAP2 SWAP1 PUSH2 0x10B1 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP11 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND SWAP2 PUSH32 0xBAC9694AC0DAA55169ABD117086FE32C89401D9A3B15DD1D34E55E0AA4E47A9D SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH1 0x1 PUSH1 0x0 SSTORE POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x7E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x203 SWAP1 PUSH2 0xF7B JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 DUP2 SSTORE CALLER DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x855 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520646F6E2774206861766520616E792062616C616E636520746F207769 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x746864726177 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x203 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 SWAP3 SWAP2 DUP4 ISZERO PUSH2 0x8FC MUL SWAP2 DUP5 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x891 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE MLOAD PUSH32 0xDDC398B321237A8D40AC914388309C2F52A08C134E4DC4CE61E32F57CB7D80F1 SWAP1 PUSH2 0x8D6 SWAP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x962 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920746865206F70657261746F72206D6179206368616E676520746865 PUSH1 0x44 DUP3 ADD MSTORE PUSH25 0x103332B2903337B9103A34329036B0B935B2BA383630B1B297 PUSH1 0x39 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x203 JUMP JUMPDEST PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x98C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x203 SWAP1 PUSH2 0xF7B JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 DUP2 SSTORE PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE DUP6 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9EA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA0E SWAP2 SWAP1 PUSH2 0xFB2 JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0xA64 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x21B0B63632B9103237B2B9903737BA1037BBB7103A37B5B2B7 PUSH1 0x39 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x203 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP11 DUP5 MSTORE DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP9 SWAP1 SSTORE DUP2 MLOAD DUP10 DUP2 MSTORE SWAP1 DUP2 ADD DUP9 SWAP1 MSTORE SWAP3 DUP5 AND SWAP3 PUSH32 0xA1424A2C6C5C34718C2D3A9246C6D8C976B24B319BAEE16FB2A9CB939BA75A02 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH1 0x1 PUSH1 0x0 SSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0xAF7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x203 SWAP1 PUSH2 0xF7B JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 DUP2 SSTORE PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE DUP4 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB55 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB79 SWAP2 SWAP1 PUSH2 0xFB2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0xBBC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x203 SWAP1 PUSH2 0xFE8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD CALLVALUE LT ISZERO PUSH2 0xC2A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x2737BA1032B737BAB3B410333AB73239903A3790313ABC97 PUSH1 0x41 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x203 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xC43E92B1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0xC43E92B1 SWAP1 PUSH2 0xC5A SWAP1 DUP5 SWAP1 CALLER SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x101F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC88 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP9 DUP6 MSTORE DUP3 MSTORE DUP1 DUP5 KECCAK256 DUP5 SWAP1 SSTORE DUP1 MLOAD PUSH4 0x26A3B995 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD SWAP4 SWAP5 DUP8 AND SWAP4 PUSH4 0x4D47732A SWAP4 DUP3 DUP2 ADD SWAP4 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCF9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD1D SWAP2 SWAP1 PUSH2 0xFCF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 PUSH1 0x2 SLOAD CALLVALUE PUSH2 0xD31 SWAP2 SWAP1 PUSH2 0x1059 JUMP JUMPDEST PUSH2 0xD3B SWAP2 SWAP1 PUSH2 0x1078 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 PUSH2 0xD4B DUP5 CALLVALUE PUSH2 0x1059 JUMP JUMPDEST PUSH2 0xD55 SWAP2 SWAP1 PUSH2 0x1078 JUMP JUMPDEST SWAP1 POP DUP2 PUSH2 0xD62 DUP3 CALLVALUE PUSH2 0x109A JUMP JUMPDEST PUSH2 0xD6C SWAP2 SWAP1 PUSH2 0x109A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0xD94 SWAP1 DUP5 SWAP1 PUSH2 0x10B1 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xDC3 SWAP1 DUP5 SWAP1 PUSH2 0x10B1 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE08 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE1C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE40 SWAP2 SWAP1 PUSH2 0xFB2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE6F SWAP2 SWAP1 PUSH2 0x10B1 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP8 DUP2 MSTORE CALLVALUE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP2 PUSH32 0xBAC9694AC0DAA55169ABD117086FE32C89401D9A3B15DD1D34E55E0AA4E47A9D SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH1 0x1 PUSH1 0x0 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xEDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xEFA DUP2 PUSH2 0xEC5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xF16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0xF21 DUP2 PUSH2 0xEC5 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF48 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xF6D DUP2 PUSH2 0xEC5 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xEFA DUP2 PUSH2 0xEC5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1C SWAP1 DUP3 ADD MSTORE PUSH32 0x4E6F2070726963652073657420666F72207468697320746F6B656E2E00000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1073 JUMPI PUSH2 0x1073 PUSH2 0x1043 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1095 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x10AC JUMPI PUSH2 0x10AC PUSH2 0x1043 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x10C4 JUMPI PUSH2 0x10C4 PUSH2 0x1043 JUMP JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH30 0x7FFA5936E74BDE03E16DC85440649B7068A8A45F10B50C7DCFA189EC45AC PUSH2 0x6473 PUSH16 0x6C634300080900330000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        217,
        4680
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        217,
        4680
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        217,
        4680
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5": {
      "fn": null,
      "offset": [
        217,
        4680
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        217,
        4680
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "8": {
      "fn": null,
      "offset": [
        217,
        4680
      ],
      "op": "LT",
      "path": "10"
    },
    "9": {
      "fn": null,
      "offset": [
        217,
        4680
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x91"
    },
    "12": {
      "fn": null,
      "offset": [
        217,
        4680
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "13": {
      "fn": null,
      "offset": [
        217,
        4680
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        217,
        4680
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "16": {
      "fn": null,
      "offset": [
        217,
        4680
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        217,
        4680
      ],
      "op": "SHR",
      "path": "10"
    },
    "19": {
      "fn": null,
      "offset": [
        217,
        4680
      ],
      "op": "DUP1",
      "path": "10"
    },
    "20": {
      "fn": null,
      "offset": [
        217,
        4680
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x5FD8C710"
    },
    "25": {
      "fn": null,
      "offset": [
        217,
        4680
      ],
      "op": "GT",
      "path": "10"
    },
    "26": {
      "fn": null,
      "offset": [
        217,
        4680
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x59"
    },
    "29": {
      "fn": null,
      "offset": [
        217,
        4680
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "30": {
      "fn": null,
      "offset": [
        217,
        4680
      ],
      "op": "DUP1",
      "path": "10"
    },
    "31": {
      "fn": null,
      "offset": [
        217,
        4680
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x5FD8C710"
    },
    "36": {
      "fn": null,
      "offset": [
        217,
        4680
      ],
      "op": "EQ",
      "path": "10"
    },
    "37": {
      "fn": null,
      "offset": [
        217,
        4680
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x140"
    },
    "40": {
      "fn": null,
      "offset": [
        217,
        4680
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "41": {
      "fn": null,
      "offset": [
        217,
        4680
      ],
      "op": "DUP1",
      "path": "10"
    },
    "42": {
      "fn": null,
      "offset": [
        217,
        4680
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x69FE0E2D"
    },
    "47": {
      "fn": null,
      "offset": [
        217,
        4680
      ],
      "op": "EQ",
      "path": "10"
    },
    "48": {
      "fn": null,
      "offset": [
        217,
        4680
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x155"
    },
    "51": {
      "fn": null,
      "offset": [
        217,
        4680
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "52": {
      "fn": null,
      "offset": [
        217,
        4680
      ],
      "op": "DUP1",
      "path": "10"
    },
    "53": {
      "fn": null,
      "offset": [
        217,
        4680
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x6A272462"
    },
    "58": {
      "fn": null,
      "offset": [
        217,
        4680
      ],
      "op": "EQ",
      "path": "10"
    },
    "59": {
      "fn": null,
      "offset": [
        217,
        4680
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x175"
    },
    "62": {
      "fn": null,
      "offset": [
        217,
        4680
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "63": {
      "fn": null,
      "offset": [
        217,
        4680
      ],
      "op": "DUP1",
      "path": "10"
    },
    "64": {
      "fn": null,
      "offset": [
        217,
        4680
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xAD9B8024"
    },
    "69": {
      "fn": null,
      "offset": [
        217,
        4680
      ],
      "op": "EQ",
      "path": "10"
    },
    "70": {
      "fn": null,
      "offset": [
        217,
        4680
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x195"
    },
    "73": {
      "fn": null,
      "offset": [
        217,
        4680
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "74": {
      "fn": null,
      "offset": [
        217,
        4680
      ],
      "op": "DUP1",
      "path": "10"
    },
    "75": {
      "fn": null,
      "offset": [
        217,
        4680
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xCCE7EC13"
    },
    "80": {
      "fn": null,
      "offset": [
        217,
        4680
      ],
      "op": "EQ",
      "path": "10"
    },
    "81": {
      "fn": null,
      "offset": [
        217,
        4680
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1CD"
    },
    "84": {
      "fn": null,
      "offset": [
        217,
        4680
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "85": {
      "fn": null,
      "offset": [
        217,
        4680
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "87": {
      "fn": null,
      "offset": [
        217,
        4680
      ],
      "op": "DUP1",
      "path": "10"
    },
    "88": {
      "fn": null,
      "offset": [
        217,
        4680
      ],
      "op": "REVERT",
      "path": "10"
    },
    "89": {
      "fn": null,
      "offset": [
        217,
        4680
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "90": {
      "fn": null,
      "offset": [
        217,
        4680
      ],
      "op": "DUP1",
      "path": "10"
    },
    "91": {
      "fn": null,
      "offset": [
        217,
        4680
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x6394C9B"
    },
    "96": {
      "fn": null,
      "offset": [
        217,
        4680
      ],
      "op": "EQ",
      "path": "10"
    },
    "97": {
      "fn": null,
      "offset": [
        217,
        4680
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x96"
    },
    "100": {
      "fn": null,
      "offset": [
        217,
        4680
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "101": {
      "fn": null,
      "offset": [
        217,
        4680
      ],
      "op": "DUP1",
      "path": "10"
    },
    "102": {
      "fn": null,
      "offset": [
        217,
        4680
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x1E9F8AAD"
    },
    "107": {
      "fn": null,
      "offset": [
        217,
        4680
      ],
      "op": "EQ",
      "path": "10"
    },
    "108": {
      "fn": null,
      "offset": [
        217,
        4680
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB8"
    },
    "111": {
      "fn": null,
      "offset": [
        217,
        4680
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "112": {
      "fn": null,
      "offset": [
        217,
        4680
      ],
      "op": "DUP1",
      "path": "10"
    },
    "113": {
      "fn": null,
      "offset": [
        217,
        4680
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x205A612A"
    },
    "118": {
      "fn": null,
      "offset": [
        217,
        4680
      ],
      "op": "EQ",
      "path": "10"
    },
    "119": {
      "fn": null,
      "offset": [
        217,
        4680
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xD8"
    },
    "122": {
      "fn": null,
      "offset": [
        217,
        4680
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "123": {
      "fn": null,
      "offset": [
        217,
        4680
      ],
      "op": "DUP1",
      "path": "10"
    },
    "124": {
      "fn": null,
      "offset": [
        217,
        4680
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x495057BE"
    },
    "129": {
      "fn": null,
      "offset": [
        217,
        4680
      ],
      "op": "EQ",
      "path": "10"
    },
    "130": {
      "fn": null,
      "offset": [
        217,
        4680
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB6"
    },
    "133": {
      "fn": null,
      "offset": [
        217,
        4680
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "134": {
      "fn": null,
      "offset": [
        217,
        4680
      ],
      "op": "DUP1",
      "path": "10"
    },
    "135": {
      "fn": null,
      "offset": [
        217,
        4680
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x4B5822B1"
    },
    "140": {
      "fn": null,
      "offset": [
        217,
        4680
      ],
      "op": "EQ",
      "path": "10"
    },
    "141": {
      "fn": null,
      "offset": [
        217,
        4680
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xF8"
    },
    "144": {
      "fn": null,
      "offset": [
        217,
        4680
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "145": {
      "fn": null,
      "offset": [
        217,
        4680
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "146": {
      "fn": null,
      "offset": [
        217,
        4680
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "148": {
      "fn": null,
      "offset": [
        217,
        4680
      ],
      "op": "DUP1",
      "path": "10"
    },
    "149": {
      "first_revert": true,
      "fn": null,
      "offset": [
        217,
        4680
      ],
      "op": "REVERT",
      "path": "10"
    },
    "150": {
      "fn": "MiniMart.changeOperator",
      "offset": [
        4074,
        4376
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "151": {
      "fn": "MiniMart.changeOperator",
      "offset": [
        4074,
        4376
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "152": {
      "fn": "MiniMart.changeOperator",
      "offset": [
        4074,
        4376
      ],
      "op": "DUP1",
      "path": "10"
    },
    "153": {
      "fn": "MiniMart.changeOperator",
      "offset": [
        4074,
        4376
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "154": {
      "fn": "MiniMart.changeOperator",
      "offset": [
        4074,
        4376
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA2"
    },
    "157": {
      "fn": "MiniMart.changeOperator",
      "offset": [
        4074,
        4376
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "158": {
      "fn": "MiniMart.changeOperator",
      "offset": [
        4074,
        4376
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "160": {
      "fn": "MiniMart.changeOperator",
      "offset": [
        4074,
        4376
      ],
      "op": "DUP1",
      "path": "10"
    },
    "161": {
      "fn": "MiniMart.changeOperator",
      "offset": [
        4074,
        4376
      ],
      "op": "REVERT",
      "path": "10"
    },
    "162": {
      "fn": "MiniMart.changeOperator",
      "offset": [
        4074,
        4376
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "163": {
      "op": "POP"
    },
    "164": {
      "fn": "MiniMart.changeOperator",
      "offset": [
        4074,
        4376
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB6"
    },
    "167": {
      "fn": "MiniMart.changeOperator",
      "offset": [
        4074,
        4376
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB1"
    },
    "170": {
      "fn": "MiniMart.changeOperator",
      "offset": [
        4074,
        4376
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "171": {
      "fn": "MiniMart.changeOperator",
      "offset": [
        4074,
        4376
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "173": {
      "fn": "MiniMart.changeOperator",
      "offset": [
        4074,
        4376
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xEDD"
    },
    "176": {
      "fn": "MiniMart.changeOperator",
      "jump": "i",
      "offset": [
        4074,
        4376
      ],
      "op": "JUMP",
      "path": "10"
    },
    "177": {
      "fn": "MiniMart.changeOperator",
      "offset": [
        4074,
        4376
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "178": {
      "fn": "MiniMart.changeOperator",
      "offset": [
        4074,
        4376
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1E0"
    },
    "181": {
      "fn": "MiniMart.changeOperator",
      "jump": "i",
      "offset": [
        4074,
        4376
      ],
      "op": "JUMP",
      "path": "10"
    },
    "182": {
      "fn": "MiniMart.changeOperator",
      "offset": [
        4074,
        4376
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "183": {
      "fn": "MiniMart.changeOperator",
      "offset": [
        4074,
        4376
      ],
      "op": "STOP",
      "path": "10"
    },
    "184": {
      "fn": "MiniMart.setGasToken",
      "offset": [
        4501,
        4678
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "185": {
      "fn": "MiniMart.setGasToken",
      "offset": [
        4501,
        4678
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "186": {
      "fn": "MiniMart.setGasToken",
      "offset": [
        4501,
        4678
      ],
      "op": "DUP1",
      "path": "10"
    },
    "187": {
      "fn": "MiniMart.setGasToken",
      "offset": [
        4501,
        4678
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "188": {
      "fn": "MiniMart.setGasToken",
      "offset": [
        4501,
        4678
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xC4"
    },
    "191": {
      "fn": "MiniMart.setGasToken",
      "offset": [
        4501,
        4678
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "192": {
      "fn": "MiniMart.setGasToken",
      "offset": [
        4501,
        4678
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "194": {
      "fn": "MiniMart.setGasToken",
      "offset": [
        4501,
        4678
      ],
      "op": "DUP1",
      "path": "10"
    },
    "195": {
      "fn": "MiniMart.setGasToken",
      "offset": [
        4501,
        4678
      ],
      "op": "REVERT",
      "path": "10"
    },
    "196": {
      "fn": "MiniMart.setGasToken",
      "offset": [
        4501,
        4678
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "197": {
      "op": "POP"
    },
    "198": {
      "fn": "MiniMart.setGasToken",
      "offset": [
        4501,
        4678
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB6"
    },
    "201": {
      "fn": "MiniMart.setGasToken",
      "offset": [
        4501,
        4678
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xD3"
    },
    "204": {
      "fn": "MiniMart.setGasToken",
      "offset": [
        4501,
        4678
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "205": {
      "fn": "MiniMart.setGasToken",
      "offset": [
        4501,
        4678
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "207": {
      "fn": "MiniMart.setGasToken",
      "offset": [
        4501,
        4678
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xEDD"
    },
    "210": {
      "fn": "MiniMart.setGasToken",
      "jump": "i",
      "offset": [
        4501,
        4678
      ],
      "op": "JUMP",
      "path": "10"
    },
    "211": {
      "fn": "MiniMart.setGasToken",
      "offset": [
        4501,
        4678
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "212": {
      "fn": "MiniMart.setGasToken",
      "offset": [
        4501,
        4678
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2E8"
    },
    "215": {
      "fn": "MiniMart.setGasToken",
      "jump": "i",
      "offset": [
        4501,
        4678
      ],
      "op": "JUMP",
      "path": "10"
    },
    "216": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2683,
        3747
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "217": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2683,
        3747
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "218": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2683,
        3747
      ],
      "op": "DUP1",
      "path": "10"
    },
    "219": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2683,
        3747
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "220": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2683,
        3747
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xE4"
    },
    "223": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2683,
        3747
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "224": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2683,
        3747
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "226": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2683,
        3747
      ],
      "op": "DUP1",
      "path": "10"
    },
    "227": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2683,
        3747
      ],
      "op": "REVERT",
      "path": "10"
    },
    "228": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2683,
        3747
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "229": {
      "op": "POP"
    },
    "230": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2683,
        3747
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB6"
    },
    "233": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2683,
        3747
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xF3"
    },
    "236": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2683,
        3747
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "237": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2683,
        3747
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "239": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2683,
        3747
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xF01"
    },
    "242": {
      "fn": "MiniMart.buyWithCC",
      "jump": "i",
      "offset": [
        2683,
        3747
      ],
      "op": "JUMP",
      "path": "10"
    },
    "243": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2683,
        3747
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "244": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2683,
        3747
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x35E"
    },
    "247": {
      "fn": "MiniMart.buyWithCC",
      "jump": "i",
      "offset": [
        2683,
        3747
      ],
      "op": "JUMP",
      "path": "10"
    },
    "248": {
      "fn": "MiniMart.viewBalances",
      "offset": [
        4382,
        4495
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "249": {
      "fn": "MiniMart.viewBalances",
      "offset": [
        4382,
        4495
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "250": {
      "fn": "MiniMart.viewBalances",
      "offset": [
        4382,
        4495
      ],
      "op": "DUP1",
      "path": "10"
    },
    "251": {
      "fn": "MiniMart.viewBalances",
      "offset": [
        4382,
        4495
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "252": {
      "fn": "MiniMart.viewBalances",
      "offset": [
        4382,
        4495
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x104"
    },
    "255": {
      "fn": "MiniMart.viewBalances",
      "offset": [
        4382,
        4495
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "256": {
      "fn": "MiniMart.viewBalances",
      "offset": [
        4382,
        4495
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "258": {
      "fn": "MiniMart.viewBalances",
      "offset": [
        4382,
        4495
      ],
      "op": "DUP1",
      "path": "10"
    },
    "259": {
      "fn": "MiniMart.viewBalances",
      "offset": [
        4382,
        4495
      ],
      "op": "REVERT",
      "path": "10"
    },
    "260": {
      "fn": "MiniMart.viewBalances",
      "offset": [
        4382,
        4495
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "261": {
      "op": "POP"
    },
    "262": {
      "fn": "MiniMart.viewBalances",
      "offset": [
        4382,
        4495
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x12E"
    },
    "265": {
      "fn": "MiniMart.viewBalances",
      "offset": [
        4382,
        4495
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x113"
    },
    "268": {
      "fn": "MiniMart.viewBalances",
      "offset": [
        4382,
        4495
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "269": {
      "fn": "MiniMart.viewBalances",
      "offset": [
        4382,
        4495
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "271": {
      "fn": "MiniMart.viewBalances",
      "offset": [
        4382,
        4495
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xEDD"
    },
    "274": {
      "fn": "MiniMart.viewBalances",
      "jump": "i",
      "offset": [
        4382,
        4495
      ],
      "op": "JUMP",
      "path": "10"
    },
    "275": {
      "fn": "MiniMart.viewBalances",
      "offset": [
        4382,
        4495
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "276": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "278": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "280": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "282": {
      "op": "SHL"
    },
    "283": {
      "op": "SUB"
    },
    "284": {
      "fn": "MiniMart.viewBalances",
      "offset": [
        4469,
        4487
      ],
      "op": "AND",
      "path": "10",
      "statement": 0
    },
    "285": {
      "fn": "MiniMart.viewBalances",
      "offset": [
        4445,
        4449
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "287": {
      "fn": "MiniMart.viewBalances",
      "offset": [
        4469,
        4487
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "288": {
      "fn": "MiniMart.viewBalances",
      "offset": [
        4469,
        4487
      ],
      "op": "DUP2",
      "path": "10"
    },
    "289": {
      "fn": "MiniMart.viewBalances",
      "offset": [
        4469,
        4487
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "290": {
      "fn": "MiniMart.viewBalances",
      "offset": [
        4469,
        4477
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "292": {
      "fn": "MiniMart.viewBalances",
      "offset": [
        4469,
        4487
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "294": {
      "fn": "MiniMart.viewBalances",
      "offset": [
        4469,
        4487
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "295": {
      "fn": "MiniMart.viewBalances",
      "offset": [
        4469,
        4487
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "297": {
      "fn": "MiniMart.viewBalances",
      "offset": [
        4469,
        4487
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "298": {
      "fn": "MiniMart.viewBalances",
      "offset": [
        4469,
        4487
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "299": {
      "fn": "MiniMart.viewBalances",
      "offset": [
        4469,
        4487
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "300": {
      "fn": "MiniMart.viewBalances",
      "offset": [
        4469,
        4487
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "301": {
      "fn": "MiniMart.viewBalances",
      "offset": [
        4382,
        4495
      ],
      "op": "JUMP",
      "path": "10"
    },
    "302": {
      "fn": "MiniMart.viewBalances",
      "offset": [
        4382,
        4495
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "303": {
      "fn": "MiniMart.viewBalances",
      "offset": [
        4382,
        4495
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "305": {
      "fn": "MiniMart.viewBalances",
      "offset": [
        4382,
        4495
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "306": {
      "op": "SWAP1"
    },
    "307": {
      "op": "DUP2"
    },
    "308": {
      "op": "MSTORE"
    },
    "309": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "311": {
      "op": "ADD"
    },
    "312": {
      "fn": "MiniMart.viewBalances",
      "offset": [
        4382,
        4495
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "314": {
      "fn": "MiniMart.viewBalances",
      "offset": [
        4382,
        4495
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "315": {
      "fn": "MiniMart.viewBalances",
      "offset": [
        4382,
        4495
      ],
      "op": "DUP1",
      "path": "10"
    },
    "316": {
      "fn": "MiniMart.viewBalances",
      "offset": [
        4382,
        4495
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "317": {
      "fn": "MiniMart.viewBalances",
      "offset": [
        4382,
        4495
      ],
      "op": "SUB",
      "path": "10"
    },
    "318": {
      "fn": "MiniMart.viewBalances",
      "offset": [
        4382,
        4495
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "319": {
      "fn": "MiniMart.viewBalances",
      "offset": [
        4382,
        4495
      ],
      "op": "RETURN",
      "path": "10"
    },
    "320": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3753,
        4068
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "321": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3753,
        4068
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "322": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3753,
        4068
      ],
      "op": "DUP1",
      "path": "10"
    },
    "323": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3753,
        4068
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "324": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3753,
        4068
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x14C"
    },
    "327": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3753,
        4068
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "328": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3753,
        4068
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "330": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3753,
        4068
      ],
      "op": "DUP1",
      "path": "10"
    },
    "331": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3753,
        4068
      ],
      "op": "REVERT",
      "path": "10"
    },
    "332": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3753,
        4068
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "333": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3753,
        4068
      ],
      "op": "POP",
      "path": "10"
    },
    "334": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3753,
        4068
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB6"
    },
    "337": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3753,
        4068
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x7C3"
    },
    "340": {
      "fn": "MiniMart.withdrawBalance",
      "jump": "i",
      "offset": [
        3753,
        4068
      ],
      "op": "JUMP",
      "path": "10"
    },
    "341": {
      "fn": "MiniMart.setFee",
      "offset": [
        1090,
        1267
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "342": {
      "fn": "MiniMart.setFee",
      "offset": [
        1090,
        1267
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "343": {
      "fn": "MiniMart.setFee",
      "offset": [
        1090,
        1267
      ],
      "op": "DUP1",
      "path": "10"
    },
    "344": {
      "fn": "MiniMart.setFee",
      "offset": [
        1090,
        1267
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "345": {
      "fn": "MiniMart.setFee",
      "offset": [
        1090,
        1267
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x161"
    },
    "348": {
      "fn": "MiniMart.setFee",
      "offset": [
        1090,
        1267
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "349": {
      "fn": "MiniMart.setFee",
      "offset": [
        1090,
        1267
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "351": {
      "fn": "MiniMart.setFee",
      "offset": [
        1090,
        1267
      ],
      "op": "DUP1",
      "path": "10"
    },
    "352": {
      "fn": "MiniMart.setFee",
      "offset": [
        1090,
        1267
      ],
      "op": "REVERT",
      "path": "10"
    },
    "353": {
      "fn": "MiniMart.setFee",
      "offset": [
        1090,
        1267
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "354": {
      "op": "POP"
    },
    "355": {
      "fn": "MiniMart.setFee",
      "offset": [
        1090,
        1267
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB6"
    },
    "358": {
      "fn": "MiniMart.setFee",
      "offset": [
        1090,
        1267
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x170"
    },
    "361": {
      "fn": "MiniMart.setFee",
      "offset": [
        1090,
        1267
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "362": {
      "fn": "MiniMart.setFee",
      "offset": [
        1090,
        1267
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "364": {
      "fn": "MiniMart.setFee",
      "offset": [
        1090,
        1267
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xF36"
    },
    "367": {
      "fn": "MiniMart.setFee",
      "jump": "i",
      "offset": [
        1090,
        1267
      ],
      "op": "JUMP",
      "path": "10"
    },
    "368": {
      "fn": "MiniMart.setFee",
      "offset": [
        1090,
        1267
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "369": {
      "fn": "MiniMart.setFee",
      "offset": [
        1090,
        1267
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x8E6"
    },
    "372": {
      "fn": "MiniMart.setFee",
      "jump": "i",
      "offset": [
        1090,
        1267
      ],
      "op": "JUMP",
      "path": "10"
    },
    "373": {
      "fn": "MiniMart.sell",
      "offset": [
        1273,
        1684
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "374": {
      "fn": "MiniMart.sell",
      "offset": [
        1273,
        1684
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "375": {
      "fn": "MiniMart.sell",
      "offset": [
        1273,
        1684
      ],
      "op": "DUP1",
      "path": "10"
    },
    "376": {
      "fn": "MiniMart.sell",
      "offset": [
        1273,
        1684
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "377": {
      "fn": "MiniMart.sell",
      "offset": [
        1273,
        1684
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x181"
    },
    "380": {
      "fn": "MiniMart.sell",
      "offset": [
        1273,
        1684
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "381": {
      "fn": "MiniMart.sell",
      "offset": [
        1273,
        1684
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "383": {
      "fn": "MiniMart.sell",
      "offset": [
        1273,
        1684
      ],
      "op": "DUP1",
      "path": "10"
    },
    "384": {
      "fn": "MiniMart.sell",
      "offset": [
        1273,
        1684
      ],
      "op": "REVERT",
      "path": "10"
    },
    "385": {
      "fn": "MiniMart.sell",
      "offset": [
        1273,
        1684
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "386": {
      "op": "POP"
    },
    "387": {
      "fn": "MiniMart.sell",
      "offset": [
        1273,
        1684
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x12E"
    },
    "390": {
      "fn": "MiniMart.sell",
      "offset": [
        1273,
        1684
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x190"
    },
    "393": {
      "fn": "MiniMart.sell",
      "offset": [
        1273,
        1684
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "394": {
      "fn": "MiniMart.sell",
      "offset": [
        1273,
        1684
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "396": {
      "fn": "MiniMart.sell",
      "offset": [
        1273,
        1684
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xF01"
    },
    "399": {
      "fn": "MiniMart.sell",
      "jump": "i",
      "offset": [
        1273,
        1684
      ],
      "op": "JUMP",
      "path": "10"
    },
    "400": {
      "fn": "MiniMart.sell",
      "offset": [
        1273,
        1684
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "401": {
      "fn": "MiniMart.sell",
      "offset": [
        1273,
        1684
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x967"
    },
    "404": {
      "fn": "MiniMart.sell",
      "jump": "i",
      "offset": [
        1273,
        1684
      ],
      "op": "JUMP",
      "path": "10"
    },
    "405": {
      "offset": [
        689,
        749
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "406": {
      "fn": "MiniMart.sell",
      "offset": [
        689,
        749
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "407": {
      "fn": "MiniMart.sell",
      "offset": [
        689,
        749
      ],
      "op": "DUP1",
      "path": "10"
    },
    "408": {
      "fn": "MiniMart.sell",
      "offset": [
        689,
        749
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "409": {
      "fn": "MiniMart.sell",
      "offset": [
        689,
        749
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1A1"
    },
    "412": {
      "fn": "MiniMart.sell",
      "offset": [
        689,
        749
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "413": {
      "fn": "MiniMart.sell",
      "offset": [
        689,
        749
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "415": {
      "fn": "MiniMart.sell",
      "offset": [
        689,
        749
      ],
      "op": "DUP1",
      "path": "10"
    },
    "416": {
      "fn": "MiniMart.sell",
      "offset": [
        689,
        749
      ],
      "op": "REVERT",
      "path": "10"
    },
    "417": {
      "fn": "MiniMart.sell",
      "offset": [
        689,
        749
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "418": {
      "op": "POP"
    },
    "419": {
      "offset": [
        689,
        749
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x12E"
    },
    "422": {
      "fn": "MiniMart.sell",
      "offset": [
        689,
        749
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1B0"
    },
    "425": {
      "fn": "MiniMart.sell",
      "offset": [
        689,
        749
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "426": {
      "fn": "MiniMart.sell",
      "offset": [
        689,
        749
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "428": {
      "fn": "MiniMart.sell",
      "offset": [
        689,
        749
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xF4F"
    },
    "431": {
      "fn": "MiniMart.sell",
      "jump": "i",
      "offset": [
        689,
        749
      ],
      "op": "JUMP",
      "path": "10"
    },
    "432": {
      "fn": "MiniMart.sell",
      "offset": [
        689,
        749
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "433": {
      "fn": "MiniMart.sell",
      "offset": [
        689,
        749
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "435": {
      "fn": "MiniMart.sell",
      "offset": [
        689,
        749
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "437": {
      "fn": "MiniMart.sell",
      "offset": [
        689,
        749
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "438": {
      "fn": "MiniMart.sell",
      "offset": [
        689,
        749
      ],
      "op": "DUP2",
      "path": "10"
    },
    "439": {
      "fn": "MiniMart.sell",
      "offset": [
        689,
        749
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "440": {
      "fn": "MiniMart.sell",
      "offset": [
        689,
        749
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "442": {
      "fn": "MiniMart.sell",
      "offset": [
        689,
        749
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "443": {
      "fn": "MiniMart.sell",
      "offset": [
        689,
        749
      ],
      "op": "DUP4",
      "path": "10"
    },
    "444": {
      "fn": "MiniMart.sell",
      "offset": [
        689,
        749
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "445": {
      "fn": "MiniMart.sell",
      "offset": [
        689,
        749
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "447": {
      "fn": "MiniMart.sell",
      "offset": [
        689,
        749
      ],
      "op": "DUP1",
      "path": "10"
    },
    "448": {
      "fn": "MiniMart.sell",
      "offset": [
        689,
        749
      ],
      "op": "DUP5",
      "path": "10"
    },
    "449": {
      "fn": "MiniMart.sell",
      "offset": [
        689,
        749
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "450": {
      "fn": "MiniMart.sell",
      "offset": [
        689,
        749
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "451": {
      "fn": "MiniMart.sell",
      "offset": [
        689,
        749
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "452": {
      "fn": "MiniMart.sell",
      "offset": [
        689,
        749
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "453": {
      "fn": "MiniMart.sell",
      "offset": [
        689,
        749
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "454": {
      "fn": "MiniMart.sell",
      "offset": [
        689,
        749
      ],
      "op": "DUP3",
      "path": "10"
    },
    "455": {
      "fn": "MiniMart.sell",
      "offset": [
        689,
        749
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "456": {
      "fn": "MiniMart.sell",
      "offset": [
        689,
        749
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "457": {
      "fn": "MiniMart.sell",
      "offset": [
        689,
        749
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "458": {
      "fn": "MiniMart.sell",
      "offset": [
        689,
        749
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "459": {
      "fn": "MiniMart.sell",
      "offset": [
        689,
        749
      ],
      "op": "DUP2",
      "path": "10"
    },
    "460": {
      "fn": "MiniMart.sell",
      "offset": [
        689,
        749
      ],
      "op": "JUMP",
      "path": "10"
    },
    "461": {
      "fn": "MiniMart.buy",
      "offset": [
        1690,
        2677
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "462": {
      "fn": "MiniMart.buy",
      "offset": [
        1690,
        2677
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB6"
    },
    "465": {
      "fn": "MiniMart.buy",
      "offset": [
        1690,
        2677
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1DB"
    },
    "468": {
      "fn": "MiniMart.buy",
      "offset": [
        1690,
        2677
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "469": {
      "fn": "MiniMart.buy",
      "offset": [
        1690,
        2677
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "471": {
      "fn": "MiniMart.buy",
      "offset": [
        1690,
        2677
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xF4F"
    },
    "474": {
      "fn": "MiniMart.buy",
      "jump": "i",
      "offset": [
        1690,
        2677
      ],
      "op": "JUMP",
      "path": "10"
    },
    "475": {
      "fn": "MiniMart.buy",
      "offset": [
        1690,
        2677
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "476": {
      "fn": "MiniMart.buy",
      "offset": [
        1690,
        2677
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xAD4"
    },
    "479": {
      "fn": "MiniMart.buy",
      "jump": "i",
      "offset": [
        1690,
        2677
      ],
      "op": "JUMP",
      "path": "10"
    },
    "480": {
      "fn": "MiniMart.changeOperator",
      "offset": [
        4074,
        4376
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "481": {
      "offset": [
        1680,
        1681
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "483": {
      "offset": [
        2260,
        2267
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "485": {
      "fn": "MiniMart.changeOperator",
      "offset": [
        2260,
        2267
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "486": {
      "offset": [
        2260,
        2279
      ],
      "op": "EQ",
      "path": "22"
    },
    "487": {
      "fn": "MiniMart.changeOperator",
      "offset": [
        2260,
        2279
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "488": {
      "offset": [
        2252,
        2315
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x20C"
    },
    "491": {
      "offset": [
        2252,
        2315
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "492": {
      "fn": "MiniMart.changeOperator",
      "offset": [
        2252,
        2315
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "494": {
      "fn": "MiniMart.changeOperator",
      "offset": [
        2252,
        2315
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "495": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "499": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "501": {
      "op": "SHL"
    },
    "502": {
      "offset": [
        2252,
        2315
      ],
      "op": "DUP2",
      "path": "22"
    },
    "503": {
      "fn": "MiniMart.changeOperator",
      "offset": [
        2252,
        2315
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "504": {
      "fn": "MiniMart.changeOperator",
      "offset": [
        2252,
        2315
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "506": {
      "fn": "MiniMart.changeOperator",
      "offset": [
        2252,
        2315
      ],
      "op": "ADD",
      "path": "22"
    },
    "507": {
      "fn": "MiniMart.changeOperator",
      "offset": [
        2252,
        2315
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x203"
    },
    "510": {
      "fn": "MiniMart.changeOperator",
      "offset": [
        2252,
        2315
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "511": {
      "fn": "MiniMart.changeOperator",
      "offset": [
        2252,
        2315
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xF7B"
    },
    "514": {
      "fn": "MiniMart.changeOperator",
      "jump": "i",
      "offset": [
        2252,
        2315
      ],
      "op": "JUMP",
      "path": "22"
    },
    "515": {
      "fn": "MiniMart.changeOperator",
      "offset": [
        2252,
        2315
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "516": {
      "fn": "MiniMart.changeOperator",
      "offset": [
        2252,
        2315
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "518": {
      "fn": "MiniMart.changeOperator",
      "offset": [
        2252,
        2315
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "519": {
      "fn": "MiniMart.changeOperator",
      "offset": [
        2252,
        2315
      ],
      "op": "DUP1",
      "path": "22"
    },
    "520": {
      "fn": "MiniMart.changeOperator",
      "offset": [
        2252,
        2315
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "521": {
      "fn": "MiniMart.changeOperator",
      "offset": [
        2252,
        2315
      ],
      "op": "SUB",
      "path": "22"
    },
    "522": {
      "fn": "MiniMart.changeOperator",
      "offset": [
        2252,
        2315
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "523": {
      "fn": "MiniMart.changeOperator",
      "offset": [
        2252,
        2315
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "22"
    },
    "524": {
      "fn": "MiniMart.changeOperator",
      "offset": [
        2252,
        2315
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "525": {
      "offset": [
        1680,
        1681
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "527": {
      "offset": [
        2390,
        2397
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "529": {
      "offset": [
        2390,
        2408
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "530": {
      "fn": "MiniMart.changeOperator",
      "offset": [
        4174,
        4182
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 1,
      "value": "0x1"
    },
    "532": {
      "fn": "MiniMart.changeOperator",
      "offset": [
        4174,
        4182
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "533": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "535": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "537": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "539": {
      "op": "SHL"
    },
    "540": {
      "op": "SUB"
    },
    "541": {
      "fn": "MiniMart.changeOperator",
      "offset": [
        4174,
        4182
      ],
      "op": "AND",
      "path": "10"
    },
    "542": {
      "fn": "MiniMart.changeOperator",
      "offset": [
        4160,
        4170
      ],
      "op": "CALLER",
      "path": "10"
    },
    "543": {
      "branch": 30,
      "fn": "MiniMart.changeOperator",
      "offset": [
        4160,
        4182
      ],
      "op": "EQ",
      "path": "10"
    },
    "544": {
      "fn": "MiniMart.changeOperator",
      "offset": [
        4152,
        4235
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x285"
    },
    "547": {
      "branch": 30,
      "fn": "MiniMart.changeOperator",
      "offset": [
        4152,
        4235
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "548": {
      "fn": "MiniMart.changeOperator",
      "offset": [
        4152,
        4235
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "550": {
      "fn": "MiniMart.changeOperator",
      "offset": [
        4152,
        4235
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "551": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "555": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "557": {
      "op": "SHL"
    },
    "558": {
      "fn": "MiniMart.changeOperator",
      "offset": [
        4152,
        4235
      ],
      "op": "DUP2",
      "path": "10"
    },
    "559": {
      "fn": "MiniMart.changeOperator",
      "offset": [
        4152,
        4235
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "560": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "562": {
      "fn": "MiniMart.changeOperator",
      "offset": [
        4152,
        4235
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "564": {
      "fn": "MiniMart.changeOperator",
      "offset": [
        4152,
        4235
      ],
      "op": "DUP3",
      "path": "10"
    },
    "565": {
      "fn": "MiniMart.changeOperator",
      "offset": [
        4152,
        4235
      ],
      "op": "ADD",
      "path": "10"
    },
    "566": {
      "op": "MSTORE"
    },
    "567": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "569": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "571": {
      "op": "DUP3"
    },
    "572": {
      "op": "ADD"
    },
    "573": {
      "op": "MSTORE"
    },
    "574": {
      "op": "PUSH32",
      "value": "0x6F6E6C7920746865206F70657261746F722063616E206368616E676520746865"
    },
    "607": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "609": {
      "op": "DUP3"
    },
    "610": {
      "op": "ADD"
    },
    "611": {
      "op": "MSTORE"
    },
    "612": {
      "op": "PUSH17",
      "value": "0x1031BAB93932B73A1037B832B930BA37B9"
    },
    "630": {
      "op": "PUSH1",
      "value": "0x79"
    },
    "632": {
      "op": "SHL"
    },
    "633": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "635": {
      "op": "DUP3"
    },
    "636": {
      "op": "ADD"
    },
    "637": {
      "op": "MSTORE"
    },
    "638": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "640": {
      "op": "ADD"
    },
    "641": {
      "fn": "MiniMart.changeOperator",
      "offset": [
        4152,
        4235
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x203"
    },
    "644": {
      "op": "JUMP"
    },
    "645": {
      "fn": "MiniMart.changeOperator",
      "offset": [
        4152,
        4235
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "646": {
      "fn": "MiniMart.changeOperator",
      "offset": [
        4272,
        4280
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "648": {
      "fn": "MiniMart.changeOperator",
      "offset": [
        4272,
        4280
      ],
      "op": "DUP1",
      "path": "10"
    },
    "649": {
      "fn": "MiniMart.changeOperator",
      "offset": [
        4272,
        4280
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "650": {
      "fn": "MiniMart.changeOperator",
      "offset": [
        4301,
        4311
      ],
      "op": "CALLER",
      "path": "10",
      "statement": 2
    },
    "651": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "653": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "655": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "657": {
      "op": "SHL"
    },
    "658": {
      "op": "SUB"
    },
    "659": {
      "op": "NOT"
    },
    "660": {
      "fn": "MiniMart.changeOperator",
      "offset": [
        4290,
        4311
      ],
      "op": "DUP3",
      "path": "10"
    },
    "661": {
      "fn": "MiniMart.changeOperator",
      "offset": [
        4290,
        4311
      ],
      "op": "AND",
      "path": "10"
    },
    "662": {
      "fn": "MiniMart.changeOperator",
      "offset": [
        4290,
        4311
      ],
      "op": "DUP2",
      "path": "10"
    },
    "663": {
      "fn": "MiniMart.changeOperator",
      "offset": [
        4290,
        4311
      ],
      "op": "OR",
      "path": "10"
    },
    "664": {
      "fn": "MiniMart.changeOperator",
      "offset": [
        4290,
        4311
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "665": {
      "fn": "MiniMart.changeOperator",
      "offset": [
        4290,
        4311
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "666": {
      "fn": "MiniMart.changeOperator",
      "offset": [
        4290,
        4311
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "667": {
      "fn": "MiniMart.changeOperator",
      "offset": [
        4326,
        4369
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 3,
      "value": "0x40"
    },
    "669": {
      "fn": "MiniMart.changeOperator",
      "offset": [
        4326,
        4369
      ],
      "op": "DUP1",
      "path": "10"
    },
    "670": {
      "fn": "MiniMart.changeOperator",
      "offset": [
        4326,
        4369
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "671": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "673": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "675": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "677": {
      "op": "SHL"
    },
    "678": {
      "op": "SUB"
    },
    "679": {
      "fn": "MiniMart.changeOperator",
      "offset": [
        4272,
        4280
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "680": {
      "fn": "MiniMart.changeOperator",
      "offset": [
        4272,
        4280
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "681": {
      "fn": "MiniMart.changeOperator",
      "offset": [
        4272,
        4280
      ],
      "op": "AND",
      "path": "10"
    },
    "682": {
      "op": "DUP1"
    },
    "683": {
      "op": "DUP4"
    },
    "684": {
      "op": "MSTORE"
    },
    "685": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "687": {
      "op": "DUP4"
    },
    "688": {
      "op": "ADD"
    },
    "689": {
      "op": "SWAP4"
    },
    "690": {
      "op": "SWAP1"
    },
    "691": {
      "op": "SWAP4"
    },
    "692": {
      "op": "MSTORE"
    },
    "693": {
      "fn": "MiniMart.changeOperator",
      "offset": [
        4326,
        4369
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0xD58299B712891143E76310D5E664C4203C940A67DB37CF856BDAA3C5C76A802C"
    },
    "726": {
      "fn": "MiniMart.changeOperator",
      "offset": [
        4326,
        4369
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "727": {
      "op": "ADD"
    },
    "728": {
      "fn": "MiniMart.changeOperator",
      "offset": [
        4326,
        4369
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "730": {
      "fn": "MiniMart.changeOperator",
      "offset": [
        4326,
        4369
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "731": {
      "fn": "MiniMart.changeOperator",
      "offset": [
        4326,
        4369
      ],
      "op": "DUP1",
      "path": "10"
    },
    "732": {
      "fn": "MiniMart.changeOperator",
      "offset": [
        4326,
        4369
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "733": {
      "fn": "MiniMart.changeOperator",
      "offset": [
        4326,
        4369
      ],
      "op": "SUB",
      "path": "10"
    },
    "734": {
      "fn": "MiniMart.changeOperator",
      "offset": [
        4326,
        4369
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "735": {
      "fn": "MiniMart.changeOperator",
      "offset": [
        4326,
        4369
      ],
      "op": "LOG1",
      "path": "10"
    },
    "736": {
      "op": "POP"
    },
    "737": {
      "op": "POP"
    },
    "738": {
      "offset": [
        1637,
        1638
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "740": {
      "offset": [
        2563,
        2570
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "742": {
      "offset": [
        2563,
        2585
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "743": {
      "fn": "MiniMart.changeOperator",
      "jump": "o",
      "offset": [
        4074,
        4376
      ],
      "op": "JUMP",
      "path": "10"
    },
    "744": {
      "fn": "MiniMart.setGasToken",
      "offset": [
        4501,
        4678
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "745": {
      "fn": "MiniMart.setGasToken",
      "offset": [
        4580,
        4583
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 4,
      "value": "0x5"
    },
    "747": {
      "fn": "MiniMart.setGasToken",
      "offset": [
        4580,
        4583
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "748": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "750": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "752": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "754": {
      "op": "SHL"
    },
    "755": {
      "op": "SUB"
    },
    "756": {
      "fn": "MiniMart.setGasToken",
      "offset": [
        4580,
        4583
      ],
      "op": "AND",
      "path": "10"
    },
    "757": {
      "fn": "MiniMart.setGasToken",
      "offset": [
        4566,
        4576
      ],
      "op": "CALLER",
      "path": "10"
    },
    "758": {
      "fn": "MiniMart.setGasToken",
      "offset": [
        4566,
        4583
      ],
      "op": "EQ",
      "path": "10"
    },
    "759": {
      "branch": 31,
      "fn": "MiniMart.setGasToken",
      "offset": [
        4566,
        4583
      ],
      "op": "DUP1",
      "path": "10"
    },
    "760": {
      "fn": "MiniMart.setGasToken",
      "offset": [
        4566,
        4609
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x30B"
    },
    "763": {
      "branch": 31,
      "fn": "MiniMart.setGasToken",
      "offset": [
        4566,
        4609
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "764": {
      "op": "POP"
    },
    "765": {
      "fn": "MiniMart.setGasToken",
      "offset": [
        4601,
        4609
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "767": {
      "fn": "MiniMart.setGasToken",
      "offset": [
        4601,
        4609
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "768": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "770": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "772": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "774": {
      "op": "SHL"
    },
    "775": {
      "op": "SUB"
    },
    "776": {
      "fn": "MiniMart.setGasToken",
      "offset": [
        4601,
        4609
      ],
      "op": "AND",
      "path": "10"
    },
    "777": {
      "fn": "MiniMart.setGasToken",
      "offset": [
        4587,
        4597
      ],
      "op": "CALLER",
      "path": "10"
    },
    "778": {
      "branch": 32,
      "fn": "MiniMart.setGasToken",
      "offset": [
        4587,
        4609
      ],
      "op": "EQ",
      "path": "10"
    },
    "779": {
      "fn": "MiniMart.setGasToken",
      "offset": [
        4566,
        4609
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "780": {
      "fn": "MiniMart.setGasToken",
      "offset": [
        4558,
        4616
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x33C"
    },
    "783": {
      "branch": 32,
      "fn": "MiniMart.setGasToken",
      "offset": [
        4558,
        4616
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "784": {
      "fn": "MiniMart.setGasToken",
      "offset": [
        4558,
        4616
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "786": {
      "fn": "MiniMart.setGasToken",
      "offset": [
        4558,
        4616
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "787": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "791": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "793": {
      "op": "SHL"
    },
    "794": {
      "fn": "MiniMart.setGasToken",
      "offset": [
        4558,
        4616
      ],
      "op": "DUP2",
      "path": "10"
    },
    "795": {
      "fn": "MiniMart.setGasToken",
      "offset": [
        4558,
        4616
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "796": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "798": {
      "fn": "MiniMart.setGasToken",
      "offset": [
        4558,
        4616
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "800": {
      "fn": "MiniMart.setGasToken",
      "offset": [
        4558,
        4616
      ],
      "op": "DUP3",
      "path": "10"
    },
    "801": {
      "fn": "MiniMart.setGasToken",
      "offset": [
        4558,
        4616
      ],
      "op": "ADD",
      "path": "10"
    },
    "802": {
      "op": "MSTORE"
    },
    "803": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "805": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "807": {
      "op": "DUP3"
    },
    "808": {
      "op": "ADD"
    },
    "809": {
      "op": "MSTORE"
    },
    "810": {
      "op": "PUSH2",
      "value": "0x6E6F"
    },
    "813": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "815": {
      "op": "SHL"
    },
    "816": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "818": {
      "op": "DUP3"
    },
    "819": {
      "op": "ADD"
    },
    "820": {
      "op": "MSTORE"
    },
    "821": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "823": {
      "op": "ADD"
    },
    "824": {
      "fn": "MiniMart.setGasToken",
      "offset": [
        4558,
        4616
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x203"
    },
    "827": {
      "op": "JUMP"
    },
    "828": {
      "fn": "MiniMart.setGasToken",
      "offset": [
        4558,
        4616
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "829": {
      "fn": "MiniMart.setGasToken",
      "offset": [
        4626,
        4634
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 5,
      "value": "0x6"
    },
    "831": {
      "fn": "MiniMart.setGasToken",
      "offset": [
        4626,
        4646
      ],
      "op": "DUP1",
      "path": "10"
    },
    "832": {
      "fn": "MiniMart.setGasToken",
      "offset": [
        4626,
        4646
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "833": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "835": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "837": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "839": {
      "op": "SHL"
    },
    "840": {
      "op": "SUB"
    },
    "841": {
      "op": "NOT"
    },
    "842": {
      "fn": "MiniMart.setGasToken",
      "offset": [
        4626,
        4646
      ],
      "op": "AND",
      "path": "10"
    },
    "843": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "845": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "847": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "849": {
      "op": "SHL"
    },
    "850": {
      "op": "SUB"
    },
    "851": {
      "fn": "MiniMart.setGasToken",
      "offset": [
        4626,
        4646
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "852": {
      "fn": "MiniMart.setGasToken",
      "offset": [
        4626,
        4646
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "853": {
      "fn": "MiniMart.setGasToken",
      "offset": [
        4626,
        4646
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "854": {
      "fn": "MiniMart.setGasToken",
      "offset": [
        4626,
        4646
      ],
      "op": "AND",
      "path": "10"
    },
    "855": {
      "fn": "MiniMart.setGasToken",
      "offset": [
        4626,
        4646
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "856": {
      "fn": "MiniMart.setGasToken",
      "offset": [
        4626,
        4646
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "857": {
      "fn": "MiniMart.setGasToken",
      "offset": [
        4626,
        4646
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "858": {
      "fn": "MiniMart.setGasToken",
      "offset": [
        4626,
        4646
      ],
      "op": "OR",
      "path": "10"
    },
    "859": {
      "fn": "MiniMart.setGasToken",
      "offset": [
        4626,
        4646
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "860": {
      "fn": "MiniMart.setGasToken",
      "offset": [
        4626,
        4646
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "861": {
      "fn": "MiniMart.setGasToken",
      "jump": "o",
      "offset": [
        4501,
        4678
      ],
      "op": "JUMP",
      "path": "10"
    },
    "862": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2683,
        3747
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "863": {
      "offset": [
        1680,
        1681
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "865": {
      "offset": [
        2260,
        2267
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "867": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2260,
        2267
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "868": {
      "offset": [
        2260,
        2279
      ],
      "op": "EQ",
      "path": "22"
    },
    "869": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2260,
        2279
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "870": {
      "offset": [
        2252,
        2315
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x381"
    },
    "873": {
      "offset": [
        2252,
        2315
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "874": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2252,
        2315
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "876": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2252,
        2315
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "877": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "881": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "883": {
      "op": "SHL"
    },
    "884": {
      "offset": [
        2252,
        2315
      ],
      "op": "DUP2",
      "path": "22"
    },
    "885": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2252,
        2315
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "886": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2252,
        2315
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "888": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2252,
        2315
      ],
      "op": "ADD",
      "path": "22"
    },
    "889": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2252,
        2315
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x203"
    },
    "892": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2252,
        2315
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "893": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2252,
        2315
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xF7B"
    },
    "896": {
      "fn": "MiniMart.buyWithCC",
      "jump": "i",
      "offset": [
        2252,
        2315
      ],
      "op": "JUMP",
      "path": "22"
    },
    "897": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2252,
        2315
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "898": {
      "offset": [
        1680,
        1681
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "900": {
      "offset": [
        2390,
        2397
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "902": {
      "offset": [
        2390,
        2408
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "903": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2390,
        2408
      ],
      "op": "DUP2",
      "path": "22"
    },
    "904": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2390,
        2408
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "905": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2818,
        2826
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "907": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2818,
        2826
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "908": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2918,
        2948
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "910": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2918,
        2948
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "911": {
      "op": "PUSH4",
      "value": "0x31A9108F"
    },
    "916": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "918": {
      "op": "SHL"
    },
    "919": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2918,
        2948
      ],
      "op": "DUP2",
      "path": "10"
    },
    "920": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2918,
        2948
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "921": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2918,
        2948
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "923": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2918,
        2948
      ],
      "op": "DUP2",
      "path": "10"
    },
    "924": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2918,
        2948
      ],
      "op": "ADD",
      "path": "10"
    },
    "925": {
      "op": "DUP6"
    },
    "926": {
      "op": "SWAP1"
    },
    "927": {
      "op": "MSTORE"
    },
    "928": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "930": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "932": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "934": {
      "op": "SHL"
    },
    "935": {
      "op": "SUB"
    },
    "936": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2818,
        2826
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "937": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2818,
        2826
      ],
      "op": "DUP3",
      "path": "10"
    },
    "938": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2818,
        2826
      ],
      "op": "AND",
      "path": "10"
    },
    "939": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2818,
        2826
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "940": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2878,
        2891
      ],
      "op": "DUP7",
      "path": "10"
    },
    "941": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2878,
        2891
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "942": {
      "offset": [
        2390,
        2397
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "943": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2390,
        2397
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "944": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2918,
        2938
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "945": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2918,
        2938
      ],
      "op": "DUP4",
      "path": "10"
    },
    "946": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2918,
        2938
      ],
      "op": "AND",
      "path": "10"
    },
    "947": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2918,
        2938
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "948": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2918,
        2938
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x6352211E"
    },
    "953": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2918,
        2938
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "954": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "956": {
      "op": "ADD"
    },
    "957": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2918,
        2948
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "959": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2918,
        2948
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "961": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2918,
        2948
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "962": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2918,
        2948
      ],
      "op": "DUP1",
      "path": "10"
    },
    "963": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2918,
        2948
      ],
      "op": "DUP4",
      "path": "10"
    },
    "964": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2918,
        2948
      ],
      "op": "SUB",
      "path": "10"
    },
    "965": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2918,
        2948
      ],
      "op": "DUP2",
      "path": "10"
    },
    "966": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2918,
        2948
      ],
      "op": "DUP7",
      "path": "10"
    },
    "967": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2918,
        2948
      ],
      "op": "DUP1",
      "path": "10"
    },
    "968": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2918,
        2948
      ],
      "op": "EXTCODESIZE",
      "path": "10"
    },
    "969": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2918,
        2948
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "970": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2918,
        2948
      ],
      "op": "DUP1",
      "path": "10"
    },
    "971": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2918,
        2948
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "972": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2918,
        2948
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3D4"
    },
    "975": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2918,
        2948
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "976": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2918,
        2948
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "978": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2918,
        2948
      ],
      "op": "DUP1",
      "path": "10"
    },
    "979": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2918,
        2948
      ],
      "op": "REVERT",
      "path": "10"
    },
    "980": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2918,
        2948
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "981": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2918,
        2948
      ],
      "op": "POP",
      "path": "10"
    },
    "982": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2918,
        2948
      ],
      "op": "GAS",
      "path": "10"
    },
    "983": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2918,
        2948
      ],
      "op": "STATICCALL",
      "path": "10"
    },
    "984": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2918,
        2948
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "985": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2918,
        2948
      ],
      "op": "DUP1",
      "path": "10"
    },
    "986": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2918,
        2948
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "987": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2918,
        2948
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3E8"
    },
    "990": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2918,
        2948
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "991": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2918,
        2948
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "992": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2918,
        2948
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "994": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2918,
        2948
      ],
      "op": "DUP1",
      "path": "10"
    },
    "995": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2918,
        2948
      ],
      "op": "RETURNDATACOPY",
      "path": "10"
    },
    "996": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2918,
        2948
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "997": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2918,
        2948
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "999": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2918,
        2948
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1000": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2918,
        2948
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1001": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2918,
        2948
      ],
      "op": "POP",
      "path": "10"
    },
    "1002": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2918,
        2948
      ],
      "op": "POP",
      "path": "10"
    },
    "1003": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2918,
        2948
      ],
      "op": "POP",
      "path": "10"
    },
    "1004": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2918,
        2948
      ],
      "op": "POP",
      "path": "10"
    },
    "1005": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2918,
        2948
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1007": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2918,
        2948
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1008": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2918,
        2948
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "1009": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2918,
        2948
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "1011": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2918,
        2948
      ],
      "op": "NOT",
      "path": "10"
    },
    "1012": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2918,
        2948
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "1014": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2918,
        2948
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1015": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2918,
        2948
      ],
      "op": "ADD",
      "path": "10"
    },
    "1016": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2918,
        2948
      ],
      "op": "AND",
      "path": "10"
    },
    "1017": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2918,
        2948
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1018": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2918,
        2948
      ],
      "op": "ADD",
      "path": "10"
    },
    "1019": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2918,
        2948
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1020": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2918,
        2948
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1022": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2918,
        2948
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1023": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2918,
        2948
      ],
      "op": "POP",
      "path": "10"
    },
    "1024": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2918,
        2948
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1025": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2918,
        2948
      ],
      "op": "ADD",
      "path": "10"
    },
    "1026": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2918,
        2948
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1027": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2918,
        2948
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x40C"
    },
    "1030": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2918,
        2948
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1031": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2918,
        2948
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1032": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2918,
        2948
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xFB2"
    },
    "1035": {
      "fn": "MiniMart.buyWithCC",
      "jump": "i",
      "offset": [
        2918,
        2948
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1036": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2918,
        2948
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1037": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2977,
        3012
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1039": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2977,
        3012
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1040": {
      "op": "PUSH4",
      "value": "0x13784ABF"
    },
    "1045": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "1047": {
      "op": "SHL"
    },
    "1048": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2977,
        3012
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1049": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2977,
        3012
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1050": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2992,
        3002
      ],
      "op": "CALLER",
      "path": "10"
    },
    "1051": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2977,
        3012
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1053": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2977,
        3012
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1054": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2977,
        3012
      ],
      "op": "ADD",
      "path": "10"
    },
    "1055": {
      "op": "MSTORE"
    },
    "1056": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1058": {
      "op": "DUP2"
    },
    "1059": {
      "op": "ADD"
    },
    "1060": {
      "op": "DUP7"
    },
    "1061": {
      "op": "SWAP1"
    },
    "1062": {
      "op": "MSTORE"
    },
    "1063": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2902,
        2948
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1064": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2902,
        2948
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1065": {
      "op": "POP"
    },
    "1066": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2958,
        2974
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1068": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2958,
        2974
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1069": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1071": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1073": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1075": {
      "op": "SHL"
    },
    "1076": {
      "op": "SUB"
    },
    "1077": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2977,
        2991
      ],
      "op": "DUP6",
      "path": "10"
    },
    "1078": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2977,
        2991
      ],
      "op": "AND",
      "path": "10"
    },
    "1079": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2977,
        2991
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1080": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2977,
        2991
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x9BC255F8"
    },
    "1085": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2977,
        2991
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1086": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1088": {
      "op": "ADD"
    },
    "1089": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2977,
        3012
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1091": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2977,
        3012
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1093": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2977,
        3012
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1094": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2977,
        3012
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1095": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2977,
        3012
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1096": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2977,
        3012
      ],
      "op": "SUB",
      "path": "10"
    },
    "1097": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2977,
        3012
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1098": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2977,
        3012
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1100": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2977,
        3012
      ],
      "op": "DUP8",
      "path": "10"
    },
    "1101": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2977,
        3012
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1102": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2977,
        3012
      ],
      "op": "EXTCODESIZE",
      "path": "10"
    },
    "1103": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2977,
        3012
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1104": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2977,
        3012
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1105": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2977,
        3012
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1106": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2977,
        3012
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x45A"
    },
    "1109": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2977,
        3012
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1110": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2977,
        3012
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1112": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2977,
        3012
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1113": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2977,
        3012
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1114": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2977,
        3012
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1115": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2977,
        3012
      ],
      "op": "POP",
      "path": "10"
    },
    "1116": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2977,
        3012
      ],
      "op": "GAS",
      "path": "10"
    },
    "1117": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2977,
        3012
      ],
      "op": "CALL",
      "path": "10"
    },
    "1118": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2977,
        3012
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1119": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2977,
        3012
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1120": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2977,
        3012
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1121": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2977,
        3012
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x46E"
    },
    "1124": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2977,
        3012
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1125": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2977,
        3012
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "1126": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2977,
        3012
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1128": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2977,
        3012
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1129": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2977,
        3012
      ],
      "op": "RETURNDATACOPY",
      "path": "10"
    },
    "1130": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2977,
        3012
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "1131": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2977,
        3012
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1133": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2977,
        3012
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1134": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2977,
        3012
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1135": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2977,
        3012
      ],
      "op": "POP",
      "path": "10"
    },
    "1136": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2977,
        3012
      ],
      "op": "POP",
      "path": "10"
    },
    "1137": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2977,
        3012
      ],
      "op": "POP",
      "path": "10"
    },
    "1138": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2977,
        3012
      ],
      "op": "POP",
      "path": "10"
    },
    "1139": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2977,
        3012
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1141": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2977,
        3012
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1142": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2977,
        3012
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "1143": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2977,
        3012
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "1145": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2977,
        3012
      ],
      "op": "NOT",
      "path": "10"
    },
    "1146": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2977,
        3012
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "1148": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2977,
        3012
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1149": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2977,
        3012
      ],
      "op": "ADD",
      "path": "10"
    },
    "1150": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2977,
        3012
      ],
      "op": "AND",
      "path": "10"
    },
    "1151": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2977,
        3012
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1152": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2977,
        3012
      ],
      "op": "ADD",
      "path": "10"
    },
    "1153": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2977,
        3012
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1154": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2977,
        3012
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1156": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2977,
        3012
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1157": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2977,
        3012
      ],
      "op": "POP",
      "path": "10"
    },
    "1158": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2977,
        3012
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1159": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2977,
        3012
      ],
      "op": "ADD",
      "path": "10"
    },
    "1160": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2977,
        3012
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1161": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2977,
        3012
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x492"
    },
    "1164": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2977,
        3012
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1165": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2977,
        3012
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1166": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2977,
        3012
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xFCF"
    },
    "1169": {
      "fn": "MiniMart.buyWithCC",
      "jump": "i",
      "offset": [
        2977,
        3012
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1170": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2977,
        3012
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1171": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1173": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1175": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1177": {
      "op": "SHL"
    },
    "1178": {
      "op": "SUB"
    },
    "1179": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3043,
        3063
      ],
      "op": "DUP9",
      "path": "10",
      "statement": 6
    },
    "1180": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3043,
        3063
      ],
      "op": "AND",
      "path": "10"
    },
    "1181": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3043,
        3063
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1183": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3043,
        3063
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1184": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3043,
        3063
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1185": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3043,
        3063
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1186": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3043,
        3048
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1188": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3043,
        3063
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1190": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3043,
        3063
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1191": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3043,
        3063
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1192": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3043,
        3063
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1193": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3043,
        3063
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1195": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3043,
        3063
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1196": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3043,
        3063
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1197": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3043,
        3063
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "1198": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3043,
        3073
      ],
      "op": "DUP11",
      "path": "10"
    },
    "1199": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3043,
        3073
      ],
      "op": "DUP5",
      "path": "10"
    },
    "1200": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3043,
        3073
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1201": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3043,
        3073
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1202": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3043,
        3073
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1203": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3043,
        3073
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1204": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3043,
        3073
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1205": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3043,
        3073
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "1206": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3043,
        3073
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1207": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2958,
        3012
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1208": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        2958,
        3012
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1209": {
      "op": "POP"
    },
    "1210": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3030,
        3073
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1211": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3030,
        3073
      ],
      "op": "LT",
      "path": "10"
    },
    "1212": {
      "branch": 33,
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3030,
        3073
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1213": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3022,
        3101
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x502"
    },
    "1216": {
      "branch": 33,
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3022,
        3101
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1217": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3022,
        3101
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1219": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3022,
        3101
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1220": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1224": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1226": {
      "op": "SHL"
    },
    "1227": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3022,
        3101
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1228": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3022,
        3101
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1229": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1231": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3022,
        3101
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1233": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3022,
        3101
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1234": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3022,
        3101
      ],
      "op": "ADD",
      "path": "10"
    },
    "1235": {
      "op": "MSTORE"
    },
    "1236": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "1238": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1240": {
      "op": "DUP3"
    },
    "1241": {
      "op": "ADD"
    },
    "1242": {
      "op": "MSTORE"
    },
    "1243": {
      "op": "PUSH23",
      "value": "0x4E6F7420656E6F7567682066756E647320746F20627579"
    },
    "1267": {
      "op": "PUSH1",
      "value": "0x48"
    },
    "1269": {
      "op": "SHL"
    },
    "1270": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1272": {
      "op": "DUP3"
    },
    "1273": {
      "op": "ADD"
    },
    "1274": {
      "op": "MSTORE"
    },
    "1275": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1277": {
      "op": "ADD"
    },
    "1278": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3022,
        3101
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x203"
    },
    "1281": {
      "op": "JUMP"
    },
    "1282": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3022,
        3101
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1283": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1285": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1287": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1289": {
      "op": "SHL"
    },
    "1290": {
      "op": "SUB"
    },
    "1291": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3119,
        3139
      ],
      "op": "DUP8",
      "path": "10",
      "statement": 7
    },
    "1292": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3119,
        3139
      ],
      "op": "AND",
      "path": "10"
    },
    "1293": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3152,
        3153
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1295": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3119,
        3139
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1296": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3119,
        3139
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1297": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3119,
        3139
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1298": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3119,
        3124
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1300": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3119,
        3139
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1302": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3119,
        3139
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1303": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3119,
        3139
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1304": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3119,
        3139
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1305": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3119,
        3139
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1307": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3119,
        3139
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1308": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3119,
        3139
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1309": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3119,
        3139
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "1310": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3119,
        3149
      ],
      "op": "DUP10",
      "path": "10"
    },
    "1311": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3119,
        3149
      ],
      "op": "DUP5",
      "path": "10"
    },
    "1312": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3119,
        3149
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1313": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3119,
        3149
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1314": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3119,
        3149
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1315": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3119,
        3149
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1316": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3119,
        3149
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1317": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3119,
        3149
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "1318": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3119,
        3149
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1319": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3111,
        3186
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x542"
    },
    "1322": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3111,
        3186
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1323": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3111,
        3186
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1325": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3111,
        3186
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1326": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1330": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1332": {
      "op": "SHL"
    },
    "1333": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3111,
        3186
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1334": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3111,
        3186
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1335": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3111,
        3186
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1337": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3111,
        3186
      ],
      "op": "ADD",
      "path": "10"
    },
    "1338": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3111,
        3186
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x203"
    },
    "1341": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3111,
        3186
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1342": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3111,
        3186
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xFE8"
    },
    "1345": {
      "fn": "MiniMart.buyWithCC",
      "jump": "i",
      "offset": [
        3111,
        3186
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1346": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3111,
        3186
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1347": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3197,
        3263
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 8,
      "value": "0x40"
    },
    "1349": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3197,
        3263
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1350": {
      "op": "PUSH4",
      "value": "0xC43E92B1"
    },
    "1355": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1357": {
      "op": "SHL"
    },
    "1358": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3197,
        3263
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1359": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3197,
        3263
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1360": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1362": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1364": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1366": {
      "op": "SHL"
    },
    "1367": {
      "op": "SUB"
    },
    "1368": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3197,
        3234
      ],
      "op": "DUP5",
      "path": "10"
    },
    "1369": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3197,
        3234
      ],
      "op": "AND",
      "path": "10"
    },
    "1370": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3197,
        3234
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1371": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3197,
        3234
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xC43E92B1"
    },
    "1376": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3197,
        3234
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1377": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3197,
        3263
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x572"
    },
    "1380": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3197,
        3263
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1381": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3235,
        3240
      ],
      "op": "DUP6",
      "path": "10"
    },
    "1382": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3235,
        3240
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1383": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3242,
        3252
      ],
      "op": "CALLER",
      "path": "10"
    },
    "1384": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3242,
        3252
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1385": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3254,
        3262
      ],
      "op": "DUP12",
      "path": "10"
    },
    "1386": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3254,
        3262
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1387": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3197,
        3263
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1389": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3197,
        3263
      ],
      "op": "ADD",
      "path": "10"
    },
    "1390": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3197,
        3263
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x101F"
    },
    "1393": {
      "fn": "MiniMart.buyWithCC",
      "jump": "i",
      "offset": [
        3197,
        3263
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1394": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3197,
        3263
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1395": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3197,
        3263
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1397": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3197,
        3263
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1399": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3197,
        3263
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1400": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3197,
        3263
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1401": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3197,
        3263
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1402": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3197,
        3263
      ],
      "op": "SUB",
      "path": "10"
    },
    "1403": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3197,
        3263
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1404": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3197,
        3263
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1406": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3197,
        3263
      ],
      "op": "DUP8",
      "path": "10"
    },
    "1407": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3197,
        3263
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1408": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3197,
        3263
      ],
      "op": "EXTCODESIZE",
      "path": "10"
    },
    "1409": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3197,
        3263
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1410": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3197,
        3263
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1411": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3197,
        3263
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1412": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3197,
        3263
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x58C"
    },
    "1415": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3197,
        3263
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1416": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3197,
        3263
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1418": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3197,
        3263
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1419": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3197,
        3263
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1420": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3197,
        3263
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1421": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3197,
        3263
      ],
      "op": "POP",
      "path": "10"
    },
    "1422": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3197,
        3263
      ],
      "op": "GAS",
      "path": "10"
    },
    "1423": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3197,
        3263
      ],
      "op": "CALL",
      "path": "10"
    },
    "1424": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3197,
        3263
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1425": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3197,
        3263
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1426": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3197,
        3263
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1427": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3197,
        3263
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x5A0"
    },
    "1430": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3197,
        3263
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1431": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3197,
        3263
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "1432": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3197,
        3263
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1434": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3197,
        3263
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1435": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3197,
        3263
      ],
      "op": "RETURNDATACOPY",
      "path": "10"
    },
    "1436": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3197,
        3263
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "1437": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3197,
        3263
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1439": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3197,
        3263
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1440": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3197,
        3263
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1441": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3197,
        3263
      ],
      "op": "POP",
      "path": "10"
    },
    "1442": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3197,
        3263
      ],
      "op": "POP",
      "path": "10"
    },
    "1443": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3197,
        3263
      ],
      "op": "POP",
      "path": "10"
    },
    "1444": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3197,
        3263
      ],
      "op": "POP",
      "path": "10"
    },
    "1445": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3274,
        3290
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1447": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3293,
        3305
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1448": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1450": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1452": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1454": {
      "op": "SHL"
    },
    "1455": {
      "op": "SUB"
    },
    "1456": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3293,
        3316
      ],
      "op": "AND",
      "path": "10"
    },
    "1457": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3293,
        3316
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x4D47732A"
    },
    "1462": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3293,
        3318
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1464": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3293,
        3318
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1465": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3293,
        3318
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1466": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3293,
        3318
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "1471": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3293,
        3318
      ],
      "op": "AND",
      "path": "10"
    },
    "1472": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3293,
        3318
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xE0"
    },
    "1474": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3293,
        3318
      ],
      "op": "SHL",
      "path": "10"
    },
    "1475": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3293,
        3318
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1476": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3293,
        3318
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1477": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3293,
        3318
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1479": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3293,
        3318
      ],
      "op": "ADD",
      "path": "10"
    },
    "1480": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3293,
        3318
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1482": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3293,
        3318
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1484": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3293,
        3318
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1485": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3293,
        3318
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1486": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3293,
        3318
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1487": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3293,
        3318
      ],
      "op": "SUB",
      "path": "10"
    },
    "1488": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3293,
        3318
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1489": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3293,
        3318
      ],
      "op": "DUP7",
      "path": "10"
    },
    "1490": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3293,
        3318
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1491": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3293,
        3318
      ],
      "op": "EXTCODESIZE",
      "path": "10"
    },
    "1492": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3293,
        3318
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1493": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3293,
        3318
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1494": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3293,
        3318
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1495": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3293,
        3318
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x5DF"
    },
    "1498": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3293,
        3318
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1499": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3293,
        3318
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1501": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3293,
        3318
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1502": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3293,
        3318
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1503": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3293,
        3318
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1504": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3293,
        3318
      ],
      "op": "POP",
      "path": "10"
    },
    "1505": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3293,
        3318
      ],
      "op": "GAS",
      "path": "10"
    },
    "1506": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3293,
        3318
      ],
      "op": "STATICCALL",
      "path": "10"
    },
    "1507": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3293,
        3318
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1508": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3293,
        3318
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1509": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3293,
        3318
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1510": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3293,
        3318
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x5F3"
    },
    "1513": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3293,
        3318
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1514": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3293,
        3318
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "1515": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3293,
        3318
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1517": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3293,
        3318
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1518": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3293,
        3318
      ],
      "op": "RETURNDATACOPY",
      "path": "10"
    },
    "1519": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3293,
        3318
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "1520": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3293,
        3318
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1522": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3293,
        3318
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1523": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3293,
        3318
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1524": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3293,
        3318
      ],
      "op": "POP",
      "path": "10"
    },
    "1525": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3293,
        3318
      ],
      "op": "POP",
      "path": "10"
    },
    "1526": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3293,
        3318
      ],
      "op": "POP",
      "path": "10"
    },
    "1527": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3293,
        3318
      ],
      "op": "POP",
      "path": "10"
    },
    "1528": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3293,
        3318
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1530": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3293,
        3318
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1531": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3293,
        3318
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "1532": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3293,
        3318
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "1534": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3293,
        3318
      ],
      "op": "NOT",
      "path": "10"
    },
    "1535": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3293,
        3318
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "1537": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3293,
        3318
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1538": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3293,
        3318
      ],
      "op": "ADD",
      "path": "10"
    },
    "1539": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3293,
        3318
      ],
      "op": "AND",
      "path": "10"
    },
    "1540": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3293,
        3318
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1541": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3293,
        3318
      ],
      "op": "ADD",
      "path": "10"
    },
    "1542": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3293,
        3318
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1543": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3293,
        3318
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1545": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3293,
        3318
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1546": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3293,
        3318
      ],
      "op": "POP",
      "path": "10"
    },
    "1547": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3293,
        3318
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1548": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3293,
        3318
      ],
      "op": "ADD",
      "path": "10"
    },
    "1549": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3293,
        3318
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1550": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3293,
        3318
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x617"
    },
    "1553": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3293,
        3318
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1554": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3293,
        3318
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1555": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3293,
        3318
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xFCF"
    },
    "1558": {
      "fn": "MiniMart.buyWithCC",
      "jump": "i",
      "offset": [
        3293,
        3318
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1559": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3293,
        3318
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1560": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3274,
        3318
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1561": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3274,
        3318
      ],
      "op": "POP",
      "path": "10"
    },
    "1562": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3329,
        3348
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1564": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3378,
        3381
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x64"
    },
    "1566": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3363,
        3374
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "1568": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3363,
        3374
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1569": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3352,
        3360
      ],
      "op": "DUP5",
      "path": "10"
    },
    "1570": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3352,
        3374
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x62B"
    },
    "1573": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3352,
        3374
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1574": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3352,
        3374
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1575": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3352,
        3374
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1059"
    },
    "1578": {
      "fn": "MiniMart.buyWithCC",
      "jump": "i",
      "offset": [
        3352,
        3374
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1579": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3352,
        3374
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1580": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3351,
        3381
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x635"
    },
    "1583": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3351,
        3381
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1584": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3351,
        3381
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1585": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3351,
        3381
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1078"
    },
    "1588": {
      "fn": "MiniMart.buyWithCC",
      "jump": "i",
      "offset": [
        3351,
        3381
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1589": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3351,
        3381
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1590": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3329,
        3381
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1591": {
      "op": "POP"
    },
    "1592": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3432,
        3449
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1594": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3476,
        3479
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x64"
    },
    "1596": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3453,
        3472
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x645"
    },
    "1599": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3464,
        3472
      ],
      "op": "DUP5",
      "path": "10"
    },
    "1600": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3453,
        3461
      ],
      "op": "DUP7",
      "path": "10"
    },
    "1601": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3453,
        3472
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1059"
    },
    "1604": {
      "fn": "MiniMart.buyWithCC",
      "jump": "i",
      "offset": [
        3453,
        3472
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1605": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3453,
        3472
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1606": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3452,
        3479
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x64F"
    },
    "1609": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3452,
        3479
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1610": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3452,
        3479
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1611": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3452,
        3479
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1078"
    },
    "1614": {
      "fn": "MiniMart.buyWithCC",
      "jump": "i",
      "offset": [
        3452,
        3479
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1615": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3452,
        3479
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1616": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3432,
        3479
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1617": {
      "op": "POP"
    },
    "1618": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3578,
        3589
      ],
      "op": "DUP2",
      "path": "10",
      "statement": 9
    },
    "1619": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3555,
        3575
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x65C"
    },
    "1622": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3432,
        3479
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1623": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3555,
        3563
      ],
      "op": "DUP7",
      "path": "10"
    },
    "1624": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3555,
        3575
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x109A"
    },
    "1627": {
      "fn": "MiniMart.buyWithCC",
      "jump": "i",
      "offset": [
        3555,
        3575
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1628": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3555,
        3575
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1629": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3555,
        3589
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x666"
    },
    "1632": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3555,
        3589
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1633": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3555,
        3589
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1634": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3555,
        3589
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x109A"
    },
    "1637": {
      "fn": "MiniMart.buyWithCC",
      "jump": "i",
      "offset": [
        3555,
        3589
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1638": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3555,
        3589
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1639": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1641": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1643": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1645": {
      "op": "SHL"
    },
    "1646": {
      "op": "SUB"
    },
    "1647": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3536,
        3551
      ],
      "op": "DUP7",
      "path": "10"
    },
    "1648": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3536,
        3551
      ],
      "op": "AND",
      "path": "10"
    },
    "1649": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3536,
        3551
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1651": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3536,
        3551
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1652": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3536,
        3551
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1653": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3536,
        3551
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1654": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3536,
        3544
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "1656": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3536,
        3551
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1658": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3536,
        3551
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1659": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3536,
        3551
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1661": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3536,
        3551
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1662": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3536,
        3551
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "1663": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3536,
        3589
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1664": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3536,
        3589
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1665": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3536,
        3551
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1666": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3536,
        3551
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1667": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3536,
        3551
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1668": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3536,
        3589
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x68E"
    },
    "1671": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3536,
        3589
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1672": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3536,
        3589
      ],
      "op": "DUP5",
      "path": "10"
    },
    "1673": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3536,
        3589
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1674": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3536,
        3589
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x10B1"
    },
    "1677": {
      "fn": "MiniMart.buyWithCC",
      "jump": "i",
      "offset": [
        3536,
        3589
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1678": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3536,
        3589
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1679": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3536,
        3589
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1680": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3536,
        3589
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1681": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3536,
        3589
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "1682": {
      "op": "POP"
    },
    "1683": {
      "op": "POP"
    },
    "1684": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3608,
        3616
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 10,
      "value": "0x1"
    },
    "1686": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3608,
        3616
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1687": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1689": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1691": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1693": {
      "op": "SHL"
    },
    "1694": {
      "op": "SUB"
    },
    "1695": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3608,
        3616
      ],
      "op": "AND",
      "path": "10"
    },
    "1696": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3599,
        3617
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1698": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3599,
        3617
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1699": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3599,
        3617
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1700": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3599,
        3617
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1701": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3599,
        3607
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "1703": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3599,
        3617
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1705": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3599,
        3617
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1706": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3599,
        3617
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1708": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3599,
        3617
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1709": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3599,
        3617
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "1710": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3599,
        3632
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1711": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3599,
        3632
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1712": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3621,
        3632
      ],
      "op": "DUP5",
      "path": "10"
    },
    "1713": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3621,
        3632
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "1714": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3599,
        3617
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1715": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3599,
        3632
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x6BD"
    },
    "1718": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3599,
        3632
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1719": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3621,
        3632
      ],
      "op": "DUP5",
      "path": "10"
    },
    "1720": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3621,
        3632
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1721": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3599,
        3632
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x10B1"
    },
    "1724": {
      "fn": "MiniMart.buyWithCC",
      "jump": "i",
      "offset": [
        3599,
        3632
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1725": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3599,
        3632
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1726": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3599,
        3632
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "1727": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3599,
        3632
      ],
      "op": "POP",
      "path": "10"
    },
    "1728": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3599,
        3632
      ],
      "op": "POP",
      "path": "10"
    },
    "1729": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3599,
        3632
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1730": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3599,
        3632
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1731": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3599,
        3632
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "1732": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3599,
        3632
      ],
      "op": "POP",
      "path": "10"
    },
    "1733": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3676,
        3685
      ],
      "op": "DUP1",
      "path": "10",
      "statement": 11
    },
    "1734": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3642,
        3650
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "1736": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3642,
        3672
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1738": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3651,
        3663
      ],
      "op": "DUP9",
      "path": "10"
    },
    "1739": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1741": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1743": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1745": {
      "op": "SHL"
    },
    "1746": {
      "op": "SUB"
    },
    "1747": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3651,
        3669
      ],
      "op": "AND",
      "path": "10"
    },
    "1748": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3651,
        3669
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x8DA5CB5B"
    },
    "1753": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3651,
        3671
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1755": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3651,
        3671
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1756": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3651,
        3671
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1757": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3651,
        3671
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "1762": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3651,
        3671
      ],
      "op": "AND",
      "path": "10"
    },
    "1763": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3651,
        3671
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xE0"
    },
    "1765": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3651,
        3671
      ],
      "op": "SHL",
      "path": "10"
    },
    "1766": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3651,
        3671
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1767": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3651,
        3671
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1768": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3651,
        3671
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1770": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3651,
        3671
      ],
      "op": "ADD",
      "path": "10"
    },
    "1771": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3651,
        3671
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1773": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3651,
        3671
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1775": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3651,
        3671
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1776": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3651,
        3671
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1777": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3651,
        3671
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1778": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3651,
        3671
      ],
      "op": "SUB",
      "path": "10"
    },
    "1779": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3651,
        3671
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1780": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3651,
        3671
      ],
      "op": "DUP7",
      "path": "10"
    },
    "1781": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3651,
        3671
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1782": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3651,
        3671
      ],
      "op": "EXTCODESIZE",
      "path": "10"
    },
    "1783": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3651,
        3671
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1784": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3651,
        3671
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1785": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3651,
        3671
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1786": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3651,
        3671
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x702"
    },
    "1789": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3651,
        3671
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1790": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3651,
        3671
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1792": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3651,
        3671
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1793": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3651,
        3671
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1794": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3651,
        3671
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1795": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3651,
        3671
      ],
      "op": "POP",
      "path": "10"
    },
    "1796": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3651,
        3671
      ],
      "op": "GAS",
      "path": "10"
    },
    "1797": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3651,
        3671
      ],
      "op": "STATICCALL",
      "path": "10"
    },
    "1798": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3651,
        3671
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1799": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3651,
        3671
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1800": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3651,
        3671
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1801": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3651,
        3671
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x716"
    },
    "1804": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3651,
        3671
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1805": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3651,
        3671
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "1806": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3651,
        3671
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1808": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3651,
        3671
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1809": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3651,
        3671
      ],
      "op": "RETURNDATACOPY",
      "path": "10"
    },
    "1810": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3651,
        3671
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "1811": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3651,
        3671
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1813": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3651,
        3671
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1814": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3651,
        3671
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1815": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3651,
        3671
      ],
      "op": "POP",
      "path": "10"
    },
    "1816": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3651,
        3671
      ],
      "op": "POP",
      "path": "10"
    },
    "1817": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3651,
        3671
      ],
      "op": "POP",
      "path": "10"
    },
    "1818": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3651,
        3671
      ],
      "op": "POP",
      "path": "10"
    },
    "1819": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3651,
        3671
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1821": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3651,
        3671
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1822": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3651,
        3671
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "1823": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3651,
        3671
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "1825": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3651,
        3671
      ],
      "op": "NOT",
      "path": "10"
    },
    "1826": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3651,
        3671
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "1828": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3651,
        3671
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1829": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3651,
        3671
      ],
      "op": "ADD",
      "path": "10"
    },
    "1830": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3651,
        3671
      ],
      "op": "AND",
      "path": "10"
    },
    "1831": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3651,
        3671
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1832": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3651,
        3671
      ],
      "op": "ADD",
      "path": "10"
    },
    "1833": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3651,
        3671
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1834": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3651,
        3671
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1836": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3651,
        3671
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1837": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3651,
        3671
      ],
      "op": "POP",
      "path": "10"
    },
    "1838": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3651,
        3671
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1839": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3651,
        3671
      ],
      "op": "ADD",
      "path": "10"
    },
    "1840": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3651,
        3671
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1841": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3651,
        3671
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x73A"
    },
    "1844": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3651,
        3671
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1845": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3651,
        3671
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1846": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3651,
        3671
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xFB2"
    },
    "1849": {
      "fn": "MiniMart.buyWithCC",
      "jump": "i",
      "offset": [
        3651,
        3671
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1850": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3651,
        3671
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1851": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1853": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1855": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1857": {
      "op": "SHL"
    },
    "1858": {
      "op": "SUB"
    },
    "1859": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3642,
        3672
      ],
      "op": "AND",
      "path": "10"
    },
    "1860": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1862": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1864": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1866": {
      "op": "SHL"
    },
    "1867": {
      "op": "SUB"
    },
    "1868": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3642,
        3672
      ],
      "op": "AND",
      "path": "10"
    },
    "1869": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3642,
        3672
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1870": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3642,
        3672
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1871": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3642,
        3672
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1873": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3642,
        3672
      ],
      "op": "ADD",
      "path": "10"
    },
    "1874": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3642,
        3672
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1875": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3642,
        3672
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1876": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3642,
        3672
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1877": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3642,
        3672
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1879": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3642,
        3672
      ],
      "op": "ADD",
      "path": "10"
    },
    "1880": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3642,
        3672
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1882": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3642,
        3672
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "1883": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3642,
        3672
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1885": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3642,
        3685
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1886": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3642,
        3685
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1887": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3642,
        3685
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1888": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3642,
        3685
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x769"
    },
    "1891": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3642,
        3685
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1892": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3642,
        3685
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1893": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3642,
        3685
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x10B1"
    },
    "1896": {
      "fn": "MiniMart.buyWithCC",
      "jump": "i",
      "offset": [
        3642,
        3685
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1897": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3642,
        3685
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1898": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3642,
        3685
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1899": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3642,
        3685
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1900": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3642,
        3685
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "1901": {
      "op": "POP"
    },
    "1902": {
      "op": "POP"
    },
    "1903": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3701,
        3740
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 12,
      "value": "0x40"
    },
    "1905": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3701,
        3740
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1906": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3701,
        3740
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1907": {
      "op": "DUP11"
    },
    "1908": {
      "op": "DUP2"
    },
    "1909": {
      "op": "MSTORE"
    },
    "1910": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1912": {
      "op": "DUP2"
    },
    "1913": {
      "op": "ADD"
    },
    "1914": {
      "op": "DUP7"
    },
    "1915": {
      "op": "SWAP1"
    },
    "1916": {
      "op": "MSTORE"
    },
    "1917": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1919": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1921": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1923": {
      "op": "SHL"
    },
    "1924": {
      "op": "SUB"
    },
    "1925": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3701,
        3740
      ],
      "op": "DUP13",
      "path": "10"
    },
    "1926": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3701,
        3740
      ],
      "op": "AND",
      "path": "10"
    },
    "1927": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3701,
        3740
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1928": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3701,
        3740
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0xBAC9694AC0DAA55169ABD117086FE32C89401D9A3B15DD1D34E55E0AA4E47A9D"
    },
    "1961": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3701,
        3740
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1962": {
      "op": "ADD"
    },
    "1963": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3701,
        3740
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1965": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3701,
        3740
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1966": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3701,
        3740
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1967": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3701,
        3740
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1968": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3701,
        3740
      ],
      "op": "SUB",
      "path": "10"
    },
    "1969": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3701,
        3740
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1970": {
      "fn": "MiniMart.buyWithCC",
      "offset": [
        3701,
        3740
      ],
      "op": "LOG2",
      "path": "10"
    },
    "1971": {
      "op": "POP"
    },
    "1972": {
      "op": "POP"
    },
    "1973": {
      "offset": [
        1637,
        1638
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "1975": {
      "offset": [
        2563,
        2570
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1977": {
      "offset": [
        2563,
        2585
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "1978": {
      "op": "POP"
    },
    "1979": {
      "op": "POP"
    },
    "1980": {
      "op": "POP"
    },
    "1981": {
      "op": "POP"
    },
    "1982": {
      "op": "POP"
    },
    "1983": {
      "op": "POP"
    },
    "1984": {
      "op": "POP"
    },
    "1985": {
      "op": "POP"
    },
    "1986": {
      "fn": "MiniMart.buyWithCC",
      "jump": "o",
      "offset": [
        2683,
        3747
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1987": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3753,
        4068
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1988": {
      "offset": [
        1680,
        1681
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "1990": {
      "offset": [
        2260,
        2267
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1992": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        2260,
        2267
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1993": {
      "offset": [
        2260,
        2279
      ],
      "op": "EQ",
      "path": "22"
    },
    "1994": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        2260,
        2279
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1995": {
      "offset": [
        2252,
        2315
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x7E6"
    },
    "1998": {
      "offset": [
        2252,
        2315
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1999": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        2252,
        2315
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2001": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        2252,
        2315
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2002": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2006": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2008": {
      "op": "SHL"
    },
    "2009": {
      "offset": [
        2252,
        2315
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2010": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        2252,
        2315
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2011": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        2252,
        2315
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "2013": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        2252,
        2315
      ],
      "op": "ADD",
      "path": "22"
    },
    "2014": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        2252,
        2315
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x203"
    },
    "2017": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        2252,
        2315
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2018": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        2252,
        2315
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xF7B"
    },
    "2021": {
      "fn": "MiniMart.withdrawBalance",
      "jump": "i",
      "offset": [
        2252,
        2315
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2022": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        2252,
        2315
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2023": {
      "offset": [
        1680,
        1681
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "2025": {
      "offset": [
        2390,
        2397
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2027": {
      "offset": [
        2390,
        2408
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2028": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        2390,
        2408
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2029": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        2390,
        2408
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "2030": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3829,
        3839
      ],
      "op": "CALLER",
      "path": "10",
      "statement": 13
    },
    "2031": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3820,
        3840
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2032": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3820,
        3840
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2033": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3820,
        3828
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "2035": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3820,
        3840
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2037": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3820,
        3840
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2038": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3820,
        3840
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2040": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3820,
        3840
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2041": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3820,
        3840
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "2042": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3820,
        3840
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2043": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3812,
        3886
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x855"
    },
    "2046": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3812,
        3886
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2047": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3812,
        3886
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2049": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3812,
        3886
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2050": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2054": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2056": {
      "op": "SHL"
    },
    "2057": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3812,
        3886
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2058": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3812,
        3886
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2059": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2061": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3812,
        3886
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "2063": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3812,
        3886
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2064": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3812,
        3886
      ],
      "op": "ADD",
      "path": "10"
    },
    "2065": {
      "op": "MSTORE"
    },
    "2066": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "2068": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2070": {
      "op": "DUP3"
    },
    "2071": {
      "op": "ADD"
    },
    "2072": {
      "op": "MSTORE"
    },
    "2073": {
      "op": "PUSH32",
      "value": "0x596F7520646F6E2774206861766520616E792062616C616E636520746F207769"
    },
    "2106": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2108": {
      "op": "DUP3"
    },
    "2109": {
      "op": "ADD"
    },
    "2110": {
      "op": "MSTORE"
    },
    "2111": {
      "op": "PUSH6",
      "value": "0x746864726177"
    },
    "2118": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "2120": {
      "op": "SHL"
    },
    "2121": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2123": {
      "op": "DUP3"
    },
    "2124": {
      "op": "ADD"
    },
    "2125": {
      "op": "MSTORE"
    },
    "2126": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2128": {
      "op": "ADD"
    },
    "2129": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3812,
        3886
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x203"
    },
    "2132": {
      "op": "JUMP"
    },
    "2133": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3812,
        3886
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2134": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3919,
        3929
      ],
      "op": "CALLER",
      "path": "10"
    },
    "2135": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3896,
        3907
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2137": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3910,
        3930
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2138": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3910,
        3930
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2139": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3910,
        3930
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2140": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3910,
        3918
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "2142": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3910,
        3930
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2144": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3910,
        3930
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2145": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3910,
        3930
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2147": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3910,
        3930
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2148": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3910,
        3930
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2149": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3910,
        3930
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "2150": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3910,
        3930
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2151": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3940,
        3976
      ],
      "op": "SWAP1",
      "path": "10",
      "statement": 14
    },
    "2152": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3940,
        3976
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2153": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3910,
        3930
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2154": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3910,
        3930
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "2155": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3919,
        3929
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2156": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3940,
        3976
      ],
      "op": "DUP4",
      "path": "10"
    },
    "2157": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3940,
        3976
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2158": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3940,
        3976
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x8FC"
    },
    "2161": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3940,
        3976
      ],
      "op": "MUL",
      "path": "10"
    },
    "2162": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3940,
        3976
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2163": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3910,
        3930
      ],
      "op": "DUP5",
      "path": "10"
    },
    "2164": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3910,
        3930
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2165": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3940,
        3976
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2166": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3896,
        3907
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2167": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3940,
        3976
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2168": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3910,
        3930
      ],
      "op": "DUP6",
      "path": "10"
    },
    "2169": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3919,
        3929
      ],
      "op": "DUP9",
      "path": "10"
    },
    "2170": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3940,
        3976
      ],
      "op": "DUP9",
      "path": "10"
    },
    "2171": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3940,
        3976
      ],
      "op": "CALL",
      "path": "10"
    },
    "2172": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3940,
        3976
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "2173": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3940,
        3976
      ],
      "op": "POP",
      "path": "10"
    },
    "2174": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3940,
        3976
      ],
      "op": "POP",
      "path": "10"
    },
    "2175": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3940,
        3976
      ],
      "op": "POP",
      "path": "10"
    },
    "2176": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3940,
        3976
      ],
      "op": "POP",
      "path": "10"
    },
    "2177": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3940,
        3976
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2178": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3940,
        3976
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2179": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3940,
        3976
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2180": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3940,
        3976
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x891"
    },
    "2183": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3940,
        3976
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2184": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3940,
        3976
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "2185": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3940,
        3976
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2187": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3940,
        3976
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2188": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3940,
        3976
      ],
      "op": "RETURNDATACOPY",
      "path": "10"
    },
    "2189": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3940,
        3976
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "2190": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3940,
        3976
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2192": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3940,
        3976
      ],
      "op": "REVERT",
      "path": "10"
    },
    "2193": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3940,
        3976
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2194": {
      "op": "POP"
    },
    "2195": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3995,
        4005
      ],
      "op": "CALLER",
      "path": "10",
      "statement": 15
    },
    "2196": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        4009,
        4010
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2198": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3986,
        4006
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2199": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3986,
        4006
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2200": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3986,
        4006
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2201": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3986,
        3994
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "2203": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3986,
        4006
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2205": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3986,
        4006
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2206": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3986,
        4006
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2208": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3986,
        4006
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2209": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3986,
        4006
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2210": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3986,
        4006
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "2211": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3986,
        4010
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2212": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3986,
        4010
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2213": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3986,
        4010
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2214": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        3986,
        4010
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "2215": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        4025,
        4061
      ],
      "op": "MLOAD",
      "path": "10",
      "statement": 16
    },
    "2216": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        4025,
        4061
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0xDDC398B321237A8D40AC914388309C2F52A08C134E4DC4CE61E32F57CB7D80F1"
    },
    "2249": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        4025,
        4061
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2250": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        4025,
        4061
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x8D6"
    },
    "2253": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        4025,
        4061
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2254": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        4054,
        4060
      ],
      "op": "DUP5",
      "path": "10"
    },
    "2255": {
      "op": "DUP2"
    },
    "2256": {
      "op": "MSTORE"
    },
    "2257": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2259": {
      "op": "ADD"
    },
    "2260": {
      "op": "SWAP1"
    },
    "2261": {
      "op": "JUMP"
    },
    "2262": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        4025,
        4061
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2263": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        4025,
        4061
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2265": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        4025,
        4061
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2266": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        4025,
        4061
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2267": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        4025,
        4061
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2268": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        4025,
        4061
      ],
      "op": "SUB",
      "path": "10"
    },
    "2269": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        4025,
        4061
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2270": {
      "fn": "MiniMart.withdrawBalance",
      "offset": [
        4025,
        4061
      ],
      "op": "LOG2",
      "path": "10"
    },
    "2271": {
      "op": "POP"
    },
    "2272": {
      "offset": [
        1637,
        1638
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "2274": {
      "offset": [
        2563,
        2570
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2276": {
      "offset": [
        2563,
        2585
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "2277": {
      "fn": "MiniMart.withdrawBalance",
      "jump": "o",
      "offset": [
        3753,
        4068
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2278": {
      "fn": "MiniMart.setFee",
      "offset": [
        1090,
        1267
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2279": {
      "fn": "MiniMart.setFee",
      "offset": [
        1161,
        1169
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 17,
      "value": "0x1"
    },
    "2281": {
      "fn": "MiniMart.setFee",
      "offset": [
        1161,
        1169
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2282": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2284": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2286": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2288": {
      "op": "SHL"
    },
    "2289": {
      "op": "SUB"
    },
    "2290": {
      "fn": "MiniMart.setFee",
      "offset": [
        1161,
        1169
      ],
      "op": "AND",
      "path": "10"
    },
    "2291": {
      "fn": "MiniMart.setFee",
      "offset": [
        1147,
        1157
      ],
      "op": "CALLER",
      "path": "10"
    },
    "2292": {
      "branch": 34,
      "fn": "MiniMart.setFee",
      "offset": [
        1147,
        1169
      ],
      "op": "EQ",
      "path": "10"
    },
    "2293": {
      "fn": "MiniMart.setFee",
      "offset": [
        1139,
        1231
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x962"
    },
    "2296": {
      "branch": 34,
      "fn": "MiniMart.setFee",
      "offset": [
        1139,
        1231
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2297": {
      "fn": "MiniMart.setFee",
      "offset": [
        1139,
        1231
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2299": {
      "fn": "MiniMart.setFee",
      "offset": [
        1139,
        1231
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2300": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2304": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2306": {
      "op": "SHL"
    },
    "2307": {
      "fn": "MiniMart.setFee",
      "offset": [
        1139,
        1231
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2308": {
      "fn": "MiniMart.setFee",
      "offset": [
        1139,
        1231
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2309": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2311": {
      "fn": "MiniMart.setFee",
      "offset": [
        1139,
        1231
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "2313": {
      "fn": "MiniMart.setFee",
      "offset": [
        1139,
        1231
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2314": {
      "fn": "MiniMart.setFee",
      "offset": [
        1139,
        1231
      ],
      "op": "ADD",
      "path": "10"
    },
    "2315": {
      "op": "MSTORE"
    },
    "2316": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "2318": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2320": {
      "op": "DUP3"
    },
    "2321": {
      "op": "ADD"
    },
    "2322": {
      "op": "MSTORE"
    },
    "2323": {
      "op": "PUSH32",
      "value": "0x4F6E6C7920746865206F70657261746F72206D6179206368616E676520746865"
    },
    "2356": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2358": {
      "op": "DUP3"
    },
    "2359": {
      "op": "ADD"
    },
    "2360": {
      "op": "MSTORE"
    },
    "2361": {
      "op": "PUSH25",
      "value": "0x103332B2903337B9103A34329036B0B935B2BA383630B1B297"
    },
    "2387": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "2389": {
      "op": "SHL"
    },
    "2390": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2392": {
      "op": "DUP3"
    },
    "2393": {
      "op": "ADD"
    },
    "2394": {
      "op": "MSTORE"
    },
    "2395": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2397": {
      "op": "ADD"
    },
    "2398": {
      "fn": "MiniMart.setFee",
      "offset": [
        1139,
        1231
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x203"
    },
    "2401": {
      "op": "JUMP"
    },
    "2402": {
      "fn": "MiniMart.setFee",
      "offset": [
        1139,
        1231
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2403": {
      "fn": "MiniMart.setFee",
      "offset": [
        1242,
        1253
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 18,
      "value": "0x2"
    },
    "2405": {
      "fn": "MiniMart.setFee",
      "offset": [
        1242,
        1260
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "2406": {
      "fn": "MiniMart.setFee",
      "jump": "o",
      "offset": [
        1090,
        1267
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2407": {
      "fn": "MiniMart.sell",
      "offset": [
        1273,
        1684
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2408": {
      "fn": "MiniMart.sell",
      "offset": [
        1368,
        1375
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2410": {
      "offset": [
        1680,
        1681
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "2412": {
      "offset": [
        2260,
        2267
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2414": {
      "fn": "MiniMart.sell",
      "offset": [
        2260,
        2267
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2415": {
      "offset": [
        2260,
        2279
      ],
      "op": "EQ",
      "path": "22"
    },
    "2416": {
      "fn": "MiniMart.sell",
      "offset": [
        2260,
        2279
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "2417": {
      "offset": [
        2252,
        2315
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x98C"
    },
    "2420": {
      "offset": [
        2252,
        2315
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2421": {
      "fn": "MiniMart.sell",
      "offset": [
        2252,
        2315
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2423": {
      "fn": "MiniMart.sell",
      "offset": [
        2252,
        2315
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2424": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2428": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2430": {
      "op": "SHL"
    },
    "2431": {
      "offset": [
        2252,
        2315
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2432": {
      "fn": "MiniMart.sell",
      "offset": [
        2252,
        2315
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2433": {
      "fn": "MiniMart.sell",
      "offset": [
        2252,
        2315
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "2435": {
      "fn": "MiniMart.sell",
      "offset": [
        2252,
        2315
      ],
      "op": "ADD",
      "path": "22"
    },
    "2436": {
      "fn": "MiniMart.sell",
      "offset": [
        2252,
        2315
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x203"
    },
    "2439": {
      "fn": "MiniMart.sell",
      "offset": [
        2252,
        2315
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2440": {
      "fn": "MiniMart.sell",
      "offset": [
        2252,
        2315
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xF7B"
    },
    "2443": {
      "fn": "MiniMart.sell",
      "jump": "i",
      "offset": [
        2252,
        2315
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2444": {
      "fn": "MiniMart.sell",
      "offset": [
        2252,
        2315
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2445": {
      "offset": [
        1680,
        1681
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "2447": {
      "offset": [
        2390,
        2397
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2449": {
      "offset": [
        2390,
        2408
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2450": {
      "fn": "MiniMart.sell",
      "offset": [
        2390,
        2408
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2451": {
      "fn": "MiniMart.sell",
      "offset": [
        2390,
        2408
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "2452": {
      "fn": "MiniMart.sell",
      "offset": [
        1468,
        1498
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2454": {
      "fn": "MiniMart.sell",
      "offset": [
        1468,
        1498
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2455": {
      "op": "PUSH4",
      "value": "0x31A9108F"
    },
    "2460": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2462": {
      "op": "SHL"
    },
    "2463": {
      "fn": "MiniMart.sell",
      "offset": [
        1468,
        1498
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2464": {
      "fn": "MiniMart.sell",
      "offset": [
        1468,
        1498
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2465": {
      "fn": "MiniMart.sell",
      "offset": [
        1468,
        1498
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "2467": {
      "fn": "MiniMart.sell",
      "offset": [
        1468,
        1498
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2468": {
      "fn": "MiniMart.sell",
      "offset": [
        1468,
        1498
      ],
      "op": "ADD",
      "path": "10"
    },
    "2469": {
      "op": "DUP6"
    },
    "2470": {
      "op": "SWAP1"
    },
    "2471": {
      "op": "MSTORE"
    },
    "2472": {
      "fn": "MiniMart.sell",
      "offset": [
        1428,
        1441
      ],
      "op": "DUP6",
      "path": "10"
    },
    "2473": {
      "fn": "MiniMart.sell",
      "offset": [
        1428,
        1441
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2474": {
      "offset": [
        2390,
        2397
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2475": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2477": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2479": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2481": {
      "op": "SHL"
    },
    "2482": {
      "op": "SUB"
    },
    "2483": {
      "fn": "MiniMart.sell",
      "offset": [
        1468,
        1488
      ],
      "op": "DUP4",
      "path": "10"
    },
    "2484": {
      "fn": "MiniMart.sell",
      "offset": [
        1468,
        1488
      ],
      "op": "AND",
      "path": "10"
    },
    "2485": {
      "fn": "MiniMart.sell",
      "offset": [
        1468,
        1488
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2486": {
      "fn": "MiniMart.sell",
      "offset": [
        1468,
        1488
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x6352211E"
    },
    "2491": {
      "fn": "MiniMart.sell",
      "offset": [
        1468,
        1488
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2492": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2494": {
      "op": "ADD"
    },
    "2495": {
      "fn": "MiniMart.sell",
      "offset": [
        1468,
        1498
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2497": {
      "fn": "MiniMart.sell",
      "offset": [
        1468,
        1498
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2499": {
      "fn": "MiniMart.sell",
      "offset": [
        1468,
        1498
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2500": {
      "fn": "MiniMart.sell",
      "offset": [
        1468,
        1498
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2501": {
      "fn": "MiniMart.sell",
      "offset": [
        1468,
        1498
      ],
      "op": "DUP4",
      "path": "10"
    },
    "2502": {
      "fn": "MiniMart.sell",
      "offset": [
        1468,
        1498
      ],
      "op": "SUB",
      "path": "10"
    },
    "2503": {
      "fn": "MiniMart.sell",
      "offset": [
        1468,
        1498
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2504": {
      "fn": "MiniMart.sell",
      "offset": [
        1468,
        1498
      ],
      "op": "DUP7",
      "path": "10"
    },
    "2505": {
      "fn": "MiniMart.sell",
      "offset": [
        1468,
        1498
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2506": {
      "fn": "MiniMart.sell",
      "offset": [
        1468,
        1498
      ],
      "op": "EXTCODESIZE",
      "path": "10"
    },
    "2507": {
      "fn": "MiniMart.sell",
      "offset": [
        1468,
        1498
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2508": {
      "fn": "MiniMart.sell",
      "offset": [
        1468,
        1498
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2509": {
      "fn": "MiniMart.sell",
      "offset": [
        1468,
        1498
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2510": {
      "fn": "MiniMart.sell",
      "offset": [
        1468,
        1498
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x9D6"
    },
    "2513": {
      "fn": "MiniMart.sell",
      "offset": [
        1468,
        1498
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2514": {
      "fn": "MiniMart.sell",
      "offset": [
        1468,
        1498
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2516": {
      "fn": "MiniMart.sell",
      "offset": [
        1468,
        1498
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2517": {
      "fn": "MiniMart.sell",
      "offset": [
        1468,
        1498
      ],
      "op": "REVERT",
      "path": "10"
    },
    "2518": {
      "fn": "MiniMart.sell",
      "offset": [
        1468,
        1498
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2519": {
      "fn": "MiniMart.sell",
      "offset": [
        1468,
        1498
      ],
      "op": "POP",
      "path": "10"
    },
    "2520": {
      "fn": "MiniMart.sell",
      "offset": [
        1468,
        1498
      ],
      "op": "GAS",
      "path": "10"
    },
    "2521": {
      "fn": "MiniMart.sell",
      "offset": [
        1468,
        1498
      ],
      "op": "STATICCALL",
      "path": "10"
    },
    "2522": {
      "fn": "MiniMart.sell",
      "offset": [
        1468,
        1498
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2523": {
      "fn": "MiniMart.sell",
      "offset": [
        1468,
        1498
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2524": {
      "fn": "MiniMart.sell",
      "offset": [
        1468,
        1498
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2525": {
      "fn": "MiniMart.sell",
      "offset": [
        1468,
        1498
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x9EA"
    },
    "2528": {
      "fn": "MiniMart.sell",
      "offset": [
        1468,
        1498
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2529": {
      "fn": "MiniMart.sell",
      "offset": [
        1468,
        1498
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "2530": {
      "fn": "MiniMart.sell",
      "offset": [
        1468,
        1498
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2532": {
      "fn": "MiniMart.sell",
      "offset": [
        1468,
        1498
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2533": {
      "fn": "MiniMart.sell",
      "offset": [
        1468,
        1498
      ],
      "op": "RETURNDATACOPY",
      "path": "10"
    },
    "2534": {
      "fn": "MiniMart.sell",
      "offset": [
        1468,
        1498
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "2535": {
      "fn": "MiniMart.sell",
      "offset": [
        1468,
        1498
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2537": {
      "fn": "MiniMart.sell",
      "offset": [
        1468,
        1498
      ],
      "op": "REVERT",
      "path": "10"
    },
    "2538": {
      "fn": "MiniMart.sell",
      "offset": [
        1468,
        1498
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2539": {
      "fn": "MiniMart.sell",
      "offset": [
        1468,
        1498
      ],
      "op": "POP",
      "path": "10"
    },
    "2540": {
      "fn": "MiniMart.sell",
      "offset": [
        1468,
        1498
      ],
      "op": "POP",
      "path": "10"
    },
    "2541": {
      "fn": "MiniMart.sell",
      "offset": [
        1468,
        1498
      ],
      "op": "POP",
      "path": "10"
    },
    "2542": {
      "fn": "MiniMart.sell",
      "offset": [
        1468,
        1498
      ],
      "op": "POP",
      "path": "10"
    },
    "2543": {
      "fn": "MiniMart.sell",
      "offset": [
        1468,
        1498
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2545": {
      "fn": "MiniMart.sell",
      "offset": [
        1468,
        1498
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2546": {
      "fn": "MiniMart.sell",
      "offset": [
        1468,
        1498
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "2547": {
      "fn": "MiniMart.sell",
      "offset": [
        1468,
        1498
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "2549": {
      "fn": "MiniMart.sell",
      "offset": [
        1468,
        1498
      ],
      "op": "NOT",
      "path": "10"
    },
    "2550": {
      "fn": "MiniMart.sell",
      "offset": [
        1468,
        1498
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "2552": {
      "fn": "MiniMart.sell",
      "offset": [
        1468,
        1498
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2553": {
      "fn": "MiniMart.sell",
      "offset": [
        1468,
        1498
      ],
      "op": "ADD",
      "path": "10"
    },
    "2554": {
      "fn": "MiniMart.sell",
      "offset": [
        1468,
        1498
      ],
      "op": "AND",
      "path": "10"
    },
    "2555": {
      "fn": "MiniMart.sell",
      "offset": [
        1468,
        1498
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2556": {
      "fn": "MiniMart.sell",
      "offset": [
        1468,
        1498
      ],
      "op": "ADD",
      "path": "10"
    },
    "2557": {
      "fn": "MiniMart.sell",
      "offset": [
        1468,
        1498
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2558": {
      "fn": "MiniMart.sell",
      "offset": [
        1468,
        1498
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2560": {
      "fn": "MiniMart.sell",
      "offset": [
        1468,
        1498
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2561": {
      "fn": "MiniMart.sell",
      "offset": [
        1468,
        1498
      ],
      "op": "POP",
      "path": "10"
    },
    "2562": {
      "fn": "MiniMart.sell",
      "offset": [
        1468,
        1498
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2563": {
      "fn": "MiniMart.sell",
      "offset": [
        1468,
        1498
      ],
      "op": "ADD",
      "path": "10"
    },
    "2564": {
      "fn": "MiniMart.sell",
      "offset": [
        1468,
        1498
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2565": {
      "fn": "MiniMart.sell",
      "offset": [
        1468,
        1498
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA0E"
    },
    "2568": {
      "fn": "MiniMart.sell",
      "offset": [
        1468,
        1498
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2569": {
      "fn": "MiniMart.sell",
      "offset": [
        1468,
        1498
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2570": {
      "fn": "MiniMart.sell",
      "offset": [
        1468,
        1498
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xFB2"
    },
    "2573": {
      "fn": "MiniMart.sell",
      "jump": "i",
      "offset": [
        1468,
        1498
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2574": {
      "fn": "MiniMart.sell",
      "offset": [
        1468,
        1498
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2575": {
      "fn": "MiniMart.sell",
      "offset": [
        1452,
        1498
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2576": {
      "op": "POP"
    },
    "2577": {
      "fn": "MiniMart.sell",
      "offset": [
        1516,
        1526
      ],
      "op": "CALLER",
      "path": "10",
      "statement": 19
    },
    "2578": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2580": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2582": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2584": {
      "op": "SHL"
    },
    "2585": {
      "op": "SUB"
    },
    "2586": {
      "fn": "MiniMart.sell",
      "offset": [
        1516,
        1535
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2587": {
      "fn": "MiniMart.sell",
      "offset": [
        1516,
        1535
      ],
      "op": "AND",
      "path": "10"
    },
    "2588": {
      "branch": 35,
      "fn": "MiniMart.sell",
      "offset": [
        1516,
        1535
      ],
      "op": "EQ",
      "path": "10"
    },
    "2589": {
      "fn": "MiniMart.sell",
      "offset": [
        1508,
        1565
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA64"
    },
    "2592": {
      "branch": 35,
      "fn": "MiniMart.sell",
      "offset": [
        1508,
        1565
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2593": {
      "fn": "MiniMart.sell",
      "offset": [
        1508,
        1565
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2595": {
      "fn": "MiniMart.sell",
      "offset": [
        1508,
        1565
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2596": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2600": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2602": {
      "op": "SHL"
    },
    "2603": {
      "fn": "MiniMart.sell",
      "offset": [
        1508,
        1565
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2604": {
      "fn": "MiniMart.sell",
      "offset": [
        1508,
        1565
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2605": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2607": {
      "fn": "MiniMart.sell",
      "offset": [
        1508,
        1565
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "2609": {
      "fn": "MiniMart.sell",
      "offset": [
        1508,
        1565
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2610": {
      "fn": "MiniMart.sell",
      "offset": [
        1508,
        1565
      ],
      "op": "ADD",
      "path": "10"
    },
    "2611": {
      "op": "MSTORE"
    },
    "2612": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "2614": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2616": {
      "op": "DUP3"
    },
    "2617": {
      "op": "ADD"
    },
    "2618": {
      "op": "MSTORE"
    },
    "2619": {
      "op": "PUSH25",
      "value": "0x21B0B63632B9103237B2B9903737BA1037BBB7103A37B5B2B7"
    },
    "2645": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "2647": {
      "op": "SHL"
    },
    "2648": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2650": {
      "op": "DUP3"
    },
    "2651": {
      "op": "ADD"
    },
    "2652": {
      "op": "MSTORE"
    },
    "2653": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2655": {
      "op": "ADD"
    },
    "2656": {
      "fn": "MiniMart.sell",
      "offset": [
        1508,
        1565
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x203"
    },
    "2659": {
      "op": "JUMP"
    },
    "2660": {
      "fn": "MiniMart.sell",
      "offset": [
        1508,
        1565
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2661": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2663": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2665": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2667": {
      "op": "SHL"
    },
    "2668": {
      "op": "SUB"
    },
    "2669": {
      "fn": "MiniMart.sell",
      "offset": [
        1576,
        1596
      ],
      "op": "DUP7",
      "path": "10",
      "statement": 20
    },
    "2670": {
      "fn": "MiniMart.sell",
      "offset": [
        1576,
        1596
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2671": {
      "fn": "MiniMart.sell",
      "offset": [
        1576,
        1596
      ],
      "op": "AND",
      "path": "10"
    },
    "2672": {
      "fn": "MiniMart.sell",
      "offset": [
        1576,
        1596
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2674": {
      "fn": "MiniMart.sell",
      "offset": [
        1576,
        1596
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2675": {
      "fn": "MiniMart.sell",
      "offset": [
        1576,
        1596
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2676": {
      "fn": "MiniMart.sell",
      "offset": [
        1576,
        1596
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2677": {
      "fn": "MiniMart.sell",
      "offset": [
        1576,
        1581
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "2679": {
      "fn": "MiniMart.sell",
      "offset": [
        1576,
        1596
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2681": {
      "fn": "MiniMart.sell",
      "offset": [
        1576,
        1596
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2682": {
      "fn": "MiniMart.sell",
      "offset": [
        1576,
        1596
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2683": {
      "fn": "MiniMart.sell",
      "offset": [
        1576,
        1596
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2684": {
      "fn": "MiniMart.sell",
      "offset": [
        1576,
        1596
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2686": {
      "fn": "MiniMart.sell",
      "offset": [
        1576,
        1596
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2687": {
      "fn": "MiniMart.sell",
      "offset": [
        1576,
        1596
      ],
      "op": "DUP4",
      "path": "10"
    },
    "2688": {
      "fn": "MiniMart.sell",
      "offset": [
        1576,
        1596
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "2689": {
      "fn": "MiniMart.sell",
      "offset": [
        1576,
        1606
      ],
      "op": "DUP11",
      "path": "10"
    },
    "2690": {
      "fn": "MiniMart.sell",
      "offset": [
        1576,
        1606
      ],
      "op": "DUP5",
      "path": "10"
    },
    "2691": {
      "fn": "MiniMart.sell",
      "offset": [
        1576,
        1606
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2692": {
      "fn": "MiniMart.sell",
      "offset": [
        1576,
        1606
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2693": {
      "fn": "MiniMart.sell",
      "offset": [
        1576,
        1606
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2694": {
      "fn": "MiniMart.sell",
      "offset": [
        1576,
        1606
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2695": {
      "fn": "MiniMart.sell",
      "offset": [
        1576,
        1606
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2696": {
      "fn": "MiniMart.sell",
      "offset": [
        1576,
        1606
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2697": {
      "fn": "MiniMart.sell",
      "offset": [
        1576,
        1606
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "2698": {
      "fn": "MiniMart.sell",
      "offset": [
        1576,
        1615
      ],
      "op": "DUP9",
      "path": "10"
    },
    "2699": {
      "fn": "MiniMart.sell",
      "offset": [
        1576,
        1615
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2700": {
      "fn": "MiniMart.sell",
      "offset": [
        1576,
        1615
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "2701": {
      "fn": "MiniMart.sell",
      "offset": [
        1631,
        1677
      ],
      "op": "DUP2",
      "path": "10",
      "statement": 21
    },
    "2702": {
      "fn": "MiniMart.sell",
      "offset": [
        1631,
        1677
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2703": {
      "op": "DUP10"
    },
    "2704": {
      "op": "DUP2"
    },
    "2705": {
      "op": "MSTORE"
    },
    "2706": {
      "op": "SWAP1"
    },
    "2707": {
      "op": "DUP2"
    },
    "2708": {
      "op": "ADD"
    },
    "2709": {
      "op": "DUP9"
    },
    "2710": {
      "op": "SWAP1"
    },
    "2711": {
      "op": "MSTORE"
    },
    "2712": {
      "fn": "MiniMart.sell",
      "offset": [
        1631,
        1677
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "2713": {
      "fn": "MiniMart.sell",
      "offset": [
        1631,
        1677
      ],
      "op": "DUP5",
      "path": "10"
    },
    "2714": {
      "fn": "MiniMart.sell",
      "offset": [
        1631,
        1677
      ],
      "op": "AND",
      "path": "10"
    },
    "2715": {
      "fn": "MiniMart.sell",
      "offset": [
        1631,
        1677
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "2716": {
      "fn": "MiniMart.sell",
      "offset": [
        1631,
        1677
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0xA1424A2C6C5C34718C2D3A9246C6D8C976B24B319BAEE16FB2A9CB939BA75A02"
    },
    "2749": {
      "fn": "MiniMart.sell",
      "offset": [
        1631,
        1677
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2750": {
      "op": "ADD"
    },
    "2751": {
      "fn": "MiniMart.sell",
      "offset": [
        1631,
        1677
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2753": {
      "fn": "MiniMart.sell",
      "offset": [
        1631,
        1677
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2754": {
      "fn": "MiniMart.sell",
      "offset": [
        1631,
        1677
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2755": {
      "fn": "MiniMart.sell",
      "offset": [
        1631,
        1677
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2756": {
      "fn": "MiniMart.sell",
      "offset": [
        1631,
        1677
      ],
      "op": "SUB",
      "path": "10"
    },
    "2757": {
      "fn": "MiniMart.sell",
      "offset": [
        1631,
        1677
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2758": {
      "fn": "MiniMart.sell",
      "offset": [
        1631,
        1677
      ],
      "op": "LOG3",
      "path": "10"
    },
    "2759": {
      "op": "POP"
    },
    "2760": {
      "op": "POP"
    },
    "2761": {
      "offset": [
        1637,
        1638
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "2763": {
      "offset": [
        2563,
        2570
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2765": {
      "offset": [
        2563,
        2585
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "2766": {
      "fn": "MiniMart.sell",
      "offset": [
        1273,
        1684
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "2767": {
      "fn": "MiniMart.sell",
      "offset": [
        1273,
        1684
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "2768": {
      "op": "POP"
    },
    "2769": {
      "op": "POP"
    },
    "2770": {
      "op": "POP"
    },
    "2771": {
      "fn": "MiniMart.sell",
      "jump": "o",
      "offset": [
        1273,
        1684
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2772": {
      "fn": "MiniMart.buy",
      "offset": [
        1690,
        2677
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2773": {
      "offset": [
        1680,
        1681
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "2775": {
      "offset": [
        2260,
        2267
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2777": {
      "fn": "MiniMart.buy",
      "offset": [
        2260,
        2267
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2778": {
      "offset": [
        2260,
        2279
      ],
      "op": "EQ",
      "path": "22"
    },
    "2779": {
      "branch": 37,
      "fn": "MiniMart.buy",
      "offset": [
        2260,
        2279
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "2780": {
      "offset": [
        2252,
        2315
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xAF7"
    },
    "2783": {
      "branch": 37,
      "offset": [
        2252,
        2315
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2784": {
      "fn": "MiniMart.buy",
      "offset": [
        2252,
        2315
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2786": {
      "fn": "MiniMart.buy",
      "offset": [
        2252,
        2315
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2787": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2791": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2793": {
      "op": "SHL"
    },
    "2794": {
      "offset": [
        2252,
        2315
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2795": {
      "fn": "MiniMart.buy",
      "offset": [
        2252,
        2315
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2796": {
      "fn": "MiniMart.buy",
      "offset": [
        2252,
        2315
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "2798": {
      "fn": "MiniMart.buy",
      "offset": [
        2252,
        2315
      ],
      "op": "ADD",
      "path": "22"
    },
    "2799": {
      "fn": "MiniMart.buy",
      "offset": [
        2252,
        2315
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x203"
    },
    "2802": {
      "fn": "MiniMart.buy",
      "offset": [
        2252,
        2315
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2803": {
      "fn": "MiniMart.buy",
      "offset": [
        2252,
        2315
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xF7B"
    },
    "2806": {
      "fn": "MiniMart.buy",
      "jump": "i",
      "offset": [
        2252,
        2315
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2807": {
      "fn": "MiniMart.buy",
      "offset": [
        2252,
        2315
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2808": {
      "offset": [
        1680,
        1681
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "2810": {
      "offset": [
        2390,
        2397
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2812": {
      "offset": [
        2390,
        2408
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2813": {
      "fn": "MiniMart.buy",
      "offset": [
        2390,
        2408
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2814": {
      "fn": "MiniMart.buy",
      "offset": [
        2390,
        2408
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "2815": {
      "fn": "MiniMart.buy",
      "offset": [
        1862,
        1892
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2817": {
      "fn": "MiniMart.buy",
      "offset": [
        1862,
        1892
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2818": {
      "op": "PUSH4",
      "value": "0x31A9108F"
    },
    "2823": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2825": {
      "op": "SHL"
    },
    "2826": {
      "fn": "MiniMart.buy",
      "offset": [
        1862,
        1892
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2827": {
      "fn": "MiniMart.buy",
      "offset": [
        1862,
        1892
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2828": {
      "fn": "MiniMart.buy",
      "offset": [
        1862,
        1892
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "2830": {
      "fn": "MiniMart.buy",
      "offset": [
        1862,
        1892
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2831": {
      "fn": "MiniMart.buy",
      "offset": [
        1862,
        1892
      ],
      "op": "ADD",
      "path": "10"
    },
    "2832": {
      "op": "DUP4"
    },
    "2833": {
      "op": "SWAP1"
    },
    "2834": {
      "op": "MSTORE"
    },
    "2835": {
      "fn": "MiniMart.buy",
      "offset": [
        1822,
        1835
      ],
      "op": "DUP4",
      "path": "10"
    },
    "2836": {
      "fn": "MiniMart.buy",
      "offset": [
        1822,
        1835
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2837": {
      "offset": [
        2390,
        2397
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2838": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2840": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2842": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2844": {
      "op": "SHL"
    },
    "2845": {
      "op": "SUB"
    },
    "2846": {
      "fn": "MiniMart.buy",
      "offset": [
        1862,
        1882
      ],
      "op": "DUP4",
      "path": "10"
    },
    "2847": {
      "fn": "MiniMart.buy",
      "offset": [
        1862,
        1882
      ],
      "op": "AND",
      "path": "10"
    },
    "2848": {
      "fn": "MiniMart.buy",
      "offset": [
        1862,
        1882
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2849": {
      "fn": "MiniMart.buy",
      "offset": [
        1862,
        1882
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x6352211E"
    },
    "2854": {
      "fn": "MiniMart.buy",
      "offset": [
        1862,
        1882
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2855": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2857": {
      "op": "ADD"
    },
    "2858": {
      "fn": "MiniMart.buy",
      "offset": [
        1862,
        1892
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2860": {
      "fn": "MiniMart.buy",
      "offset": [
        1862,
        1892
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2862": {
      "fn": "MiniMart.buy",
      "offset": [
        1862,
        1892
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2863": {
      "fn": "MiniMart.buy",
      "offset": [
        1862,
        1892
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2864": {
      "fn": "MiniMart.buy",
      "offset": [
        1862,
        1892
      ],
      "op": "DUP4",
      "path": "10"
    },
    "2865": {
      "fn": "MiniMart.buy",
      "offset": [
        1862,
        1892
      ],
      "op": "SUB",
      "path": "10"
    },
    "2866": {
      "fn": "MiniMart.buy",
      "offset": [
        1862,
        1892
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2867": {
      "fn": "MiniMart.buy",
      "offset": [
        1862,
        1892
      ],
      "op": "DUP7",
      "path": "10"
    },
    "2868": {
      "fn": "MiniMart.buy",
      "offset": [
        1862,
        1892
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2869": {
      "fn": "MiniMart.buy",
      "offset": [
        1862,
        1892
      ],
      "op": "EXTCODESIZE",
      "path": "10"
    },
    "2870": {
      "fn": "MiniMart.buy",
      "offset": [
        1862,
        1892
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2871": {
      "fn": "MiniMart.buy",
      "offset": [
        1862,
        1892
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2872": {
      "fn": "MiniMart.buy",
      "offset": [
        1862,
        1892
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2873": {
      "fn": "MiniMart.buy",
      "offset": [
        1862,
        1892
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB41"
    },
    "2876": {
      "fn": "MiniMart.buy",
      "offset": [
        1862,
        1892
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2877": {
      "fn": "MiniMart.buy",
      "offset": [
        1862,
        1892
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2879": {
      "fn": "MiniMart.buy",
      "offset": [
        1862,
        1892
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2880": {
      "fn": "MiniMart.buy",
      "offset": [
        1862,
        1892
      ],
      "op": "REVERT",
      "path": "10"
    },
    "2881": {
      "fn": "MiniMart.buy",
      "offset": [
        1862,
        1892
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2882": {
      "fn": "MiniMart.buy",
      "offset": [
        1862,
        1892
      ],
      "op": "POP",
      "path": "10"
    },
    "2883": {
      "fn": "MiniMart.buy",
      "offset": [
        1862,
        1892
      ],
      "op": "GAS",
      "path": "10"
    },
    "2884": {
      "fn": "MiniMart.buy",
      "offset": [
        1862,
        1892
      ],
      "op": "STATICCALL",
      "path": "10"
    },
    "2885": {
      "fn": "MiniMart.buy",
      "offset": [
        1862,
        1892
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2886": {
      "fn": "MiniMart.buy",
      "offset": [
        1862,
        1892
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2887": {
      "fn": "MiniMart.buy",
      "offset": [
        1862,
        1892
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2888": {
      "fn": "MiniMart.buy",
      "offset": [
        1862,
        1892
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB55"
    },
    "2891": {
      "fn": "MiniMart.buy",
      "offset": [
        1862,
        1892
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2892": {
      "fn": "MiniMart.buy",
      "offset": [
        1862,
        1892
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "2893": {
      "fn": "MiniMart.buy",
      "offset": [
        1862,
        1892
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2895": {
      "fn": "MiniMart.buy",
      "offset": [
        1862,
        1892
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2896": {
      "fn": "MiniMart.buy",
      "offset": [
        1862,
        1892
      ],
      "op": "RETURNDATACOPY",
      "path": "10"
    },
    "2897": {
      "fn": "MiniMart.buy",
      "offset": [
        1862,
        1892
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "2898": {
      "fn": "MiniMart.buy",
      "offset": [
        1862,
        1892
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2900": {
      "fn": "MiniMart.buy",
      "offset": [
        1862,
        1892
      ],
      "op": "REVERT",
      "path": "10"
    },
    "2901": {
      "fn": "MiniMart.buy",
      "offset": [
        1862,
        1892
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2902": {
      "fn": "MiniMart.buy",
      "offset": [
        1862,
        1892
      ],
      "op": "POP",
      "path": "10"
    },
    "2903": {
      "fn": "MiniMart.buy",
      "offset": [
        1862,
        1892
      ],
      "op": "POP",
      "path": "10"
    },
    "2904": {
      "fn": "MiniMart.buy",
      "offset": [
        1862,
        1892
      ],
      "op": "POP",
      "path": "10"
    },
    "2905": {
      "fn": "MiniMart.buy",
      "offset": [
        1862,
        1892
      ],
      "op": "POP",
      "path": "10"
    },
    "2906": {
      "fn": "MiniMart.buy",
      "offset": [
        1862,
        1892
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2908": {
      "fn": "MiniMart.buy",
      "offset": [
        1862,
        1892
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2909": {
      "fn": "MiniMart.buy",
      "offset": [
        1862,
        1892
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "2910": {
      "fn": "MiniMart.buy",
      "offset": [
        1862,
        1892
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "2912": {
      "fn": "MiniMart.buy",
      "offset": [
        1862,
        1892
      ],
      "op": "NOT",
      "path": "10"
    },
    "2913": {
      "fn": "MiniMart.buy",
      "offset": [
        1862,
        1892
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "2915": {
      "fn": "MiniMart.buy",
      "offset": [
        1862,
        1892
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2916": {
      "fn": "MiniMart.buy",
      "offset": [
        1862,
        1892
      ],
      "op": "ADD",
      "path": "10"
    },
    "2917": {
      "fn": "MiniMart.buy",
      "offset": [
        1862,
        1892
      ],
      "op": "AND",
      "path": "10"
    },
    "2918": {
      "fn": "MiniMart.buy",
      "offset": [
        1862,
        1892
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2919": {
      "fn": "MiniMart.buy",
      "offset": [
        1862,
        1892
      ],
      "op": "ADD",
      "path": "10"
    },
    "2920": {
      "fn": "MiniMart.buy",
      "offset": [
        1862,
        1892
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2921": {
      "fn": "MiniMart.buy",
      "offset": [
        1862,
        1892
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2923": {
      "fn": "MiniMart.buy",
      "offset": [
        1862,
        1892
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2924": {
      "fn": "MiniMart.buy",
      "offset": [
        1862,
        1892
      ],
      "op": "POP",
      "path": "10"
    },
    "2925": {
      "fn": "MiniMart.buy",
      "offset": [
        1862,
        1892
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2926": {
      "fn": "MiniMart.buy",
      "offset": [
        1862,
        1892
      ],
      "op": "ADD",
      "path": "10"
    },
    "2927": {
      "fn": "MiniMart.buy",
      "offset": [
        1862,
        1892
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2928": {
      "fn": "MiniMart.buy",
      "offset": [
        1862,
        1892
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB79"
    },
    "2931": {
      "fn": "MiniMart.buy",
      "offset": [
        1862,
        1892
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2932": {
      "fn": "MiniMart.buy",
      "offset": [
        1862,
        1892
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2933": {
      "fn": "MiniMart.buy",
      "offset": [
        1862,
        1892
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xFB2"
    },
    "2936": {
      "fn": "MiniMart.buy",
      "jump": "i",
      "offset": [
        1862,
        1892
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2937": {
      "fn": "MiniMart.buy",
      "offset": [
        1862,
        1892
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2938": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2940": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2942": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2944": {
      "op": "SHL"
    },
    "2945": {
      "op": "SUB"
    },
    "2946": {
      "fn": "MiniMart.buy",
      "offset": [
        1910,
        1930
      ],
      "op": "DUP6",
      "path": "10",
      "statement": 22
    },
    "2947": {
      "fn": "MiniMart.buy",
      "offset": [
        1910,
        1930
      ],
      "op": "AND",
      "path": "10"
    },
    "2948": {
      "fn": "MiniMart.buy",
      "offset": [
        1943,
        1944
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2950": {
      "fn": "MiniMart.buy",
      "offset": [
        1910,
        1930
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2951": {
      "fn": "MiniMart.buy",
      "offset": [
        1910,
        1930
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2952": {
      "fn": "MiniMart.buy",
      "offset": [
        1910,
        1930
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2953": {
      "fn": "MiniMart.buy",
      "offset": [
        1910,
        1915
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "2955": {
      "fn": "MiniMart.buy",
      "offset": [
        1910,
        1930
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2957": {
      "fn": "MiniMart.buy",
      "offset": [
        1910,
        1930
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2958": {
      "fn": "MiniMart.buy",
      "offset": [
        1910,
        1930
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2959": {
      "fn": "MiniMart.buy",
      "offset": [
        1910,
        1930
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2960": {
      "fn": "MiniMart.buy",
      "offset": [
        1910,
        1930
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2962": {
      "fn": "MiniMart.buy",
      "offset": [
        1910,
        1930
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2963": {
      "fn": "MiniMart.buy",
      "offset": [
        1910,
        1930
      ],
      "op": "DUP4",
      "path": "10"
    },
    "2964": {
      "fn": "MiniMart.buy",
      "offset": [
        1910,
        1930
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "2965": {
      "fn": "MiniMart.buy",
      "offset": [
        1910,
        1940
      ],
      "op": "DUP8",
      "path": "10"
    },
    "2966": {
      "fn": "MiniMart.buy",
      "offset": [
        1910,
        1940
      ],
      "op": "DUP5",
      "path": "10"
    },
    "2967": {
      "fn": "MiniMart.buy",
      "offset": [
        1910,
        1940
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2968": {
      "fn": "MiniMart.buy",
      "offset": [
        1910,
        1940
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2969": {
      "fn": "MiniMart.buy",
      "offset": [
        1910,
        1940
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2970": {
      "fn": "MiniMart.buy",
      "offset": [
        1910,
        1940
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2971": {
      "fn": "MiniMart.buy",
      "offset": [
        1910,
        1940
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2972": {
      "fn": "MiniMart.buy",
      "offset": [
        1910,
        1940
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "2973": {
      "fn": "MiniMart.buy",
      "offset": [
        1910,
        1940
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2974": {
      "fn": "MiniMart.buy",
      "offset": [
        1846,
        1892
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2975": {
      "fn": "MiniMart.buy",
      "offset": [
        1846,
        1892
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2976": {
      "op": "POP"
    },
    "2977": {
      "fn": "MiniMart.buy",
      "offset": [
        1902,
        1977
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xBBC"
    },
    "2980": {
      "fn": "MiniMart.buy",
      "offset": [
        1902,
        1977
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2981": {
      "fn": "MiniMart.buy",
      "offset": [
        1902,
        1977
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2983": {
      "fn": "MiniMart.buy",
      "offset": [
        1902,
        1977
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2984": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2988": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2990": {
      "op": "SHL"
    },
    "2991": {
      "fn": "MiniMart.buy",
      "offset": [
        1902,
        1977
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2992": {
      "fn": "MiniMart.buy",
      "offset": [
        1902,
        1977
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2993": {
      "fn": "MiniMart.buy",
      "offset": [
        1902,
        1977
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "2995": {
      "fn": "MiniMart.buy",
      "offset": [
        1902,
        1977
      ],
      "op": "ADD",
      "path": "10"
    },
    "2996": {
      "fn": "MiniMart.buy",
      "offset": [
        1902,
        1977
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x203"
    },
    "2999": {
      "fn": "MiniMart.buy",
      "offset": [
        1902,
        1977
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3000": {
      "fn": "MiniMart.buy",
      "offset": [
        1902,
        1977
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xFE8"
    },
    "3003": {
      "fn": "MiniMart.buy",
      "jump": "i",
      "offset": [
        1902,
        1977
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3004": {
      "fn": "MiniMart.buy",
      "offset": [
        1902,
        1977
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3005": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3007": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3009": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3011": {
      "op": "SHL"
    },
    "3012": {
      "op": "SUB"
    },
    "3013": {
      "fn": "MiniMart.buy",
      "offset": [
        2008,
        2028
      ],
      "op": "DUP5",
      "path": "10",
      "statement": 23
    },
    "3014": {
      "fn": "MiniMart.buy",
      "offset": [
        2008,
        2028
      ],
      "op": "AND",
      "path": "10"
    },
    "3015": {
      "fn": "MiniMart.buy",
      "offset": [
        2008,
        2028
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3017": {
      "fn": "MiniMart.buy",
      "offset": [
        2008,
        2028
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3018": {
      "fn": "MiniMart.buy",
      "offset": [
        2008,
        2028
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3019": {
      "fn": "MiniMart.buy",
      "offset": [
        2008,
        2028
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3020": {
      "fn": "MiniMart.buy",
      "offset": [
        2008,
        2013
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "3022": {
      "fn": "MiniMart.buy",
      "offset": [
        2008,
        2028
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3024": {
      "fn": "MiniMart.buy",
      "offset": [
        2008,
        2028
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3025": {
      "fn": "MiniMart.buy",
      "offset": [
        2008,
        2028
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3026": {
      "fn": "MiniMart.buy",
      "offset": [
        2008,
        2028
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3027": {
      "fn": "MiniMart.buy",
      "offset": [
        2008,
        2028
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3029": {
      "fn": "MiniMart.buy",
      "offset": [
        2008,
        2028
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3030": {
      "fn": "MiniMart.buy",
      "offset": [
        2008,
        2028
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3031": {
      "fn": "MiniMart.buy",
      "offset": [
        2008,
        2028
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "3032": {
      "fn": "MiniMart.buy",
      "offset": [
        2008,
        2038
      ],
      "op": "DUP7",
      "path": "10"
    },
    "3033": {
      "fn": "MiniMart.buy",
      "offset": [
        2008,
        2038
      ],
      "op": "DUP5",
      "path": "10"
    },
    "3034": {
      "fn": "MiniMart.buy",
      "offset": [
        2008,
        2038
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3035": {
      "fn": "MiniMart.buy",
      "offset": [
        2008,
        2038
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3036": {
      "fn": "MiniMart.buy",
      "offset": [
        2008,
        2038
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3037": {
      "fn": "MiniMart.buy",
      "offset": [
        2008,
        2038
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3038": {
      "fn": "MiniMart.buy",
      "offset": [
        2008,
        2038
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3039": {
      "fn": "MiniMart.buy",
      "offset": [
        2008,
        2038
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "3040": {
      "fn": "MiniMart.buy",
      "offset": [
        2008,
        2038
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3041": {
      "fn": "MiniMart.buy",
      "offset": [
        1995,
        2004
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "3042": {
      "fn": "MiniMart.buy",
      "offset": [
        1995,
        2038
      ],
      "op": "LT",
      "path": "10"
    },
    "3043": {
      "branch": 36,
      "fn": "MiniMart.buy",
      "offset": [
        1995,
        2038
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3044": {
      "fn": "MiniMart.buy",
      "offset": [
        1987,
        2067
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xC2A"
    },
    "3047": {
      "branch": 36,
      "fn": "MiniMart.buy",
      "offset": [
        1987,
        2067
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3048": {
      "fn": "MiniMart.buy",
      "offset": [
        1987,
        2067
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3050": {
      "fn": "MiniMart.buy",
      "offset": [
        1987,
        2067
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3051": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3055": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3057": {
      "op": "SHL"
    },
    "3058": {
      "fn": "MiniMart.buy",
      "offset": [
        1987,
        2067
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3059": {
      "fn": "MiniMart.buy",
      "offset": [
        1987,
        2067
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3060": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3062": {
      "fn": "MiniMart.buy",
      "offset": [
        1987,
        2067
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "3064": {
      "fn": "MiniMart.buy",
      "offset": [
        1987,
        2067
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3065": {
      "fn": "MiniMart.buy",
      "offset": [
        1987,
        2067
      ],
      "op": "ADD",
      "path": "10"
    },
    "3066": {
      "op": "MSTORE"
    },
    "3067": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "3069": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3071": {
      "op": "DUP3"
    },
    "3072": {
      "op": "ADD"
    },
    "3073": {
      "op": "MSTORE"
    },
    "3074": {
      "op": "PUSH24",
      "value": "0x2737BA1032B737BAB3B410333AB73239903A3790313ABC97"
    },
    "3099": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "3101": {
      "op": "SHL"
    },
    "3102": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3104": {
      "op": "DUP3"
    },
    "3105": {
      "op": "ADD"
    },
    "3106": {
      "op": "MSTORE"
    },
    "3107": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3109": {
      "op": "ADD"
    },
    "3110": {
      "fn": "MiniMart.buy",
      "offset": [
        1987,
        2067
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x203"
    },
    "3113": {
      "op": "JUMP"
    },
    "3114": {
      "fn": "MiniMart.buy",
      "offset": [
        1987,
        2067
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3115": {
      "fn": "MiniMart.buy",
      "offset": [
        2078,
        2144
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 24,
      "value": "0x40"
    },
    "3117": {
      "fn": "MiniMart.buy",
      "offset": [
        2078,
        2144
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3118": {
      "op": "PUSH4",
      "value": "0xC43E92B1"
    },
    "3123": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3125": {
      "op": "SHL"
    },
    "3126": {
      "fn": "MiniMart.buy",
      "offset": [
        2078,
        2144
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3127": {
      "fn": "MiniMart.buy",
      "offset": [
        2078,
        2144
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3128": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3130": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3132": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3134": {
      "op": "SHL"
    },
    "3135": {
      "op": "SUB"
    },
    "3136": {
      "fn": "MiniMart.buy",
      "offset": [
        2078,
        2115
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3137": {
      "fn": "MiniMart.buy",
      "offset": [
        2078,
        2115
      ],
      "op": "AND",
      "path": "10"
    },
    "3138": {
      "fn": "MiniMart.buy",
      "offset": [
        2078,
        2115
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3139": {
      "fn": "MiniMart.buy",
      "offset": [
        2078,
        2115
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xC43E92B1"
    },
    "3144": {
      "fn": "MiniMart.buy",
      "offset": [
        2078,
        2115
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3145": {
      "fn": "MiniMart.buy",
      "offset": [
        2078,
        2144
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xC5A"
    },
    "3148": {
      "fn": "MiniMart.buy",
      "offset": [
        2078,
        2144
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3149": {
      "fn": "MiniMart.buy",
      "offset": [
        2116,
        2121
      ],
      "op": "DUP5",
      "path": "10"
    },
    "3150": {
      "fn": "MiniMart.buy",
      "offset": [
        2116,
        2121
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3151": {
      "fn": "MiniMart.buy",
      "offset": [
        2123,
        2133
      ],
      "op": "CALLER",
      "path": "10"
    },
    "3152": {
      "fn": "MiniMart.buy",
      "offset": [
        2123,
        2133
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3153": {
      "fn": "MiniMart.buy",
      "offset": [
        2135,
        2143
      ],
      "op": "DUP9",
      "path": "10"
    },
    "3154": {
      "fn": "MiniMart.buy",
      "offset": [
        2135,
        2143
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3155": {
      "fn": "MiniMart.buy",
      "offset": [
        2078,
        2144
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "3157": {
      "fn": "MiniMart.buy",
      "offset": [
        2078,
        2144
      ],
      "op": "ADD",
      "path": "10"
    },
    "3158": {
      "fn": "MiniMart.buy",
      "offset": [
        2078,
        2144
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x101F"
    },
    "3161": {
      "fn": "MiniMart.buy",
      "jump": "i",
      "offset": [
        2078,
        2144
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3162": {
      "fn": "MiniMart.buy",
      "offset": [
        2078,
        2144
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3163": {
      "fn": "MiniMart.buy",
      "offset": [
        2078,
        2144
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3165": {
      "fn": "MiniMart.buy",
      "offset": [
        2078,
        2144
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3167": {
      "fn": "MiniMart.buy",
      "offset": [
        2078,
        2144
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3168": {
      "fn": "MiniMart.buy",
      "offset": [
        2078,
        2144
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3169": {
      "fn": "MiniMart.buy",
      "offset": [
        2078,
        2144
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3170": {
      "fn": "MiniMart.buy",
      "offset": [
        2078,
        2144
      ],
      "op": "SUB",
      "path": "10"
    },
    "3171": {
      "fn": "MiniMart.buy",
      "offset": [
        2078,
        2144
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3172": {
      "fn": "MiniMart.buy",
      "offset": [
        2078,
        2144
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3174": {
      "fn": "MiniMart.buy",
      "offset": [
        2078,
        2144
      ],
      "op": "DUP8",
      "path": "10"
    },
    "3175": {
      "fn": "MiniMart.buy",
      "offset": [
        2078,
        2144
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3176": {
      "fn": "MiniMart.buy",
      "offset": [
        2078,
        2144
      ],
      "op": "EXTCODESIZE",
      "path": "10"
    },
    "3177": {
      "fn": "MiniMart.buy",
      "offset": [
        2078,
        2144
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3178": {
      "fn": "MiniMart.buy",
      "offset": [
        2078,
        2144
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3179": {
      "fn": "MiniMart.buy",
      "offset": [
        2078,
        2144
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3180": {
      "fn": "MiniMart.buy",
      "offset": [
        2078,
        2144
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xC74"
    },
    "3183": {
      "fn": "MiniMart.buy",
      "offset": [
        2078,
        2144
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3184": {
      "fn": "MiniMart.buy",
      "offset": [
        2078,
        2144
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3186": {
      "fn": "MiniMart.buy",
      "offset": [
        2078,
        2144
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3187": {
      "fn": "MiniMart.buy",
      "offset": [
        2078,
        2144
      ],
      "op": "REVERT",
      "path": "10"
    },
    "3188": {
      "fn": "MiniMart.buy",
      "offset": [
        2078,
        2144
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3189": {
      "fn": "MiniMart.buy",
      "offset": [
        2078,
        2144
      ],
      "op": "POP",
      "path": "10"
    },
    "3190": {
      "fn": "MiniMart.buy",
      "offset": [
        2078,
        2144
      ],
      "op": "GAS",
      "path": "10"
    },
    "3191": {
      "fn": "MiniMart.buy",
      "offset": [
        2078,
        2144
      ],
      "op": "CALL",
      "path": "10"
    },
    "3192": {
      "fn": "MiniMart.buy",
      "offset": [
        2078,
        2144
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3193": {
      "fn": "MiniMart.buy",
      "offset": [
        2078,
        2144
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3194": {
      "fn": "MiniMart.buy",
      "offset": [
        2078,
        2144
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3195": {
      "fn": "MiniMart.buy",
      "offset": [
        2078,
        2144
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xC88"
    },
    "3198": {
      "fn": "MiniMart.buy",
      "offset": [
        2078,
        2144
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3199": {
      "fn": "MiniMart.buy",
      "offset": [
        2078,
        2144
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "3200": {
      "fn": "MiniMart.buy",
      "offset": [
        2078,
        2144
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3202": {
      "fn": "MiniMart.buy",
      "offset": [
        2078,
        2144
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3203": {
      "fn": "MiniMart.buy",
      "offset": [
        2078,
        2144
      ],
      "op": "RETURNDATACOPY",
      "path": "10"
    },
    "3204": {
      "fn": "MiniMart.buy",
      "offset": [
        2078,
        2144
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "3205": {
      "fn": "MiniMart.buy",
      "offset": [
        2078,
        2144
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3207": {
      "fn": "MiniMart.buy",
      "offset": [
        2078,
        2144
      ],
      "op": "REVERT",
      "path": "10"
    },
    "3208": {
      "fn": "MiniMart.buy",
      "offset": [
        2078,
        2144
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3209": {
      "op": "POP"
    },
    "3210": {
      "op": "POP"
    },
    "3211": {
      "op": "POP"
    },
    "3212": {
      "op": "POP"
    },
    "3213": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3215": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3217": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3219": {
      "op": "SHL"
    },
    "3220": {
      "op": "SUB"
    },
    "3221": {
      "fn": "MiniMart.buy",
      "offset": [
        2155,
        2175
      ],
      "op": "DUP5",
      "path": "10",
      "statement": 25
    },
    "3222": {
      "fn": "MiniMart.buy",
      "offset": [
        2155,
        2175
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3223": {
      "fn": "MiniMart.buy",
      "offset": [
        2155,
        2175
      ],
      "op": "AND",
      "path": "10"
    },
    "3224": {
      "fn": "MiniMart.buy",
      "offset": [
        2188,
        2189
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3226": {
      "fn": "MiniMart.buy",
      "offset": [
        2155,
        2175
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3227": {
      "fn": "MiniMart.buy",
      "offset": [
        2155,
        2175
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3228": {
      "fn": "MiniMart.buy",
      "offset": [
        2155,
        2175
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3229": {
      "fn": "MiniMart.buy",
      "offset": [
        2155,
        2160
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "3231": {
      "fn": "MiniMart.buy",
      "offset": [
        2155,
        2175
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3233": {
      "fn": "MiniMart.buy",
      "offset": [
        2155,
        2175
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3234": {
      "fn": "MiniMart.buy",
      "offset": [
        2155,
        2175
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3235": {
      "fn": "MiniMart.buy",
      "offset": [
        2155,
        2175
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3236": {
      "fn": "MiniMart.buy",
      "offset": [
        2155,
        2175
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3238": {
      "fn": "MiniMart.buy",
      "offset": [
        2155,
        2175
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3239": {
      "fn": "MiniMart.buy",
      "offset": [
        2155,
        2175
      ],
      "op": "DUP5",
      "path": "10"
    },
    "3240": {
      "fn": "MiniMart.buy",
      "offset": [
        2155,
        2175
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "3241": {
      "fn": "MiniMart.buy",
      "offset": [
        2155,
        2185
      ],
      "op": "DUP9",
      "path": "10"
    },
    "3242": {
      "fn": "MiniMart.buy",
      "offset": [
        2155,
        2185
      ],
      "op": "DUP6",
      "path": "10"
    },
    "3243": {
      "fn": "MiniMart.buy",
      "offset": [
        2155,
        2185
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3244": {
      "fn": "MiniMart.buy",
      "offset": [
        2155,
        2185
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3245": {
      "fn": "MiniMart.buy",
      "offset": [
        2155,
        2185
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3246": {
      "fn": "MiniMart.buy",
      "offset": [
        2155,
        2185
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3247": {
      "fn": "MiniMart.buy",
      "offset": [
        2155,
        2185
      ],
      "op": "DUP5",
      "path": "10"
    },
    "3248": {
      "fn": "MiniMart.buy",
      "offset": [
        2155,
        2185
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "3249": {
      "fn": "MiniMart.buy",
      "offset": [
        2155,
        2189
      ],
      "op": "DUP5",
      "path": "10"
    },
    "3250": {
      "fn": "MiniMart.buy",
      "offset": [
        2155,
        2189
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3251": {
      "fn": "MiniMart.buy",
      "offset": [
        2155,
        2189
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "3252": {
      "fn": "MiniMart.buy",
      "offset": [
        2219,
        2244
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3253": {
      "fn": "MiniMart.buy",
      "offset": [
        2219,
        2244
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3254": {
      "op": "PUSH4",
      "value": "0x26A3B995"
    },
    "3259": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3261": {
      "op": "SHL"
    },
    "3262": {
      "fn": "MiniMart.buy",
      "offset": [
        2219,
        2244
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3263": {
      "fn": "MiniMart.buy",
      "offset": [
        2219,
        2244
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3264": {
      "fn": "MiniMart.buy",
      "offset": [
        2219,
        2244
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3265": {
      "fn": "MiniMart.buy",
      "offset": [
        2219,
        2244
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3266": {
      "fn": "MiniMart.buy",
      "offset": [
        2188,
        2189
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "3267": {
      "fn": "MiniMart.buy",
      "offset": [
        2188,
        2189
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "3268": {
      "fn": "MiniMart.buy",
      "offset": [
        2219,
        2242
      ],
      "op": "DUP8",
      "path": "10"
    },
    "3269": {
      "fn": "MiniMart.buy",
      "offset": [
        2219,
        2242
      ],
      "op": "AND",
      "path": "10"
    },
    "3270": {
      "fn": "MiniMart.buy",
      "offset": [
        2219,
        2242
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "3271": {
      "fn": "MiniMart.buy",
      "offset": [
        2219,
        2242
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x4D47732A"
    },
    "3276": {
      "fn": "MiniMart.buy",
      "offset": [
        2219,
        2242
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "3277": {
      "fn": "MiniMart.buy",
      "offset": [
        2219,
        2244
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3278": {
      "fn": "MiniMart.buy",
      "offset": [
        2219,
        2244
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3279": {
      "fn": "MiniMart.buy",
      "offset": [
        2219,
        2244
      ],
      "op": "ADD",
      "path": "10"
    },
    "3280": {
      "fn": "MiniMart.buy",
      "offset": [
        2219,
        2244
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "3281": {
      "fn": "MiniMart.buy",
      "offset": [
        2155,
        2175
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "3282": {
      "fn": "MiniMart.buy",
      "offset": [
        2219,
        2244
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3283": {
      "fn": "MiniMart.buy",
      "offset": [
        2219,
        2244
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3284": {
      "fn": "MiniMart.buy",
      "offset": [
        2219,
        2244
      ],
      "op": "SUB",
      "path": "10"
    },
    "3285": {
      "fn": "MiniMart.buy",
      "offset": [
        2219,
        2244
      ],
      "op": "ADD",
      "path": "10"
    },
    "3286": {
      "fn": "MiniMart.buy",
      "offset": [
        2219,
        2244
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3287": {
      "fn": "MiniMart.buy",
      "offset": [
        2219,
        2242
      ],
      "op": "DUP7",
      "path": "10"
    },
    "3288": {
      "fn": "MiniMart.buy",
      "offset": [
        2219,
        2244
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3289": {
      "fn": "MiniMart.buy",
      "offset": [
        2219,
        2244
      ],
      "op": "EXTCODESIZE",
      "path": "10"
    },
    "3290": {
      "fn": "MiniMart.buy",
      "offset": [
        2219,
        2244
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3291": {
      "fn": "MiniMart.buy",
      "offset": [
        2219,
        2244
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3292": {
      "fn": "MiniMart.buy",
      "offset": [
        2219,
        2244
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3293": {
      "fn": "MiniMart.buy",
      "offset": [
        2219,
        2244
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xCE5"
    },
    "3296": {
      "fn": "MiniMart.buy",
      "offset": [
        2219,
        2244
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3297": {
      "fn": "MiniMart.buy",
      "offset": [
        2219,
        2244
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3299": {
      "fn": "MiniMart.buy",
      "offset": [
        2219,
        2244
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3300": {
      "fn": "MiniMart.buy",
      "offset": [
        2219,
        2244
      ],
      "op": "REVERT",
      "path": "10"
    },
    "3301": {
      "fn": "MiniMart.buy",
      "offset": [
        2219,
        2244
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3302": {
      "fn": "MiniMart.buy",
      "offset": [
        2219,
        2244
      ],
      "op": "POP",
      "path": "10"
    },
    "3303": {
      "fn": "MiniMart.buy",
      "offset": [
        2219,
        2244
      ],
      "op": "GAS",
      "path": "10"
    },
    "3304": {
      "fn": "MiniMart.buy",
      "offset": [
        2219,
        2244
      ],
      "op": "STATICCALL",
      "path": "10"
    },
    "3305": {
      "fn": "MiniMart.buy",
      "offset": [
        2219,
        2244
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3306": {
      "fn": "MiniMart.buy",
      "offset": [
        2219,
        2244
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3307": {
      "fn": "MiniMart.buy",
      "offset": [
        2219,
        2244
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3308": {
      "fn": "MiniMart.buy",
      "offset": [
        2219,
        2244
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xCF9"
    },
    "3311": {
      "fn": "MiniMart.buy",
      "offset": [
        2219,
        2244
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3312": {
      "fn": "MiniMart.buy",
      "offset": [
        2219,
        2244
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "3313": {
      "fn": "MiniMart.buy",
      "offset": [
        2219,
        2244
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3315": {
      "fn": "MiniMart.buy",
      "offset": [
        2219,
        2244
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3316": {
      "fn": "MiniMart.buy",
      "offset": [
        2219,
        2244
      ],
      "op": "RETURNDATACOPY",
      "path": "10"
    },
    "3317": {
      "fn": "MiniMart.buy",
      "offset": [
        2219,
        2244
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "3318": {
      "fn": "MiniMart.buy",
      "offset": [
        2219,
        2244
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3320": {
      "fn": "MiniMart.buy",
      "offset": [
        2219,
        2244
      ],
      "op": "REVERT",
      "path": "10"
    },
    "3321": {
      "fn": "MiniMart.buy",
      "offset": [
        2219,
        2244
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3322": {
      "fn": "MiniMart.buy",
      "offset": [
        2219,
        2244
      ],
      "op": "POP",
      "path": "10"
    },
    "3323": {
      "fn": "MiniMart.buy",
      "offset": [
        2219,
        2244
      ],
      "op": "POP",
      "path": "10"
    },
    "3324": {
      "fn": "MiniMart.buy",
      "offset": [
        2219,
        2244
      ],
      "op": "POP",
      "path": "10"
    },
    "3325": {
      "fn": "MiniMart.buy",
      "offset": [
        2219,
        2244
      ],
      "op": "POP",
      "path": "10"
    },
    "3326": {
      "fn": "MiniMart.buy",
      "offset": [
        2219,
        2244
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3328": {
      "fn": "MiniMart.buy",
      "offset": [
        2219,
        2244
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3329": {
      "fn": "MiniMart.buy",
      "offset": [
        2219,
        2244
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "3330": {
      "fn": "MiniMart.buy",
      "offset": [
        2219,
        2244
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "3332": {
      "fn": "MiniMart.buy",
      "offset": [
        2219,
        2244
      ],
      "op": "NOT",
      "path": "10"
    },
    "3333": {
      "fn": "MiniMart.buy",
      "offset": [
        2219,
        2244
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "3335": {
      "fn": "MiniMart.buy",
      "offset": [
        2219,
        2244
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3336": {
      "fn": "MiniMart.buy",
      "offset": [
        2219,
        2244
      ],
      "op": "ADD",
      "path": "10"
    },
    "3337": {
      "fn": "MiniMart.buy",
      "offset": [
        2219,
        2244
      ],
      "op": "AND",
      "path": "10"
    },
    "3338": {
      "fn": "MiniMart.buy",
      "offset": [
        2219,
        2244
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3339": {
      "fn": "MiniMart.buy",
      "offset": [
        2219,
        2244
      ],
      "op": "ADD",
      "path": "10"
    },
    "3340": {
      "fn": "MiniMart.buy",
      "offset": [
        2219,
        2244
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3341": {
      "fn": "MiniMart.buy",
      "offset": [
        2219,
        2244
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3343": {
      "fn": "MiniMart.buy",
      "offset": [
        2219,
        2244
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3344": {
      "fn": "MiniMart.buy",
      "offset": [
        2219,
        2244
      ],
      "op": "POP",
      "path": "10"
    },
    "3345": {
      "fn": "MiniMart.buy",
      "offset": [
        2219,
        2244
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3346": {
      "fn": "MiniMart.buy",
      "offset": [
        2219,
        2244
      ],
      "op": "ADD",
      "path": "10"
    },
    "3347": {
      "fn": "MiniMart.buy",
      "offset": [
        2219,
        2244
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3348": {
      "fn": "MiniMart.buy",
      "offset": [
        2219,
        2244
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xD1D"
    },
    "3351": {
      "fn": "MiniMart.buy",
      "offset": [
        2219,
        2244
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3352": {
      "fn": "MiniMart.buy",
      "offset": [
        2219,
        2244
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3353": {
      "fn": "MiniMart.buy",
      "offset": [
        2219,
        2244
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xFCF"
    },
    "3356": {
      "fn": "MiniMart.buy",
      "jump": "i",
      "offset": [
        2219,
        2244
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3357": {
      "fn": "MiniMart.buy",
      "offset": [
        2219,
        2244
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3358": {
      "fn": "MiniMart.buy",
      "offset": [
        2200,
        2244
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3359": {
      "fn": "MiniMart.buy",
      "offset": [
        2200,
        2244
      ],
      "op": "POP",
      "path": "10"
    },
    "3360": {
      "fn": "MiniMart.buy",
      "offset": [
        2255,
        2274
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3362": {
      "fn": "MiniMart.buy",
      "offset": [
        2305,
        2308
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x64"
    },
    "3364": {
      "fn": "MiniMart.buy",
      "offset": [
        2290,
        2301
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "3366": {
      "fn": "MiniMart.buy",
      "offset": [
        2290,
        2301
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3367": {
      "fn": "MiniMart.buy",
      "offset": [
        2278,
        2287
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "3368": {
      "fn": "MiniMart.buy",
      "offset": [
        2278,
        2301
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xD31"
    },
    "3371": {
      "fn": "MiniMart.buy",
      "offset": [
        2278,
        2301
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3372": {
      "fn": "MiniMart.buy",
      "offset": [
        2278,
        2301
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3373": {
      "fn": "MiniMart.buy",
      "offset": [
        2278,
        2301
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1059"
    },
    "3376": {
      "fn": "MiniMart.buy",
      "jump": "i",
      "offset": [
        2278,
        2301
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3377": {
      "fn": "MiniMart.buy",
      "offset": [
        2278,
        2301
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3378": {
      "fn": "MiniMart.buy",
      "offset": [
        2277,
        2308
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xD3B"
    },
    "3381": {
      "fn": "MiniMart.buy",
      "offset": [
        2277,
        2308
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3382": {
      "fn": "MiniMart.buy",
      "offset": [
        2277,
        2308
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3383": {
      "fn": "MiniMart.buy",
      "offset": [
        2277,
        2308
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1078"
    },
    "3386": {
      "fn": "MiniMart.buy",
      "jump": "i",
      "offset": [
        2277,
        2308
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3387": {
      "fn": "MiniMart.buy",
      "offset": [
        2277,
        2308
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3388": {
      "fn": "MiniMart.buy",
      "offset": [
        2255,
        2308
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3389": {
      "op": "POP"
    },
    "3390": {
      "fn": "MiniMart.buy",
      "offset": [
        2359,
        2376
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3392": {
      "fn": "MiniMart.buy",
      "offset": [
        2404,
        2407
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x64"
    },
    "3394": {
      "fn": "MiniMart.buy",
      "offset": [
        2380,
        2400
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xD4B"
    },
    "3397": {
      "fn": "MiniMart.buy",
      "offset": [
        2392,
        2400
      ],
      "op": "DUP5",
      "path": "10"
    },
    "3398": {
      "fn": "MiniMart.buy",
      "offset": [
        2380,
        2389
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "3399": {
      "fn": "MiniMart.buy",
      "offset": [
        2380,
        2400
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1059"
    },
    "3402": {
      "fn": "MiniMart.buy",
      "jump": "i",
      "offset": [
        2380,
        2400
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3403": {
      "fn": "MiniMart.buy",
      "offset": [
        2380,
        2400
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3404": {
      "fn": "MiniMart.buy",
      "offset": [
        2379,
        2407
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xD55"
    },
    "3407": {
      "fn": "MiniMart.buy",
      "offset": [
        2379,
        2407
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3408": {
      "fn": "MiniMart.buy",
      "offset": [
        2379,
        2407
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3409": {
      "fn": "MiniMart.buy",
      "offset": [
        2379,
        2407
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1078"
    },
    "3412": {
      "fn": "MiniMart.buy",
      "jump": "i",
      "offset": [
        2379,
        2407
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3413": {
      "fn": "MiniMart.buy",
      "offset": [
        2379,
        2407
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3414": {
      "fn": "MiniMart.buy",
      "offset": [
        2359,
        2407
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3415": {
      "op": "POP"
    },
    "3416": {
      "fn": "MiniMart.buy",
      "offset": [
        2507,
        2518
      ],
      "op": "DUP2",
      "path": "10",
      "statement": 26
    },
    "3417": {
      "fn": "MiniMart.buy",
      "offset": [
        2483,
        2504
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xD62"
    },
    "3420": {
      "fn": "MiniMart.buy",
      "offset": [
        2359,
        2407
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3421": {
      "fn": "MiniMart.buy",
      "offset": [
        2483,
        2492
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "3422": {
      "fn": "MiniMart.buy",
      "offset": [
        2483,
        2504
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x109A"
    },
    "3425": {
      "fn": "MiniMart.buy",
      "jump": "i",
      "offset": [
        2483,
        2504
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3426": {
      "fn": "MiniMart.buy",
      "offset": [
        2483,
        2504
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3427": {
      "fn": "MiniMart.buy",
      "offset": [
        2483,
        2518
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xD6C"
    },
    "3430": {
      "fn": "MiniMart.buy",
      "offset": [
        2483,
        2518
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3431": {
      "fn": "MiniMart.buy",
      "offset": [
        2483,
        2518
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3432": {
      "fn": "MiniMart.buy",
      "offset": [
        2483,
        2518
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x109A"
    },
    "3435": {
      "fn": "MiniMart.buy",
      "jump": "i",
      "offset": [
        2483,
        2518
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3436": {
      "fn": "MiniMart.buy",
      "offset": [
        2483,
        2518
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3437": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3439": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3441": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3443": {
      "op": "SHL"
    },
    "3444": {
      "op": "SUB"
    },
    "3445": {
      "fn": "MiniMart.buy",
      "offset": [
        2464,
        2479
      ],
      "op": "DUP6",
      "path": "10"
    },
    "3446": {
      "fn": "MiniMart.buy",
      "offset": [
        2464,
        2479
      ],
      "op": "AND",
      "path": "10"
    },
    "3447": {
      "fn": "MiniMart.buy",
      "offset": [
        2464,
        2479
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3449": {
      "fn": "MiniMart.buy",
      "offset": [
        2464,
        2479
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3450": {
      "fn": "MiniMart.buy",
      "offset": [
        2464,
        2479
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3451": {
      "fn": "MiniMart.buy",
      "offset": [
        2464,
        2479
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3452": {
      "fn": "MiniMart.buy",
      "offset": [
        2464,
        2472
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "3454": {
      "fn": "MiniMart.buy",
      "offset": [
        2464,
        2479
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3456": {
      "fn": "MiniMart.buy",
      "offset": [
        2464,
        2479
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3457": {
      "fn": "MiniMart.buy",
      "offset": [
        2464,
        2479
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3459": {
      "fn": "MiniMart.buy",
      "offset": [
        2464,
        2479
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3460": {
      "fn": "MiniMart.buy",
      "offset": [
        2464,
        2479
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "3461": {
      "fn": "MiniMart.buy",
      "offset": [
        2464,
        2518
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3462": {
      "fn": "MiniMart.buy",
      "offset": [
        2464,
        2518
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3463": {
      "fn": "MiniMart.buy",
      "offset": [
        2464,
        2479
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3464": {
      "fn": "MiniMart.buy",
      "offset": [
        2464,
        2479
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3465": {
      "fn": "MiniMart.buy",
      "offset": [
        2464,
        2479
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3466": {
      "fn": "MiniMart.buy",
      "offset": [
        2464,
        2518
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xD94"
    },
    "3469": {
      "fn": "MiniMart.buy",
      "offset": [
        2464,
        2518
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3470": {
      "fn": "MiniMart.buy",
      "offset": [
        2464,
        2518
      ],
      "op": "DUP5",
      "path": "10"
    },
    "3471": {
      "fn": "MiniMart.buy",
      "offset": [
        2464,
        2518
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3472": {
      "fn": "MiniMart.buy",
      "offset": [
        2464,
        2518
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x10B1"
    },
    "3475": {
      "fn": "MiniMart.buy",
      "jump": "i",
      "offset": [
        2464,
        2518
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3476": {
      "fn": "MiniMart.buy",
      "offset": [
        2464,
        2518
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3477": {
      "fn": "MiniMart.buy",
      "offset": [
        2464,
        2518
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3478": {
      "fn": "MiniMart.buy",
      "offset": [
        2464,
        2518
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3479": {
      "fn": "MiniMart.buy",
      "offset": [
        2464,
        2518
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "3480": {
      "op": "POP"
    },
    "3481": {
      "op": "POP"
    },
    "3482": {
      "fn": "MiniMart.buy",
      "offset": [
        2537,
        2545
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 27,
      "value": "0x1"
    },
    "3484": {
      "fn": "MiniMart.buy",
      "offset": [
        2537,
        2545
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3485": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3487": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3489": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3491": {
      "op": "SHL"
    },
    "3492": {
      "op": "SUB"
    },
    "3493": {
      "fn": "MiniMart.buy",
      "offset": [
        2537,
        2545
      ],
      "op": "AND",
      "path": "10"
    },
    "3494": {
      "fn": "MiniMart.buy",
      "offset": [
        2528,
        2546
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3496": {
      "fn": "MiniMart.buy",
      "offset": [
        2528,
        2546
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3497": {
      "fn": "MiniMart.buy",
      "offset": [
        2528,
        2546
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3498": {
      "fn": "MiniMart.buy",
      "offset": [
        2528,
        2546
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3499": {
      "fn": "MiniMart.buy",
      "offset": [
        2528,
        2536
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "3501": {
      "fn": "MiniMart.buy",
      "offset": [
        2528,
        2546
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3503": {
      "fn": "MiniMart.buy",
      "offset": [
        2528,
        2546
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3504": {
      "fn": "MiniMart.buy",
      "offset": [
        2528,
        2546
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3506": {
      "fn": "MiniMart.buy",
      "offset": [
        2528,
        2546
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3507": {
      "fn": "MiniMart.buy",
      "offset": [
        2528,
        2546
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "3508": {
      "fn": "MiniMart.buy",
      "offset": [
        2528,
        2561
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3509": {
      "fn": "MiniMart.buy",
      "offset": [
        2528,
        2561
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3510": {
      "fn": "MiniMart.buy",
      "offset": [
        2550,
        2561
      ],
      "op": "DUP5",
      "path": "10"
    },
    "3511": {
      "fn": "MiniMart.buy",
      "offset": [
        2550,
        2561
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "3512": {
      "fn": "MiniMart.buy",
      "offset": [
        2528,
        2546
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3513": {
      "fn": "MiniMart.buy",
      "offset": [
        2528,
        2561
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xDC3"
    },
    "3516": {
      "fn": "MiniMart.buy",
      "offset": [
        2528,
        2561
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3517": {
      "fn": "MiniMart.buy",
      "offset": [
        2550,
        2561
      ],
      "op": "DUP5",
      "path": "10"
    },
    "3518": {
      "fn": "MiniMart.buy",
      "offset": [
        2550,
        2561
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3519": {
      "fn": "MiniMart.buy",
      "offset": [
        2528,
        2561
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x10B1"
    },
    "3522": {
      "fn": "MiniMart.buy",
      "jump": "i",
      "offset": [
        2528,
        2561
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3523": {
      "fn": "MiniMart.buy",
      "offset": [
        2528,
        2561
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3524": {
      "fn": "MiniMart.buy",
      "offset": [
        2528,
        2561
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "3525": {
      "fn": "MiniMart.buy",
      "offset": [
        2528,
        2561
      ],
      "op": "POP",
      "path": "10"
    },
    "3526": {
      "fn": "MiniMart.buy",
      "offset": [
        2528,
        2561
      ],
      "op": "POP",
      "path": "10"
    },
    "3527": {
      "fn": "MiniMart.buy",
      "offset": [
        2528,
        2561
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3528": {
      "fn": "MiniMart.buy",
      "offset": [
        2528,
        2561
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3529": {
      "fn": "MiniMart.buy",
      "offset": [
        2528,
        2561
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "3530": {
      "fn": "MiniMart.buy",
      "offset": [
        2528,
        2561
      ],
      "op": "POP",
      "path": "10"
    },
    "3531": {
      "fn": "MiniMart.buy",
      "offset": [
        2605,
        2614
      ],
      "op": "DUP1",
      "path": "10",
      "statement": 28
    },
    "3532": {
      "fn": "MiniMart.buy",
      "offset": [
        2571,
        2579
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "3534": {
      "fn": "MiniMart.buy",
      "offset": [
        2571,
        2601
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3536": {
      "fn": "MiniMart.buy",
      "offset": [
        2580,
        2592
      ],
      "op": "DUP8",
      "path": "10"
    },
    "3537": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3539": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3541": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3543": {
      "op": "SHL"
    },
    "3544": {
      "op": "SUB"
    },
    "3545": {
      "fn": "MiniMart.buy",
      "offset": [
        2580,
        2598
      ],
      "op": "AND",
      "path": "10"
    },
    "3546": {
      "fn": "MiniMart.buy",
      "offset": [
        2580,
        2598
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x8DA5CB5B"
    },
    "3551": {
      "fn": "MiniMart.buy",
      "offset": [
        2580,
        2600
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3553": {
      "fn": "MiniMart.buy",
      "offset": [
        2580,
        2600
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3554": {
      "fn": "MiniMart.buy",
      "offset": [
        2580,
        2600
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3555": {
      "fn": "MiniMart.buy",
      "offset": [
        2580,
        2600
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "3560": {
      "fn": "MiniMart.buy",
      "offset": [
        2580,
        2600
      ],
      "op": "AND",
      "path": "10"
    },
    "3561": {
      "fn": "MiniMart.buy",
      "offset": [
        2580,
        2600
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xE0"
    },
    "3563": {
      "fn": "MiniMart.buy",
      "offset": [
        2580,
        2600
      ],
      "op": "SHL",
      "path": "10"
    },
    "3564": {
      "fn": "MiniMart.buy",
      "offset": [
        2580,
        2600
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3565": {
      "fn": "MiniMart.buy",
      "offset": [
        2580,
        2600
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3566": {
      "fn": "MiniMart.buy",
      "offset": [
        2580,
        2600
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "3568": {
      "fn": "MiniMart.buy",
      "offset": [
        2580,
        2600
      ],
      "op": "ADD",
      "path": "10"
    },
    "3569": {
      "fn": "MiniMart.buy",
      "offset": [
        2580,
        2600
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3571": {
      "fn": "MiniMart.buy",
      "offset": [
        2580,
        2600
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3573": {
      "fn": "MiniMart.buy",
      "offset": [
        2580,
        2600
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3574": {
      "fn": "MiniMart.buy",
      "offset": [
        2580,
        2600
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3575": {
      "fn": "MiniMart.buy",
      "offset": [
        2580,
        2600
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3576": {
      "fn": "MiniMart.buy",
      "offset": [
        2580,
        2600
      ],
      "op": "SUB",
      "path": "10"
    },
    "3577": {
      "fn": "MiniMart.buy",
      "offset": [
        2580,
        2600
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3578": {
      "fn": "MiniMart.buy",
      "offset": [
        2580,
        2600
      ],
      "op": "DUP7",
      "path": "10"
    },
    "3579": {
      "fn": "MiniMart.buy",
      "offset": [
        2580,
        2600
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3580": {
      "fn": "MiniMart.buy",
      "offset": [
        2580,
        2600
      ],
      "op": "EXTCODESIZE",
      "path": "10"
    },
    "3581": {
      "fn": "MiniMart.buy",
      "offset": [
        2580,
        2600
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3582": {
      "fn": "MiniMart.buy",
      "offset": [
        2580,
        2600
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3583": {
      "fn": "MiniMart.buy",
      "offset": [
        2580,
        2600
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3584": {
      "fn": "MiniMart.buy",
      "offset": [
        2580,
        2600
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xE08"
    },
    "3587": {
      "fn": "MiniMart.buy",
      "offset": [
        2580,
        2600
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3588": {
      "fn": "MiniMart.buy",
      "offset": [
        2580,
        2600
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3590": {
      "fn": "MiniMart.buy",
      "offset": [
        2580,
        2600
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3591": {
      "fn": "MiniMart.buy",
      "offset": [
        2580,
        2600
      ],
      "op": "REVERT",
      "path": "10"
    },
    "3592": {
      "fn": "MiniMart.buy",
      "offset": [
        2580,
        2600
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3593": {
      "fn": "MiniMart.buy",
      "offset": [
        2580,
        2600
      ],
      "op": "POP",
      "path": "10"
    },
    "3594": {
      "fn": "MiniMart.buy",
      "offset": [
        2580,
        2600
      ],
      "op": "GAS",
      "path": "10"
    },
    "3595": {
      "fn": "MiniMart.buy",
      "offset": [
        2580,
        2600
      ],
      "op": "STATICCALL",
      "path": "10"
    },
    "3596": {
      "fn": "MiniMart.buy",
      "offset": [
        2580,
        2600
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3597": {
      "fn": "MiniMart.buy",
      "offset": [
        2580,
        2600
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3598": {
      "fn": "MiniMart.buy",
      "offset": [
        2580,
        2600
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3599": {
      "fn": "MiniMart.buy",
      "offset": [
        2580,
        2600
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xE1C"
    },
    "3602": {
      "fn": "MiniMart.buy",
      "offset": [
        2580,
        2600
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3603": {
      "fn": "MiniMart.buy",
      "offset": [
        2580,
        2600
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "3604": {
      "fn": "MiniMart.buy",
      "offset": [
        2580,
        2600
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3606": {
      "fn": "MiniMart.buy",
      "offset": [
        2580,
        2600
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3607": {
      "fn": "MiniMart.buy",
      "offset": [
        2580,
        2600
      ],
      "op": "RETURNDATACOPY",
      "path": "10"
    },
    "3608": {
      "fn": "MiniMart.buy",
      "offset": [
        2580,
        2600
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "3609": {
      "fn": "MiniMart.buy",
      "offset": [
        2580,
        2600
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3611": {
      "fn": "MiniMart.buy",
      "offset": [
        2580,
        2600
      ],
      "op": "REVERT",
      "path": "10"
    },
    "3612": {
      "fn": "MiniMart.buy",
      "offset": [
        2580,
        2600
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3613": {
      "fn": "MiniMart.buy",
      "offset": [
        2580,
        2600
      ],
      "op": "POP",
      "path": "10"
    },
    "3614": {
      "fn": "MiniMart.buy",
      "offset": [
        2580,
        2600
      ],
      "op": "POP",
      "path": "10"
    },
    "3615": {
      "fn": "MiniMart.buy",
      "offset": [
        2580,
        2600
      ],
      "op": "POP",
      "path": "10"
    },
    "3616": {
      "fn": "MiniMart.buy",
      "offset": [
        2580,
        2600
      ],
      "op": "POP",
      "path": "10"
    },
    "3617": {
      "fn": "MiniMart.buy",
      "offset": [
        2580,
        2600
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3619": {
      "fn": "MiniMart.buy",
      "offset": [
        2580,
        2600
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3620": {
      "fn": "MiniMart.buy",
      "offset": [
        2580,
        2600
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "3621": {
      "fn": "MiniMart.buy",
      "offset": [
        2580,
        2600
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "3623": {
      "fn": "MiniMart.buy",
      "offset": [
        2580,
        2600
      ],
      "op": "NOT",
      "path": "10"
    },
    "3624": {
      "fn": "MiniMart.buy",
      "offset": [
        2580,
        2600
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "3626": {
      "fn": "MiniMart.buy",
      "offset": [
        2580,
        2600
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3627": {
      "fn": "MiniMart.buy",
      "offset": [
        2580,
        2600
      ],
      "op": "ADD",
      "path": "10"
    },
    "3628": {
      "fn": "MiniMart.buy",
      "offset": [
        2580,
        2600
      ],
      "op": "AND",
      "path": "10"
    },
    "3629": {
      "fn": "MiniMart.buy",
      "offset": [
        2580,
        2600
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3630": {
      "fn": "MiniMart.buy",
      "offset": [
        2580,
        2600
      ],
      "op": "ADD",
      "path": "10"
    },
    "3631": {
      "fn": "MiniMart.buy",
      "offset": [
        2580,
        2600
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3632": {
      "fn": "MiniMart.buy",
      "offset": [
        2580,
        2600
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3634": {
      "fn": "MiniMart.buy",
      "offset": [
        2580,
        2600
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3635": {
      "fn": "MiniMart.buy",
      "offset": [
        2580,
        2600
      ],
      "op": "POP",
      "path": "10"
    },
    "3636": {
      "fn": "MiniMart.buy",
      "offset": [
        2580,
        2600
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3637": {
      "fn": "MiniMart.buy",
      "offset": [
        2580,
        2600
      ],
      "op": "ADD",
      "path": "10"
    },
    "3638": {
      "fn": "MiniMart.buy",
      "offset": [
        2580,
        2600
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3639": {
      "fn": "MiniMart.buy",
      "offset": [
        2580,
        2600
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xE40"
    },
    "3642": {
      "fn": "MiniMart.buy",
      "offset": [
        2580,
        2600
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3643": {
      "fn": "MiniMart.buy",
      "offset": [
        2580,
        2600
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3644": {
      "fn": "MiniMart.buy",
      "offset": [
        2580,
        2600
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xFB2"
    },
    "3647": {
      "fn": "MiniMart.buy",
      "jump": "i",
      "offset": [
        2580,
        2600
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3648": {
      "fn": "MiniMart.buy",
      "offset": [
        2580,
        2600
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3649": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3651": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3653": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3655": {
      "op": "SHL"
    },
    "3656": {
      "op": "SUB"
    },
    "3657": {
      "fn": "MiniMart.buy",
      "offset": [
        2571,
        2601
      ],
      "op": "AND",
      "path": "10"
    },
    "3658": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3660": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3662": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3664": {
      "op": "SHL"
    },
    "3665": {
      "op": "SUB"
    },
    "3666": {
      "fn": "MiniMart.buy",
      "offset": [
        2571,
        2601
      ],
      "op": "AND",
      "path": "10"
    },
    "3667": {
      "fn": "MiniMart.buy",
      "offset": [
        2571,
        2601
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3668": {
      "fn": "MiniMart.buy",
      "offset": [
        2571,
        2601
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3669": {
      "fn": "MiniMart.buy",
      "offset": [
        2571,
        2601
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3671": {
      "fn": "MiniMart.buy",
      "offset": [
        2571,
        2601
      ],
      "op": "ADD",
      "path": "10"
    },
    "3672": {
      "fn": "MiniMart.buy",
      "offset": [
        2571,
        2601
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3673": {
      "fn": "MiniMart.buy",
      "offset": [
        2571,
        2601
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3674": {
      "fn": "MiniMart.buy",
      "offset": [
        2571,
        2601
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3675": {
      "fn": "MiniMart.buy",
      "offset": [
        2571,
        2601
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3677": {
      "fn": "MiniMart.buy",
      "offset": [
        2571,
        2601
      ],
      "op": "ADD",
      "path": "10"
    },
    "3678": {
      "fn": "MiniMart.buy",
      "offset": [
        2571,
        2601
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3680": {
      "fn": "MiniMart.buy",
      "offset": [
        2571,
        2601
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "3681": {
      "fn": "MiniMart.buy",
      "offset": [
        2571,
        2601
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3683": {
      "fn": "MiniMart.buy",
      "offset": [
        2571,
        2614
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3684": {
      "fn": "MiniMart.buy",
      "offset": [
        2571,
        2614
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3685": {
      "fn": "MiniMart.buy",
      "offset": [
        2571,
        2614
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3686": {
      "fn": "MiniMart.buy",
      "offset": [
        2571,
        2614
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xE6F"
    },
    "3689": {
      "fn": "MiniMart.buy",
      "offset": [
        2571,
        2614
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3690": {
      "fn": "MiniMart.buy",
      "offset": [
        2571,
        2614
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3691": {
      "fn": "MiniMart.buy",
      "offset": [
        2571,
        2614
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x10B1"
    },
    "3694": {
      "fn": "MiniMart.buy",
      "jump": "i",
      "offset": [
        2571,
        2614
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3695": {
      "fn": "MiniMart.buy",
      "offset": [
        2571,
        2614
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3696": {
      "fn": "MiniMart.buy",
      "offset": [
        2571,
        2614
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3697": {
      "fn": "MiniMart.buy",
      "offset": [
        2571,
        2614
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3698": {
      "fn": "MiniMart.buy",
      "offset": [
        2571,
        2614
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "3699": {
      "op": "POP"
    },
    "3700": {
      "op": "POP"
    },
    "3701": {
      "fn": "MiniMart.buy",
      "offset": [
        2630,
        2670
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 29,
      "value": "0x40"
    },
    "3703": {
      "fn": "MiniMart.buy",
      "offset": [
        2630,
        2670
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3704": {
      "fn": "MiniMart.buy",
      "offset": [
        2630,
        2670
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3705": {
      "op": "DUP8"
    },
    "3706": {
      "op": "DUP2"
    },
    "3707": {
      "op": "MSTORE"
    },
    "3708": {
      "fn": "MiniMart.buy",
      "offset": [
        2660,
        2669
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "3709": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3711": {
      "op": "DUP3"
    },
    "3712": {
      "op": "ADD"
    },
    "3713": {
      "op": "MSTORE"
    },
    "3714": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3716": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3718": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3720": {
      "op": "SHL"
    },
    "3721": {
      "op": "SUB"
    },
    "3722": {
      "fn": "MiniMart.buy",
      "offset": [
        2630,
        2670
      ],
      "op": "DUP10",
      "path": "10"
    },
    "3723": {
      "fn": "MiniMart.buy",
      "offset": [
        2630,
        2670
      ],
      "op": "AND",
      "path": "10"
    },
    "3724": {
      "fn": "MiniMart.buy",
      "offset": [
        2630,
        2670
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3725": {
      "fn": "MiniMart.buy",
      "offset": [
        2630,
        2670
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0xBAC9694AC0DAA55169ABD117086FE32C89401D9A3B15DD1D34E55E0AA4E47A9D"
    },
    "3758": {
      "fn": "MiniMart.buy",
      "offset": [
        2630,
        2670
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3759": {
      "op": "ADD"
    },
    "3760": {
      "fn": "MiniMart.buy",
      "offset": [
        2630,
        2670
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3762": {
      "fn": "MiniMart.buy",
      "offset": [
        2630,
        2670
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3763": {
      "fn": "MiniMart.buy",
      "offset": [
        2630,
        2670
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3764": {
      "fn": "MiniMart.buy",
      "offset": [
        2630,
        2670
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3765": {
      "fn": "MiniMart.buy",
      "offset": [
        2630,
        2670
      ],
      "op": "SUB",
      "path": "10"
    },
    "3766": {
      "fn": "MiniMart.buy",
      "offset": [
        2630,
        2670
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3767": {
      "fn": "MiniMart.buy",
      "offset": [
        2630,
        2670
      ],
      "op": "LOG2",
      "path": "10"
    },
    "3768": {
      "op": "POP"
    },
    "3769": {
      "op": "POP"
    },
    "3770": {
      "offset": [
        1637,
        1638
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "3772": {
      "offset": [
        2563,
        2570
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3774": {
      "offset": [
        2563,
        2585
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "3775": {
      "op": "POP"
    },
    "3776": {
      "op": "POP"
    },
    "3777": {
      "op": "POP"
    },
    "3778": {
      "op": "POP"
    },
    "3779": {
      "op": "POP"
    },
    "3780": {
      "fn": "MiniMart.buy",
      "jump": "o",
      "offset": [
        1690,
        2677
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3781": {
      "op": "JUMPDEST"
    },
    "3782": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3784": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3786": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3788": {
      "op": "SHL"
    },
    "3789": {
      "op": "SUB"
    },
    "3790": {
      "op": "DUP2"
    },
    "3791": {
      "op": "AND"
    },
    "3792": {
      "op": "DUP2"
    },
    "3793": {
      "op": "EQ"
    },
    "3794": {
      "op": "PUSH2",
      "value": "0xEDA"
    },
    "3797": {
      "op": "JUMPI"
    },
    "3798": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3800": {
      "op": "DUP1"
    },
    "3801": {
      "op": "REVERT"
    },
    "3802": {
      "op": "JUMPDEST"
    },
    "3803": {
      "op": "POP"
    },
    "3804": {
      "jump": "o",
      "op": "JUMP"
    },
    "3805": {
      "op": "JUMPDEST"
    },
    "3806": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3808": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3810": {
      "op": "DUP3"
    },
    "3811": {
      "op": "DUP5"
    },
    "3812": {
      "op": "SUB"
    },
    "3813": {
      "op": "SLT"
    },
    "3814": {
      "op": "ISZERO"
    },
    "3815": {
      "op": "PUSH2",
      "value": "0xEEF"
    },
    "3818": {
      "op": "JUMPI"
    },
    "3819": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3821": {
      "op": "DUP1"
    },
    "3822": {
      "op": "REVERT"
    },
    "3823": {
      "op": "JUMPDEST"
    },
    "3824": {
      "op": "DUP2"
    },
    "3825": {
      "op": "CALLDATALOAD"
    },
    "3826": {
      "op": "PUSH2",
      "value": "0xEFA"
    },
    "3829": {
      "op": "DUP2"
    },
    "3830": {
      "op": "PUSH2",
      "value": "0xEC5"
    },
    "3833": {
      "jump": "i",
      "op": "JUMP"
    },
    "3834": {
      "op": "JUMPDEST"
    },
    "3835": {
      "op": "SWAP4"
    },
    "3836": {
      "op": "SWAP3"
    },
    "3837": {
      "op": "POP"
    },
    "3838": {
      "op": "POP"
    },
    "3839": {
      "op": "POP"
    },
    "3840": {
      "jump": "o",
      "op": "JUMP"
    },
    "3841": {
      "op": "JUMPDEST"
    },
    "3842": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3844": {
      "op": "DUP1"
    },
    "3845": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3847": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3849": {
      "op": "DUP5"
    },
    "3850": {
      "op": "DUP7"
    },
    "3851": {
      "op": "SUB"
    },
    "3852": {
      "op": "SLT"
    },
    "3853": {
      "op": "ISZERO"
    },
    "3854": {
      "op": "PUSH2",
      "value": "0xF16"
    },
    "3857": {
      "op": "JUMPI"
    },
    "3858": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3860": {
      "op": "DUP1"
    },
    "3861": {
      "op": "REVERT"
    },
    "3862": {
      "op": "JUMPDEST"
    },
    "3863": {
      "op": "DUP4"
    },
    "3864": {
      "op": "CALLDATALOAD"
    },
    "3865": {
      "op": "PUSH2",
      "value": "0xF21"
    },
    "3868": {
      "op": "DUP2"
    },
    "3869": {
      "op": "PUSH2",
      "value": "0xEC5"
    },
    "3872": {
      "jump": "i",
      "op": "JUMP"
    },
    "3873": {
      "op": "JUMPDEST"
    },
    "3874": {
      "op": "SWAP6"
    },
    "3875": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3877": {
      "op": "DUP6"
    },
    "3878": {
      "op": "ADD"
    },
    "3879": {
      "op": "CALLDATALOAD"
    },
    "3880": {
      "op": "SWAP6"
    },
    "3881": {
      "op": "POP"
    },
    "3882": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3884": {
      "op": "SWAP1"
    },
    "3885": {
      "op": "SWAP5"
    },
    "3886": {
      "op": "ADD"
    },
    "3887": {
      "op": "CALLDATALOAD"
    },
    "3888": {
      "op": "SWAP4"
    },
    "3889": {
      "op": "SWAP3"
    },
    "3890": {
      "op": "POP"
    },
    "3891": {
      "op": "POP"
    },
    "3892": {
      "op": "POP"
    },
    "3893": {
      "jump": "o",
      "op": "JUMP"
    },
    "3894": {
      "op": "JUMPDEST"
    },
    "3895": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3897": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3899": {
      "op": "DUP3"
    },
    "3900": {
      "op": "DUP5"
    },
    "3901": {
      "op": "SUB"
    },
    "3902": {
      "op": "SLT"
    },
    "3903": {
      "op": "ISZERO"
    },
    "3904": {
      "op": "PUSH2",
      "value": "0xF48"
    },
    "3907": {
      "op": "JUMPI"
    },
    "3908": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3910": {
      "op": "DUP1"
    },
    "3911": {
      "op": "REVERT"
    },
    "3912": {
      "op": "JUMPDEST"
    },
    "3913": {
      "op": "POP"
    },
    "3914": {
      "op": "CALLDATALOAD"
    },
    "3915": {
      "op": "SWAP2"
    },
    "3916": {
      "op": "SWAP1"
    },
    "3917": {
      "op": "POP"
    },
    "3918": {
      "jump": "o",
      "op": "JUMP"
    },
    "3919": {
      "op": "JUMPDEST"
    },
    "3920": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3922": {
      "op": "DUP1"
    },
    "3923": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3925": {
      "op": "DUP4"
    },
    "3926": {
      "op": "DUP6"
    },
    "3927": {
      "op": "SUB"
    },
    "3928": {
      "op": "SLT"
    },
    "3929": {
      "op": "ISZERO"
    },
    "3930": {
      "op": "PUSH2",
      "value": "0xF62"
    },
    "3933": {
      "op": "JUMPI"
    },
    "3934": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3936": {
      "op": "DUP1"
    },
    "3937": {
      "op": "REVERT"
    },
    "3938": {
      "op": "JUMPDEST"
    },
    "3939": {
      "op": "DUP3"
    },
    "3940": {
      "op": "CALLDATALOAD"
    },
    "3941": {
      "op": "PUSH2",
      "value": "0xF6D"
    },
    "3944": {
      "op": "DUP2"
    },
    "3945": {
      "op": "PUSH2",
      "value": "0xEC5"
    },
    "3948": {
      "jump": "i",
      "op": "JUMP"
    },
    "3949": {
      "op": "JUMPDEST"
    },
    "3950": {
      "op": "SWAP5"
    },
    "3951": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3953": {
      "op": "SWAP4"
    },
    "3954": {
      "op": "SWAP1"
    },
    "3955": {
      "op": "SWAP4"
    },
    "3956": {
      "op": "ADD"
    },
    "3957": {
      "op": "CALLDATALOAD"
    },
    "3958": {
      "op": "SWAP4"
    },
    "3959": {
      "op": "POP"
    },
    "3960": {
      "op": "POP"
    },
    "3961": {
      "op": "POP"
    },
    "3962": {
      "jump": "o",
      "op": "JUMP"
    },
    "3963": {
      "op": "JUMPDEST"
    },
    "3964": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3966": {
      "op": "DUP1"
    },
    "3967": {
      "op": "DUP3"
    },
    "3968": {
      "op": "MSTORE"
    },
    "3969": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3971": {
      "op": "SWAP1"
    },
    "3972": {
      "op": "DUP3"
    },
    "3973": {
      "op": "ADD"
    },
    "3974": {
      "op": "MSTORE"
    },
    "3975": {
      "op": "PUSH32",
      "value": "0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
    },
    "4008": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4010": {
      "op": "DUP3"
    },
    "4011": {
      "op": "ADD"
    },
    "4012": {
      "op": "MSTORE"
    },
    "4013": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4015": {
      "op": "ADD"
    },
    "4016": {
      "op": "SWAP1"
    },
    "4017": {
      "jump": "o",
      "op": "JUMP"
    },
    "4018": {
      "op": "JUMPDEST"
    },
    "4019": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4021": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4023": {
      "op": "DUP3"
    },
    "4024": {
      "op": "DUP5"
    },
    "4025": {
      "op": "SUB"
    },
    "4026": {
      "op": "SLT"
    },
    "4027": {
      "op": "ISZERO"
    },
    "4028": {
      "op": "PUSH2",
      "value": "0xFC4"
    },
    "4031": {
      "op": "JUMPI"
    },
    "4032": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4034": {
      "op": "DUP1"
    },
    "4035": {
      "op": "REVERT"
    },
    "4036": {
      "op": "JUMPDEST"
    },
    "4037": {
      "op": "DUP2"
    },
    "4038": {
      "op": "MLOAD"
    },
    "4039": {
      "op": "PUSH2",
      "value": "0xEFA"
    },
    "4042": {
      "op": "DUP2"
    },
    "4043": {
      "op": "PUSH2",
      "value": "0xEC5"
    },
    "4046": {
      "jump": "i",
      "op": "JUMP"
    },
    "4047": {
      "op": "JUMPDEST"
    },
    "4048": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4050": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4052": {
      "op": "DUP3"
    },
    "4053": {
      "op": "DUP5"
    },
    "4054": {
      "op": "SUB"
    },
    "4055": {
      "op": "SLT"
    },
    "4056": {
      "op": "ISZERO"
    },
    "4057": {
      "op": "PUSH2",
      "value": "0xFE1"
    },
    "4060": {
      "op": "JUMPI"
    },
    "4061": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4063": {
      "op": "DUP1"
    },
    "4064": {
      "op": "REVERT"
    },
    "4065": {
      "op": "JUMPDEST"
    },
    "4066": {
      "op": "POP"
    },
    "4067": {
      "op": "MLOAD"
    },
    "4068": {
      "op": "SWAP2"
    },
    "4069": {
      "op": "SWAP1"
    },
    "4070": {
      "op": "POP"
    },
    "4071": {
      "jump": "o",
      "op": "JUMP"
    },
    "4072": {
      "op": "JUMPDEST"
    },
    "4073": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4075": {
      "op": "DUP1"
    },
    "4076": {
      "op": "DUP3"
    },
    "4077": {
      "op": "MSTORE"
    },
    "4078": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "4080": {
      "op": "SWAP1"
    },
    "4081": {
      "op": "DUP3"
    },
    "4082": {
      "op": "ADD"
    },
    "4083": {
      "op": "MSTORE"
    },
    "4084": {
      "op": "PUSH32",
      "value": "0x4E6F2070726963652073657420666F72207468697320746F6B656E2E00000000"
    },
    "4117": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4119": {
      "op": "DUP3"
    },
    "4120": {
      "op": "ADD"
    },
    "4121": {
      "op": "MSTORE"
    },
    "4122": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4124": {
      "op": "ADD"
    },
    "4125": {
      "op": "SWAP1"
    },
    "4126": {
      "jump": "o",
      "op": "JUMP"
    },
    "4127": {
      "op": "JUMPDEST"
    },
    "4128": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4130": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4132": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4134": {
      "op": "SHL"
    },
    "4135": {
      "op": "SUB"
    },
    "4136": {
      "op": "SWAP4"
    },
    "4137": {
      "op": "DUP5"
    },
    "4138": {
      "op": "AND"
    },
    "4139": {
      "op": "DUP2"
    },
    "4140": {
      "op": "MSTORE"
    },
    "4141": {
      "op": "SWAP2"
    },
    "4142": {
      "op": "SWAP1"
    },
    "4143": {
      "op": "SWAP3"
    },
    "4144": {
      "op": "AND"
    },
    "4145": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4147": {
      "op": "DUP3"
    },
    "4148": {
      "op": "ADD"
    },
    "4149": {
      "op": "MSTORE"
    },
    "4150": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4152": {
      "op": "DUP2"
    },
    "4153": {
      "op": "ADD"
    },
    "4154": {
      "op": "SWAP2"
    },
    "4155": {
      "op": "SWAP1"
    },
    "4156": {
      "op": "SWAP2"
    },
    "4157": {
      "op": "MSTORE"
    },
    "4158": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4160": {
      "op": "ADD"
    },
    "4161": {
      "op": "SWAP1"
    },
    "4162": {
      "jump": "o",
      "op": "JUMP"
    },
    "4163": {
      "op": "JUMPDEST"
    },
    "4164": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4169": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4171": {
      "op": "SHL"
    },
    "4172": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4174": {
      "op": "MSTORE"
    },
    "4175": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "4177": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4179": {
      "op": "MSTORE"
    },
    "4180": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4182": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4184": {
      "op": "REVERT"
    },
    "4185": {
      "op": "JUMPDEST"
    },
    "4186": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4188": {
      "op": "DUP2"
    },
    "4189": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4191": {
      "op": "NOT"
    },
    "4192": {
      "op": "DIV"
    },
    "4193": {
      "op": "DUP4"
    },
    "4194": {
      "op": "GT"
    },
    "4195": {
      "op": "DUP3"
    },
    "4196": {
      "op": "ISZERO"
    },
    "4197": {
      "op": "ISZERO"
    },
    "4198": {
      "op": "AND"
    },
    "4199": {
      "op": "ISZERO"
    },
    "4200": {
      "op": "PUSH2",
      "value": "0x1073"
    },
    "4203": {
      "op": "JUMPI"
    },
    "4204": {
      "op": "PUSH2",
      "value": "0x1073"
    },
    "4207": {
      "op": "PUSH2",
      "value": "0x1043"
    },
    "4210": {
      "jump": "i",
      "op": "JUMP"
    },
    "4211": {
      "op": "JUMPDEST"
    },
    "4212": {
      "op": "POP"
    },
    "4213": {
      "op": "MUL"
    },
    "4214": {
      "op": "SWAP1"
    },
    "4215": {
      "jump": "o",
      "op": "JUMP"
    },
    "4216": {
      "op": "JUMPDEST"
    },
    "4217": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4219": {
      "op": "DUP3"
    },
    "4220": {
      "op": "PUSH2",
      "value": "0x1095"
    },
    "4223": {
      "op": "JUMPI"
    },
    "4224": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4229": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4231": {
      "op": "SHL"
    },
    "4232": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4234": {
      "op": "MSTORE"
    },
    "4235": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "4237": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4239": {
      "op": "MSTORE"
    },
    "4240": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4242": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4244": {
      "op": "REVERT"
    },
    "4245": {
      "op": "JUMPDEST"
    },
    "4246": {
      "op": "POP"
    },
    "4247": {
      "op": "DIV"
    },
    "4248": {
      "op": "SWAP1"
    },
    "4249": {
      "jump": "o",
      "op": "JUMP"
    },
    "4250": {
      "op": "JUMPDEST"
    },
    "4251": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4253": {
      "op": "DUP3"
    },
    "4254": {
      "op": "DUP3"
    },
    "4255": {
      "op": "LT"
    },
    "4256": {
      "op": "ISZERO"
    },
    "4257": {
      "op": "PUSH2",
      "value": "0x10AC"
    },
    "4260": {
      "op": "JUMPI"
    },
    "4261": {
      "op": "PUSH2",
      "value": "0x10AC"
    },
    "4264": {
      "op": "PUSH2",
      "value": "0x1043"
    },
    "4267": {
      "jump": "i",
      "op": "JUMP"
    },
    "4268": {
      "op": "JUMPDEST"
    },
    "4269": {
      "op": "POP"
    },
    "4270": {
      "op": "SUB"
    },
    "4271": {
      "op": "SWAP1"
    },
    "4272": {
      "jump": "o",
      "op": "JUMP"
    },
    "4273": {
      "op": "JUMPDEST"
    },
    "4274": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4276": {
      "op": "DUP3"
    },
    "4277": {
      "op": "NOT"
    },
    "4278": {
      "op": "DUP3"
    },
    "4279": {
      "op": "GT"
    },
    "4280": {
      "op": "ISZERO"
    },
    "4281": {
      "op": "PUSH2",
      "value": "0x10C4"
    },
    "4284": {
      "op": "JUMPI"
    },
    "4285": {
      "op": "PUSH2",
      "value": "0x10C4"
    },
    "4288": {
      "op": "PUSH2",
      "value": "0x1043"
    },
    "4291": {
      "jump": "i",
      "op": "JUMP"
    },
    "4292": {
      "op": "JUMPDEST"
    },
    "4293": {
      "op": "POP"
    },
    "4294": {
      "op": "ADD"
    },
    "4295": {
      "op": "SWAP1"
    },
    "4296": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "a354bbc7e491eb82f13ee9dc462b5e528262e47e",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.9;\n\nimport \"./BookTradable.sol\";\nimport \"./CultureCoin.sol\";\nimport \"./send_receive.sol\";\nimport \"../openzeppelin-solidity/contracts/security/ReentrancyGuard.sol\";\n\ncontract MiniMart is Receiver, ReentrancyGuard {\n\n    event OnSale(address indexed hostContract, address indexed offerer, uint tokenId, uint price);\n    event Sold(address indexed hostContract, uint tokenId, uint256 price);\n    event BalanceWithdrawn (address indexed beneficiary, uint amount);\n    event OperatorChanged (address previousOperator, address newOperator);\n\n    address operator;\n    uint256 private operatorFee;\n\n    mapping (address => uint) balances;\n\n    mapping(address => mapping(uint256 => uint256)) public price;\n\n    address private cCA;        /// Adminisistrator\n    address private gasToken;   /// culturecoin.\n    constructor (address _operator, address _cCA, address _gasToken) { // me :: me :: culturecoin\n        operator = _operator;\n        operatorFee = 1;  // 1% is the default.\n        cCA = _cCA;\n        gasToken = _gasToken;\n    }\n\n    function setFee(uint256 _fee) external {\n        require(msg.sender == operator, \"Only the operator may change the fee for the marketplace.\");\n\n        operatorFee = _fee;\n    }\n\n    function sell(address _hostContract, uint _tokenId, uint _price) external nonReentrant returns(bytes32) {\n        BookTradable hostContract = BookTradable(_hostContract);\n        address owner = hostContract.ownerOf(_tokenId);\n        require(msg.sender == owner, \"Caller does not own token\");\n\n        price[_hostContract][_tokenId] = _price;\n\n        emit OnSale(_hostContract, owner, _tokenId, _price);\n    }\n\n    function buy(address _hostContract, uint _tokenId) external nonReentrant payable {\n        BookTradable hostContract = BookTradable(_hostContract);\n        address owner = hostContract.ownerOf(_tokenId);\n        require(price[_hostContract][_tokenId] > 0, \"No price set for this token.\");\n        require(msg.value >= price[_hostContract][_tokenId], \"Not enough funds to buy.\");\n\n        hostContract.safeTransferFromRegistry(owner, msg.sender, _tokenId);\n\n        price[_hostContract][_tokenId] = 0;\n\n        uint256 ownerFee = hostContract.getRoyalty();\n\n        uint256 operatorCut = (msg.value * operatorFee) / 100;          // Divide to make it a percent.\n        uint256 royalties = (msg.value * ownerFee) / 100;               // Divide to make it a percent.\n\n        balances[owner] += msg.value - royalties - operatorCut;\n        balances[operator] += operatorCut;\n        balances[hostContract.owner()] += royalties;\n\n        emit Sold(_hostContract, _tokenId, msg.value);\n    }\n\n    function buyWithCC(address _hostContract, uint _tokenId, uint256 _amount) external nonReentrant {\n        CultureCoin CC = CultureCoin(gasToken);\n        BookTradable hostContract = BookTradable(_hostContract);\n        address owner = hostContract.ownerOf(_tokenId);\n        uint256 msgValue = CC.dexCCInFrom(msg.sender, _amount);\n        require(msgValue >=  price[_hostContract][_tokenId], \"Not enough funds to buy\");\n        require(price[_hostContract][_tokenId] > 0, \"No price set for this token.\");\n\n        hostContract.safeTransferFromRegistry(owner, msg.sender, _tokenId);\n\n        uint256 ownerFee = hostContract.getRoyalty();\n\n        uint256 operatorCut = (msgValue * operatorFee) / 100;          // Divide to make it a percent.\n        uint256 royalties = (msgValue * ownerFee) / 100;               // Divide to make it a percent.\n\n        balances[owner] += msgValue - royalties - operatorCut;\n        balances[operator] += operatorCut;\n        balances[hostContract.owner()] += royalties;\n\n        emit Sold(_hostContract, _tokenId, msgValue);\n    }\n\n    function withdrawBalance() external nonReentrant {\n        require(balances[msg.sender] > 0,\"You don't have any balance to withdraw\");\n        uint amount = balances[msg.sender];\n        payable(msg.sender).transfer(amount);\n        balances[msg.sender] = 0;\n        emit BalanceWithdrawn(msg.sender, amount);\n    }\n\n    function changeOperator(address _newOperator) external nonReentrant {\n        require(msg.sender == operator,\"only the operator can change the current operator\");\n        address previousOperator = operator;\n        operator = msg.sender;\n        emit OperatorChanged(previousOperator, operator);\n    }\n\n    function viewBalances(address _address) external view returns (uint) {\n        return (balances[_address]);\n    }\n\n    function setGasToken(address _gasToken) public {\n        require(msg.sender == cCA || msg.sender == operator, \"no\");\n        gasToken = _gasToken; // The new CC's address.\n    }\n}\n\n",
  "sourceMap": "217:4463:10:-:0;;;857:227;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1637:1:22;1743:7;:22;;;959:20:10;;-1:-1:-1;;;;;959:20:10;;;-1:-1:-1;;;;;;959:20:10;;;;;;989:11;:15;;;;1037:3;:10;;;;;;;;;;;;;;;1057:8;:20;;;;;;;;;;;217:4463;;14:177:40;93:13;;-1:-1:-1;;;;;135:31:40;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:378::-;284:6;292;300;353:2;341:9;332:7;328:23;324:32;321:52;;;369:1;366;359:12;321:52;392:40;422:9;392:40;:::i;:::-;382:50;;451:49;496:2;485:9;481:18;451:49;:::i;:::-;441:59;;519:49;564:2;553:9;549:18;519:49;:::i;:::-;509:59;;196:378;;;;;:::o;:::-;217:4463:10;;;;;;",
  "sourcePath": "contracts/mini_mart.sol",
  "type": "contract"
}